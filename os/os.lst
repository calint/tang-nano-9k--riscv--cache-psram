
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# # generated - do not edit (see `configuration.py`)
# .global _start
# _start:
#     li sp, 0x200000
       0:	00200137          	lui	sp,0x200
#     jal ra, run
       4:	2dc000ef          	jal	2e0 <run>

00000008 <_ZL9action_gohh>:
       8:	00151713          	sll	a4,a0,0x1
       c:	00a707b3          	add	a5,a4,a0
      10:	00279793          	sll	a5,a5,0x2
      14:	40a787b3          	sub	a5,a5,a0
      18:	00002837          	lui	a6,0x2
      1c:	33c80813          	add	a6,a6,828 # 233c <_ZL8entities>
      20:	00279793          	sll	a5,a5,0x2
      24:	00f807b3          	add	a5,a6,a5
      28:	0047c303          	lbu	t1,4(a5)
      2c:	00231613          	sll	a2,t1,0x2
      30:	006607b3          	add	a5,a2,t1
      34:	00579793          	sll	a5,a5,0x5
      38:	00f807b3          	add	a5,a6,a5
      3c:	1207a683          	lw	a3,288(a5)
      40:	02d5e663          	bltu	a1,a3,6c <_ZL9action_gohh+0x64>
      44:	00002737          	lui	a4,0x2
      48:	06300693          	li	a3,99
      4c:	c4070713          	add	a4,a4,-960 # 1c40 <memset+0xec>
#     while (*UART_OUT)
      50:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
      54:	fe079ee3          	bnez	a5,50 <_ZL9action_gohh+0x48>
#     *UART_OUT = *str++;
      58:	00170713          	add	a4,a4,1
      5c:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
      60:	00074683          	lbu	a3,0(a4)
      64:	fe0696e3          	bnez	a3,50 <_ZL9action_gohh+0x48>
      68:	00008067          	ret
#     return true;
#   }
# 
#   auto at(size_t const ix) const -> Type {
#     if (ix < len) {
#       return data[ix];
      6c:	00b785b3          	add	a1,a5,a1
      70:	1185c883          	lbu	a7,280(a1)
# 
# static auto action_go(entity_id_t const eid, direction_t const dir) -> void {
#   entity &ent = entities[eid];
#   location &loc = locations[ent.location];
#   location_id_t const to = loc.exits.at(dir);
#   if (!to) {
      74:	fc0888e3          	beqz	a7,44 <_ZL9action_gohh+0x3c>
#     if (len == Size - 1) {
      78:	00289693          	sll	a3,a7,0x2
      7c:	011686b3          	add	a3,a3,a7
      80:	00569693          	sll	a3,a3,0x5
      84:	00d806b3          	add	a3,a6,a3
      88:	1146ae03          	lw	t3,276(a3)
      8c:	00700593          	li	a1,7
      90:	14be0263          	beq	t3,a1,1d4 <_ZL9action_gohh+0x1cc>
#     ++len;
      94:	001e0593          	add	a1,t3,1
      98:	10b6aa23          	sw	a1,276(a3)
#     for (size_t i = 0; i < len; ++i) {
      9c:	1147a583          	lw	a1,276(a5)
#     data[len] = elem;
      a0:	01c686b3          	add	a3,a3,t3
      a4:	10a68623          	sb	a0,268(a3)
#     for (size_t i = 0; i < len; ++i) {
      a8:	10058863          	beqz	a1,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
      ac:	10c7ce03          	lbu	t3,268(a5)
#     for (size_t i = 0; i < len; ++i) {
      b0:	00000693          	li	a3,0
#       if (data[i] != elem) {
      b4:	00ae0a63          	beq	t3,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
      b8:	00100693          	li	a3,1
      bc:	0ed58e63          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
      c0:	10d7ce03          	lbu	t3,269(a5)
      c4:	10ae1a63          	bne	t3,a0,1d8 <_ZL9action_gohh+0x1d0>
#       --len;
      c8:	006607b3          	add	a5,a2,t1
      cc:	00579793          	sll	a5,a5,0x5
      d0:	fff58e13          	add	t3,a1,-1
      d4:	00f80eb3          	add	t4,a6,a5
      d8:	11ceaa23          	sw	t3,276(t4)
#       for (size_t j = i; j < len; ++j) {
      dc:	0dc6fe63          	bgeu	a3,t3,1b8 <_ZL9action_gohh+0x1b0>
      e0:	40d585b3          	sub	a1,a1,a3
      e4:	ffe58f13          	add	t5,a1,-2
      e8:	00500e93          	li	t4,5
      ec:	03eef463          	bgeu	t4,t5,114 <_ZL9action_gohh+0x10c>
      f0:	00d787b3          	add	a5,a5,a3
      f4:	08480e93          	add	t4,a6,132
      f8:	08878f13          	add	t5,a5,136
      fc:	08978793          	add	a5,a5,137
     100:	01ee8f33          	add	t5,t4,t5
     104:	00fe8eb3          	add	t4,t4,a5
     108:	01df67b3          	or	a5,t5,t4
     10c:	0037f793          	and	a5,a5,3
     110:	12078e63          	beqz	a5,24c <_ZL9action_gohh+0x244>
#         data[j] = data[j + 1];
     114:	006607b3          	add	a5,a2,t1
     118:	00579793          	sll	a5,a5,0x5
     11c:	00f807b3          	add	a5,a6,a5
     120:	00168613          	add	a2,a3,1
     124:	00c785b3          	add	a1,a5,a2
     128:	10c5c303          	lbu	t1,268(a1)
     12c:	00d78eb3          	add	t4,a5,a3
     130:	106e8623          	sb	t1,268(t4)
#       for (size_t j = i; j < len; ++j) {
     134:	09c67263          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     138:	00268613          	add	a2,a3,2
     13c:	00c78333          	add	t1,a5,a2
     140:	10c34f03          	lbu	t5,268(t1)
     144:	11e58623          	sb	t5,268(a1)
#       for (size_t j = i; j < len; ++j) {
     148:	07c67863          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     14c:	00368613          	add	a2,a3,3
     150:	00c785b3          	add	a1,a5,a2
     154:	10c5cf03          	lbu	t5,268(a1)
     158:	11e30623          	sb	t5,268(t1)
#       for (size_t j = i; j < len; ++j) {
     15c:	05c67e63          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     160:	00468613          	add	a2,a3,4
     164:	00c78333          	add	t1,a5,a2
     168:	10c34f03          	lbu	t5,268(t1)
     16c:	11e58623          	sb	t5,268(a1)
#       for (size_t j = i; j < len; ++j) {
     170:	05c67463          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     174:	00568613          	add	a2,a3,5
     178:	00c785b3          	add	a1,a5,a2
     17c:	10c5cf03          	lbu	t5,268(a1)
     180:	11e30623          	sb	t5,268(t1)
#       for (size_t j = i; j < len; ++j) {
     184:	03c67a63          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     188:	00668613          	add	a2,a3,6
     18c:	00c78333          	add	t1,a5,a2
     190:	10c34f03          	lbu	t5,268(t1)
     194:	11e58623          	sb	t5,268(a1)
#       for (size_t j = i; j < len; ++j) {
     198:	03c67063          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     19c:	00768693          	add	a3,a3,7
     1a0:	00d787b3          	add	a5,a5,a3
     1a4:	10c7c603          	lbu	a2,268(a5)
     1a8:	10c30623          	sb	a2,268(t1)
#       for (size_t j = i; j < len; ++j) {
     1ac:	01c6f663          	bgeu	a3,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     1b0:	114ec683          	lbu	a3,276(t4)
     1b4:	10d78623          	sb	a3,268(a5)
#     uart_send_str("cannot go there\r\n\r\n");
#     return;
#   }
#   if (locations[to].entities.add(eid)) {
#     loc.entities.remove(eid);
#     ent.location = to;
     1b8:	00a707b3          	add	a5,a4,a0
     1bc:	00279793          	sll	a5,a5,0x2
     1c0:	40a787b3          	sub	a5,a5,a0
     1c4:	00279793          	sll	a5,a5,0x2
     1c8:	00f807b3          	add	a5,a6,a5
     1cc:	01178223          	sb	a7,4(a5)
     1d0:	00008067          	ret
#   }
# }
     1d4:	00008067          	ret
#     for (size_t i = 0; i < len; ++i) {
     1d8:	00200693          	li	a3,2
     1dc:	fcd58ee3          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     1e0:	10e7c783          	lbu	a5,270(a5)
     1e4:	eea782e3          	beq	a5,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
     1e8:	00300793          	li	a5,3
     1ec:	fcf586e3          	beq	a1,a5,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     1f0:	006607b3          	add	a5,a2,t1
     1f4:	00579793          	sll	a5,a5,0x5
     1f8:	00f807b3          	add	a5,a6,a5
     1fc:	10f7ce03          	lbu	t3,271(a5)
#     for (size_t i = 0; i < len; ++i) {
     200:	00300693          	li	a3,3
#       if (data[i] != elem) {
     204:	ecae02e3          	beq	t3,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
     208:	00400693          	li	a3,4
     20c:	fad586e3          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     210:	1107ce03          	lbu	t3,272(a5)
     214:	eaae0ae3          	beq	t3,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
     218:	00500693          	li	a3,5
     21c:	f8d58ee3          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     220:	1117ce03          	lbu	t3,273(a5)
     224:	eaae02e3          	beq	t3,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
     228:	00600693          	li	a3,6
     22c:	f8d586e3          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     230:	1127ce03          	lbu	t3,274(a5)
     234:	e8ae0ae3          	beq	t3,a0,c8 <_ZL9action_gohh+0xc0>
#     for (size_t i = 0; i < len; ++i) {
     238:	00700693          	li	a3,7
     23c:	f6d58ee3          	beq	a1,a3,1b8 <_ZL9action_gohh+0x1b0>
#       if (data[i] != elem) {
     240:	1137c783          	lbu	a5,275(a5)
     244:	e8a782e3          	beq	a5,a0,c8 <_ZL9action_gohh+0xc0>
     248:	f71ff06f          	j	1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     24c:	000ea783          	lw	a5,0(t4)
     250:	fff58593          	add	a1,a1,-1
     254:	0025df93          	srl	t6,a1,0x2
     258:	00ff2023          	sw	a5,0(t5)
#       for (size_t j = i; j < len; ++j) {
     25c:	00100793          	li	a5,1
     260:	02ff8063          	beq	t6,a5,280 <_ZL9action_gohh+0x278>
#         data[j] = data[j + 1];
     264:	004eae83          	lw	t4,4(t4)
     268:	0035f793          	and	a5,a1,3
     26c:	01df2223          	sw	t4,4(t5)
#       for (size_t j = i; j < len; ++j) {
     270:	f40784e3          	beqz	a5,1b8 <_ZL9action_gohh+0x1b0>
     274:	ffc5f593          	and	a1,a1,-4
     278:	00d587b3          	add	a5,a1,a3
     27c:	0080006f          	j	284 <_ZL9action_gohh+0x27c>
     280:	00468793          	add	a5,a3,4
#         data[j] = data[j + 1];
     284:	006606b3          	add	a3,a2,t1
     288:	00569693          	sll	a3,a3,0x5
     28c:	00d806b3          	add	a3,a6,a3
     290:	00178613          	add	a2,a5,1
     294:	00c68333          	add	t1,a3,a2
     298:	10c34e83          	lbu	t4,268(t1)
     29c:	00f685b3          	add	a1,a3,a5
     2a0:	11d58623          	sb	t4,268(a1)
#       for (size_t j = i; j < len; ++j) {
     2a4:	f1c67ae3          	bgeu	a2,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     2a8:	00278793          	add	a5,a5,2
     2ac:	00f686b3          	add	a3,a3,a5
     2b0:	10c6c603          	lbu	a2,268(a3)
     2b4:	10c30623          	sb	a2,268(t1)
#       for (size_t j = i; j < len; ++j) {
     2b8:	f1c7f0e3          	bgeu	a5,t3,1b8 <_ZL9action_gohh+0x1b0>
#         data[j] = data[j + 1];
     2bc:	10f5c783          	lbu	a5,271(a1)
     2c0:	10f68623          	sb	a5,268(a3)
#     ent.location = to;
     2c4:	00a707b3          	add	a5,a4,a0
     2c8:	00279793          	sll	a5,a5,0x2
     2cc:	40a787b3          	sub	a5,a5,a0
     2d0:	00279793          	sll	a5,a5,0x2
     2d4:	00f807b3          	add	a5,a6,a5
     2d8:	01178223          	sb	a7,4(a5)
     2dc:	00008067          	ret

000002e0 <run>:
#   memset(&__bss_start, 0, &__bss_end - &__bss_start);
     2e0:	00002737          	lui	a4,0x2
     2e4:	000027b7          	lui	a5,0x2
# extern "C" auto run() -> void {
     2e8:	eb010113          	add	sp,sp,-336 # 1ffeb0 <_ZL21input_escape_sequence+0x1fd7d0>
     2ec:	6e070693          	add	a3,a4,1760 # 26e0 <_ZL21input_escape_sequence>
     2f0:	6e078793          	add	a5,a5,1760 # 26e0 <_ZL21input_escape_sequence>
     2f4:	14112623          	sw	ra,332(sp)
     2f8:	14812423          	sw	s0,328(sp)
     2fc:	14912223          	sw	s1,324(sp)
     300:	15212023          	sw	s2,320(sp)
     304:	13312e23          	sw	s3,316(sp)
     308:	13412c23          	sw	s4,312(sp)
     30c:	13512a23          	sw	s5,308(sp)
     310:	13612823          	sw	s6,304(sp)
     314:	13712623          	sw	s7,300(sp)
     318:	13812423          	sw	s8,296(sp)
     31c:	13912223          	sw	s9,292(sp)
     320:	13a12023          	sw	s10,288(sp)
     324:	11b12e23          	sw	s11,284(sp)
     328:	40d787b3          	sub	a5,a5,a3
#   while (n--) {
     32c:	0c078263          	beqz	a5,3f0 <run+0x110>
     330:	40d00533          	neg	a0,a3
     334:	fff78613          	add	a2,a5,-1
     338:	00500593          	li	a1,5
     33c:	00357813          	and	a6,a0,3
     340:	00c5e463          	bltu	a1,a2,348 <run+0x68>
     344:	7280106f          	j	1a6c <run+0x178c>
#   char *ptr = reinterpret_cast<char *>(str);
     348:	6e070593          	add	a1,a4,1760
     34c:	02080c63          	beqz	a6,384 <run+0xa4>
#     *ptr++ = char(ch);
     350:	6e070023          	sb	zero,1760(a4)
#   while (n--) {
     354:	00257513          	and	a0,a0,2
     358:	00051463          	bnez	a0,360 <run+0x80>
     35c:	6780106f          	j	19d4 <run+0x16f4>
#     *ptr++ = char(ch);
     360:	fff68713          	add	a4,a3,-1
     364:	000680a3          	sb	zero,1(a3)
#   while (n--) {
     368:	00377713          	and	a4,a4,3
     36c:	00070463          	beqz	a4,374 <run+0x94>
     370:	7740106f          	j	1ae4 <run+0x1804>
#     *ptr++ = char(ch);
     374:	000025b7          	lui	a1,0x2
     378:	00068123          	sb	zero,2(a3)
#   while (n--) {
     37c:	ffc78613          	add	a2,a5,-4
#     *ptr++ = char(ch);
     380:	6e358593          	add	a1,a1,1763 # 26e3 <_ZL21input_escape_sequence+0x3>
     384:	410787b3          	sub	a5,a5,a6
     388:	010686b3          	add	a3,a3,a6
     38c:	ffc7f713          	and	a4,a5,-4
     390:	00d70733          	add	a4,a4,a3
     394:	0006a023          	sw	zero,0(a3)
#   while (n--) {
     398:	00468693          	add	a3,a3,4
     39c:	fee69ce3          	bne	a3,a4,394 <run+0xb4>
     3a0:	ffc7f693          	and	a3,a5,-4
     3a4:	0037f793          	and	a5,a5,3
     3a8:	00d58733          	add	a4,a1,a3
     3ac:	40d60633          	sub	a2,a2,a3
     3b0:	04078063          	beqz	a5,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3b4:	00070023          	sb	zero,0(a4)
#   while (n--) {
     3b8:	02060c63          	beqz	a2,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3bc:	000700a3          	sb	zero,1(a4)
#   while (n--) {
     3c0:	00100793          	li	a5,1
     3c4:	02f60663          	beq	a2,a5,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3c8:	00070123          	sb	zero,2(a4)
#   while (n--) {
     3cc:	00200793          	li	a5,2
     3d0:	02f60063          	beq	a2,a5,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3d4:	000701a3          	sb	zero,3(a4)
#   while (n--) {
     3d8:	00300793          	li	a5,3
     3dc:	00f60a63          	beq	a2,a5,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3e0:	00070223          	sb	zero,4(a4)
#   while (n--) {
     3e4:	00400793          	li	a5,4
     3e8:	00f60463          	beq	a2,a5,3f0 <run+0x110>
#     *ptr++ = char(ch);
     3ec:	000702a3          	sb	zero,5(a4)
#   command_buffer cmd_buf{};
     3f0:	0bc10a13          	add	s4,sp,188
# static auto led_set(uint8_t bits) -> void { *LED = bits; }
     3f4:	fe000fa3          	sb	zero,-1(zero) # ffffffff <_ZL21input_escape_sequence+0xffffd91f>
     3f8:	05200613          	li	a2,82
     3fc:	00000593          	li	a1,0
     400:	000a0513          	mv	a0,s4
     404:	750010ef          	jal	1b54 <memset>
     408:	000027b7          	lui	a5,0x2
#   while (*str) {
     40c:	02000713          	li	a4,32
     410:	c5478793          	add	a5,a5,-940 # 1c54 <memset+0x100>
#     while (*UART_OUT)
     414:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     418:	fe069ee3          	bnez	a3,414 <run+0x134>
#     *UART_OUT = *str++;
     41c:	00178793          	add	a5,a5,1
     420:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     424:	0007c703          	lbu	a4,0(a5)
     428:	fe0716e3          	bnez	a4,414 <run+0x134>
     42c:	000027b7          	lui	a5,0x2
     430:	07700713          	li	a4,119
     434:	f9078793          	add	a5,a5,-112 # 1f90 <memset+0x43c>
#     while (*UART_OUT)
     438:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     43c:	fe069ee3          	bnez	a3,438 <run+0x158>
#     *UART_OUT = *str++;
     440:	00178793          	add	a5,a5,1
     444:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     448:	0007c703          	lbu	a4,0(a5)
     44c:	fe0716e3          	bnez	a4,438 <run+0x158>
     450:	000027b7          	lui	a5,0x2
     454:	fc078793          	add	a5,a5,-64 # 1fc0 <memset+0x46c>
     458:	06f12e23          	sw	a5,124(sp)
     45c:	000027b7          	lui	a5,0x2
     460:	fc878793          	add	a5,a5,-56 # 1fc8 <memset+0x474>
     464:	08f12023          	sw	a5,128(sp)
     468:	000027b7          	lui	a5,0x2
     46c:	fd478793          	add	a5,a5,-44 # 1fd4 <memset+0x480>
     470:	00f12423          	sw	a5,8(sp)
     474:	000027b7          	lui	a5,0x2
     478:	fe878793          	add	a5,a5,-24 # 1fe8 <memset+0x494>
     47c:	08f12423          	sw	a5,136(sp)
     480:	000027b7          	lui	a5,0x2
     484:	fdc78793          	add	a5,a5,-36 # 1fdc <memset+0x488>
     488:	08f12223          	sw	a5,132(sp)
     48c:	000027b7          	lui	a5,0x2
     490:	2b878793          	add	a5,a5,696 # 22b8 <_ZL10exit_names>
     494:	06f12c23          	sw	a5,120(sp)
     498:	000027b7          	lui	a5,0x2
     49c:	ff078793          	add	a5,a5,-16 # 1ff0 <memset+0x49c>
     4a0:	00f12623          	sw	a5,12(sp)
     4a4:	000027b7          	lui	a5,0x2
     4a8:	ff878793          	add	a5,a5,-8 # 1ff8 <memset+0x4a4>
     4ac:	00f12823          	sw	a5,16(sp)
     4b0:	000027b7          	lui	a5,0x2
     4b4:	6e078913          	add	s2,a5,1760 # 26e0 <_ZL21input_escape_sequence>
     4b8:	000027b7          	lui	a5,0x2
     4bc:	ffc78793          	add	a5,a5,-4 # 1ffc <memset+0x4a8>
     4c0:	00f12a23          	sw	a5,20(sp)
     4c4:	000027b7          	lui	a5,0x2
     4c8:	00078793          	mv	a5,a5
     4cc:	00f12c23          	sw	a5,24(sp)
     4d0:	000027b7          	lui	a5,0x2
     4d4:	00478793          	add	a5,a5,4 # 2004 <memset+0x4b0>
     4d8:	00f12e23          	sw	a5,28(sp)
     4dc:	000027b7          	lui	a5,0x2
     4e0:	02878793          	add	a5,a5,40 # 2028 <memset+0x4d4>
     4e4:	02f12023          	sw	a5,32(sp)
     4e8:	000027b7          	lui	a5,0x2
     4ec:	10c78793          	add	a5,a5,268 # 210c <memset+0x5b8>
     4f0:	02f12223          	sw	a5,36(sp)
     4f4:	000027b7          	lui	a5,0x2
     4f8:	11c78793          	add	a5,a5,284 # 211c <memset+0x5c8>
     4fc:	02f12423          	sw	a5,40(sp)
     500:	000027b7          	lui	a5,0x2
     504:	14078793          	add	a5,a5,320 # 2140 <memset+0x5ec>
     508:	02f12a23          	sw	a5,52(sp)
     50c:	000027b7          	lui	a5,0x2
     510:	12078793          	add	a5,a5,288 # 2120 <memset+0x5cc>
     514:	02f12623          	sw	a5,44(sp)
     518:	000027b7          	lui	a5,0x2
     51c:	13078793          	add	a5,a5,304 # 2130 <memset+0x5dc>
     520:	02f12823          	sw	a5,48(sp)
     524:	000027b7          	lui	a5,0x2
     528:	16478793          	add	a5,a5,356 # 2164 <memset+0x610>
     52c:	04f12023          	sw	a5,64(sp)
     530:	000027b7          	lui	a5,0x2
     534:	14478793          	add	a5,a5,324 # 2144 <memset+0x5f0>
     538:	02f12c23          	sw	a5,56(sp)
     53c:	000027b7          	lui	a5,0x2
     540:	15478793          	add	a5,a5,340 # 2154 <memset+0x600>
     544:	00f12023          	sw	a5,0(sp)
     548:	000027b7          	lui	a5,0x2
     54c:	34378793          	add	a5,a5,835 # 2343 <_ZL8entities+0x7>
     550:	00f12223          	sw	a5,4(sp)
     554:	000027b7          	lui	a5,0x2
     558:	fb878793          	add	a5,a5,-72 # 1fb8 <memset+0x464>
     55c:	02f12e23          	sw	a5,60(sp)
     560:	000027b7          	lui	a5,0x2
     564:	26478793          	add	a5,a5,612 # 2264 <memset+0x710>
     568:	04f12223          	sw	a5,68(sp)
     56c:	000027b7          	lui	a5,0x2
     570:	16878793          	add	a5,a5,360 # 2168 <memset+0x614>
     574:	04f12423          	sw	a5,72(sp)
     578:	000027b7          	lui	a5,0x2
     57c:	16c78793          	add	a5,a5,364 # 216c <memset+0x618>
     580:	04f12623          	sw	a5,76(sp)
     584:	000027b7          	lui	a5,0x2
     588:	17078793          	add	a5,a5,368 # 2170 <memset+0x61c>
     58c:	04f12823          	sw	a5,80(sp)
     590:	000027b7          	lui	a5,0x2
     594:	1c478793          	add	a5,a5,452 # 21c4 <memset+0x670>
     598:	06f12223          	sw	a5,100(sp)
     59c:	000027b7          	lui	a5,0x2
     5a0:	17478793          	add	a5,a5,372 # 2174 <memset+0x620>
     5a4:	04f12a23          	sw	a5,84(sp)
     5a8:	000027b7          	lui	a5,0x2
     5ac:	18478793          	add	a5,a5,388 # 2184 <memset+0x630>
     5b0:	04f12c23          	sw	a5,88(sp)
     5b4:	000027b7          	lui	a5,0x2
     5b8:	19878793          	add	a5,a5,408 # 2198 <memset+0x644>
     5bc:	04f12e23          	sw	a5,92(sp)
     5c0:	000027b7          	lui	a5,0x2
     5c4:	1b078793          	add	a5,a5,432 # 21b0 <memset+0x65c>
     5c8:	06f12023          	sw	a5,96(sp)
     5cc:	000027b7          	lui	a5,0x2
     5d0:	1c878793          	add	a5,a5,456 # 21c8 <memset+0x674>
     5d4:	06f12423          	sw	a5,104(sp)
     5d8:	000027b7          	lui	a5,0x2
     5dc:	1e478793          	add	a5,a5,484 # 21e4 <memset+0x690>
     5e0:	06f12623          	sw	a5,108(sp)
     5e4:	000027b7          	lui	a5,0x2
     5e8:	1fc78793          	add	a5,a5,508 # 21fc <memset+0x6a8>
     5ec:	06f12823          	sw	a5,112(sp)
     5f0:	000027b7          	lui	a5,0x2
     5f4:	21878793          	add	a5,a5,536 # 2218 <memset+0x6c4>
#   entity_id_t active_entity = 1;
     5f8:	00100993          	li	s3,1
     5fc:	00002ab7          	lui	s5,0x2
     600:	00002b37          	lui	s6,0x2
     604:	00002cb7          	lui	s9,0x2
     608:	00002bb7          	lui	s7,0x2
     60c:	00002437          	lui	s0,0x2
     610:	00002d37          	lui	s10,0x2
     614:	000024b7          	lui	s1,0x2
     618:	06f12a23          	sw	a5,116(sp)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     61c:	414987b3          	sub	a5,s3,s4
     620:	33ca8a93          	add	s5,s5,828 # 233c <_ZL8entities>
     624:	3c0b0b13          	add	s6,s6,960 # 23c0 <_ZL9locations>
     628:	2a8c8c93          	add	s9,s9,680 # 22a8 <_ZL7objects>
     62c:	fd0b8b93          	add	s7,s7,-48 # 1fd0 <memset+0x47c>
     630:	10840413          	add	s0,s0,264 # 2108 <memset+0x5b4>
     634:	030d0d13          	add	s10,s10,48 # 2030 <memset+0x4dc>
     638:	11048493          	add	s1,s1,272 # 2110 <memset+0x5bc>
#       input_escape_sequence[0] = 0x1B;
#       continue;
#     }
#     if (input_escape_sequence[0] == 0x1B) {
#       // in escape sequence: 0x1B
#       if (ch == 0x5B) {
     63c:	05b00c13          	li	s8,91
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     640:	08f12623          	sw	a5,140(sp)
#     print_location(ent.location, active_entity);
     644:	00199693          	sll	a3,s3,0x1
     648:	013687b3          	add	a5,a3,s3
     64c:	00279793          	sll	a5,a5,0x2
     650:	413787b3          	sub	a5,a5,s3
     654:	00279793          	sll	a5,a5,0x2
     658:	00fa87b3          	add	a5,s5,a5
     65c:	0047c583          	lbu	a1,4(a5)
#   location &loc = locations[lid];
     660:	07c12703          	lw	a4,124(sp)
     664:	07500613          	li	a2,117
#     while (*UART_OUT)
     668:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     66c:	fe079ee3          	bnez	a5,668 <run+0x388>
#     *UART_OUT = *str++;
     670:	00170713          	add	a4,a4,1
     674:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     678:	00074603          	lbu	a2,0(a4)
     67c:	fe0616e3          	bnez	a2,668 <run+0x388>
#   uart_send_str(loc.name);
     680:	00259513          	sll	a0,a1,0x2
     684:	00b507b3          	add	a5,a0,a1
     688:	00579793          	sll	a5,a5,0x5
     68c:	00fa87b3          	add	a5,s5,a5
     690:	0847a603          	lw	a2,132(a5)
     694:	00064703          	lbu	a4,0(a2)
     698:	00070e63          	beqz	a4,6b4 <run+0x3d4>
#     while (*UART_OUT)
     69c:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     6a0:	fe079ee3          	bnez	a5,69c <run+0x3bc>
#     *UART_OUT = *str++;
     6a4:	00160613          	add	a2,a2,1
     6a8:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     6ac:	00064703          	lbu	a4,0(a2)
     6b0:	fe0716e3          	bnez	a4,69c <run+0x3bc>
     6b4:	08012703          	lw	a4,128(sp)
     6b8:	00d00613          	li	a2,13
#     while (*UART_OUT)
     6bc:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     6c0:	fe079ee3          	bnez	a5,6bc <run+0x3dc>
#     *UART_OUT = *str++;
     6c4:	00170713          	add	a4,a4,1
     6c8:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     6cc:	00074603          	lbu	a2,0(a4)
     6d0:	fe0616e3          	bnez	a2,6bc <run+0x3dc>
#     for (size_t i = 0; i < len; ++i) {
     6d4:	00b50333          	add	t1,a0,a1
     6d8:	00531313          	sll	t1,t1,0x5
     6dc:	006a8e33          	add	t3,s5,t1
     6e0:	108e2783          	lw	a5,264(t3)
     6e4:	06078a63          	beqz	a5,758 <run+0x478>
     6e8:	006b0333          	add	t1,s6,t1
#       if (!f(data[i])) {
     6ec:	00434803          	lbu	a6,4(t1)
#       if (counter++) {
     6f0:	00100893          	li	a7,1
#       uart_send_str(objects[id].name);
     6f4:	00281793          	sll	a5,a6,0x2
     6f8:	00fc87b3          	add	a5,s9,a5
     6fc:	0007a603          	lw	a2,0(a5)
     700:	00064703          	lbu	a4,0(a2)
     704:	00070e63          	beqz	a4,720 <run+0x440>
#     while (*UART_OUT)
     708:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     70c:	fe079ee3          	bnez	a5,708 <run+0x428>
#     *UART_OUT = *str++;
     710:	00160613          	add	a2,a2,1
     714:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     718:	00064703          	lbu	a4,0(a2)
     71c:	fe0716e3          	bnez	a4,708 <run+0x428>
#     for (size_t i = 0; i < len; ++i) {
     720:	108e2783          	lw	a5,264(t3)
     724:	04f8fa63          	bgeu	a7,a5,778 <run+0x498>
#       if (!f(data[i])) {
     728:	011307b3          	add	a5,t1,a7
     72c:	0047c803          	lbu	a6,4(a5)
#       if (counter++) {
     730:	00188893          	add	a7,a7,1
     734:	02c00613          	li	a2,44
     738:	000b8713          	mv	a4,s7
#     while (*UART_OUT)
     73c:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     740:	fe079ee3          	bnez	a5,73c <run+0x45c>
#     *UART_OUT = *str++;
     744:	00170713          	add	a4,a4,1
     748:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     74c:	00074603          	lbu	a2,0(a4)
     750:	fe0616e3          	bnez	a2,73c <run+0x45c>
     754:	fa1ff06f          	j	6f4 <run+0x414>
#     for (size_t i = 0; i < len; ++i) {
     758:	00812703          	lw	a4,8(sp)
     75c:	06e00613          	li	a2,110
#     while (*UART_OUT)
     760:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     764:	fe079ee3          	bnez	a5,760 <run+0x480>
#     *UART_OUT = *str++;
     768:	00170713          	add	a4,a4,1
     76c:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     770:	00074603          	lbu	a2,0(a4)
     774:	fe0616e3          	bnez	a2,760 <run+0x480>
     778:	00d00613          	li	a2,13
     77c:	00040713          	mv	a4,s0
#     while (*UART_OUT)
     780:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     784:	fe079ee3          	bnez	a5,780 <run+0x4a0>
#     *UART_OUT = *str++;
     788:	00170713          	add	a4,a4,1
     78c:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     790:	00074603          	lbu	a2,0(a4)
     794:	fe0616e3          	bnez	a2,780 <run+0x4a0>
     798:	00b50333          	add	t1,a0,a1
     79c:	00531313          	sll	t1,t1,0x5
     7a0:	006a8e33          	add	t3,s5,t1
     7a4:	114e2603          	lw	a2,276(t3)
     7a8:	0a060a63          	beqz	a2,85c <run+0x57c>
#     uint32_t counter = 0;
     7ac:	00000713          	li	a4,0
#     for (size_t i = 0; i < len; ++i) {
     7b0:	00000813          	li	a6,0
#       if (!f(data[i])) {
     7b4:	006807b3          	add	a5,a6,t1
     7b8:	00fb07b3          	add	a5,s6,a5
     7bc:	0887ce83          	lbu	t4,136(a5)
#       if (id == eid_exclude_from_output) {
     7c0:	07d98863          	beq	s3,t4,830 <run+0x550>
#       if (counter++) {
     7c4:	00170893          	add	a7,a4,1
     7c8:	02070263          	beqz	a4,7ec <run+0x50c>
     7cc:	02c00613          	li	a2,44
     7d0:	000b8713          	mv	a4,s7
#     while (*UART_OUT)
     7d4:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     7d8:	fe079ee3          	bnez	a5,7d4 <run+0x4f4>
#     *UART_OUT = *str++;
     7dc:	00170713          	add	a4,a4,1
     7e0:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     7e4:	00074603          	lbu	a2,0(a4)
     7e8:	fe0616e3          	bnez	a2,7d4 <run+0x4f4>
#       uart_send_str(entities[id].name);
     7ec:	001e9793          	sll	a5,t4,0x1
     7f0:	01d787b3          	add	a5,a5,t4
     7f4:	00279793          	sll	a5,a5,0x2
     7f8:	41d787b3          	sub	a5,a5,t4
     7fc:	00279793          	sll	a5,a5,0x2
     800:	00fa87b3          	add	a5,s5,a5
     804:	0007a603          	lw	a2,0(a5)
     808:	00064703          	lbu	a4,0(a2)
     80c:	58070463          	beqz	a4,d94 <run+0xab4>
#     while (*UART_OUT)
     810:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     814:	fe079ee3          	bnez	a5,810 <run+0x530>
#     *UART_OUT = *str++;
     818:	00160613          	add	a2,a2,1
     81c:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     820:	00064703          	lbu	a4,0(a2)
     824:	fe0716e3          	bnez	a4,810 <run+0x530>
#     for (size_t i = 0; i < len; ++i) {
     828:	114e2603          	lw	a2,276(t3)
#       if (counter++) {
     82c:	00088713          	mv	a4,a7
#     for (size_t i = 0; i < len; ++i) {
     830:	00180813          	add	a6,a6,1
     834:	f8c860e3          	bltu	a6,a2,7b4 <run+0x4d4>
#     if (counter != 0) {
     838:	02070263          	beqz	a4,85c <run+0x57c>
     83c:	08412703          	lw	a4,132(sp)
     840:	02000613          	li	a2,32
#     while (*UART_OUT)
     844:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     848:	fe079ee3          	bnez	a5,844 <run+0x564>
#     *UART_OUT = *str++;
     84c:	00170713          	add	a4,a4,1
     850:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     854:	00074603          	lbu	a2,0(a4)
     858:	fe0616e3          	bnez	a2,844 <run+0x564>
     85c:	08812703          	lw	a4,136(sp)
     860:	06500613          	li	a2,101
#     while (*UART_OUT)
     864:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     868:	fe079ee3          	bnez	a5,864 <run+0x584>
#     *UART_OUT = *str++;
     86c:	00170713          	add	a4,a4,1
     870:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     874:	00074603          	lbu	a2,0(a4)
     878:	fe0616e3          	bnez	a2,864 <run+0x584>
#   auto length() const -> size_t { return len; }
     87c:	00b50533          	add	a0,a0,a1
     880:	00551813          	sll	a6,a0,0x5
     884:	010a8333          	add	t1,s5,a6
     888:	12032883          	lw	a7,288(t1)
#     for (size_t i = 0; i < n; ++i) {
     88c:	52088063          	beqz	a7,dac <run+0xacc>
     890:	00088793          	mv	a5,a7
     894:	00000713          	li	a4,0
#       if (!lse.at(i)) {
     898:	07812503          	lw	a0,120(sp)
#     if (ix < len) {
     89c:	00f76c63          	bltu	a4,a5,8b4 <run+0x5d4>
#     for (size_t i = 0; i < n; ++i) {
     8a0:	00170713          	add	a4,a4,1
     8a4:	00450513          	add	a0,a0,4
     8a8:	04e88c63          	beq	a7,a4,900 <run+0x620>
#     if (ix < len) {
     8ac:	12032783          	lw	a5,288(t1)
     8b0:	fef778e3          	bgeu	a4,a5,8a0 <run+0x5c0>
#       return data[ix];
     8b4:	010707b3          	add	a5,a4,a6
     8b8:	00fb07b3          	add	a5,s6,a5
#       if (!lse.at(i)) {
     8bc:	0947c783          	lbu	a5,148(a5)
     8c0:	fe0780e3          	beqz	a5,8a0 <run+0x5c0>
#       if (counter++) {
     8c4:	00160e13          	add	t3,a2,1
     8c8:	0a061ee3          	bnez	a2,1184 <run+0xea4>
#       uart_send_str(exit_names[i]);
     8cc:	00052583          	lw	a1,0(a0)
     8d0:	0005c603          	lbu	a2,0(a1)
     8d4:	00060e63          	beqz	a2,8f0 <run+0x610>
#     while (*UART_OUT)
     8d8:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     8dc:	fe079ee3          	bnez	a5,8d8 <run+0x5f8>
#     *UART_OUT = *str++;
     8e0:	00158593          	add	a1,a1,1
     8e4:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     8e8:	0005c603          	lbu	a2,0(a1)
     8ec:	fe0616e3          	bnez	a2,8d8 <run+0x5f8>
#     for (size_t i = 0; i < n; ++i) {
     8f0:	00170713          	add	a4,a4,1
#       if (counter++) {
     8f4:	000e0613          	mv	a2,t3
#     for (size_t i = 0; i < n; ++i) {
     8f8:	00450513          	add	a0,a0,4
     8fc:	fae898e3          	bne	a7,a4,8ac <run+0x5cc>
#     if (counter == 0) {
     900:	4a060663          	beqz	a2,dac <run+0xacc>
     904:	00d00613          	li	a2,13
     908:	00040713          	mv	a4,s0
#     while (*UART_OUT)
     90c:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     910:	fe079ee3          	bnez	a5,90c <run+0x62c>
#     *UART_OUT = *str++;
     914:	00170713          	add	a4,a4,1
     918:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     91c:	00074603          	lbu	a2,0(a4)
     920:	fe0616e3          	bnez	a2,90c <run+0x62c>
#     uart_send_str(ent.name);
     924:	013687b3          	add	a5,a3,s3
     928:	00279793          	sll	a5,a5,0x2
     92c:	413787b3          	sub	a5,a5,s3
     930:	00279793          	sll	a5,a5,0x2
     934:	00fa87b3          	add	a5,s5,a5
     938:	0007a603          	lw	a2,0(a5)
     93c:	00064703          	lbu	a4,0(a2)
     940:	00070e63          	beqz	a4,95c <run+0x67c>
#     while (*UART_OUT)
     944:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     948:	fe079ee3          	bnez	a5,944 <run+0x664>
#     *UART_OUT = *str++;
     94c:	00160613          	add	a2,a2,1
     950:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     954:	00064703          	lbu	a4,0(a2)
     958:	fe0716e3          	bnez	a4,944 <run+0x664>
     95c:	01012703          	lw	a4,16(sp)
     960:	02000613          	li	a2,32
#     while (*UART_OUT)
     964:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     968:	fe079ee3          	bnez	a5,964 <run+0x684>
#     *UART_OUT = *str++;
     96c:	00170713          	add	a4,a4,1
     970:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     974:	00074603          	lbu	a2,0(a4)
     978:	fe0616e3          	bnez	a2,964 <run+0x684>
#   auto reset() -> void { cursor_ = end_ = 0; }
     97c:	10011623          	sh	zero,268(sp)
#     if (ch == 0x1B) {
     980:	01b00593          	li	a1,27
#         // unrecognized escape sequence; reset
#         input_escape_sequence_clear();
#         continue;
#       }
#     }
#     if (ch == CHAR_BACKSPACE) {
     984:	07f00513          	li	a0,127
#             [](char c) { uart_send_char(c); });
#         uart_send_char(' ');
#         uart_send_move_back(cmd_buf.characters_after_cursor() + 1);
#         // +1 to compensate for the ' ' that erases the trailing output
#       }
#     } else if (ch == CHAR_TAB) {
     988:	00900893          	li	a7,9
#       // ignore tab for now
#     } else if (ch == CHAR_CARRIAGE_RETURN || cmd_buf.is_full()) {
     98c:	00d00313          	li	t1,13
     990:	04f00813          	li	a6,79
#   *UART_OUT = ch;
     994:	00800613          	li	a2,8
#         if (ch == 0x43) {
     998:	04300e93          	li	t4,67
#         if (ch == 0x33) {
     99c:	03300e13          	li	t3,51
#   while ((ch = *UART_IN) == 0)
     9a0:	ffd04783          	lbu	a5,-3(zero) # fffffffd <_ZL21input_escape_sequence+0xffffd91d>
     9a4:	0ff7f713          	zext.b	a4,a5
     9a8:	fe078ce3          	beqz	a5,9a0 <run+0x6c0>
#     if (ch == 0x1B) {
     9ac:	12b70063          	beq	a4,a1,acc <run+0x7ec>
#     if (input_escape_sequence[0] == 0x1B) {
     9b0:	00094783          	lbu	a5,0(s2)
     9b4:	0eb78263          	beq	a5,a1,a98 <run+0x7b8>
#     if (cursor_ == end_) {
     9b8:	10d14783          	lbu	a5,269(sp)
#     if (ch == CHAR_BACKSPACE) {
     9bc:	10a70c63          	beq	a4,a0,ad4 <run+0x7f4>
#     } else if (ch == CHAR_TAB) {
     9c0:	0d170463          	beq	a4,a7,a88 <run+0x7a8>
#     } else if (ch == CHAR_CARRIAGE_RETURN || cmd_buf.is_full()) {
     9c4:	2c670263          	beq	a4,t1,c88 <run+0x9a8>
     9c8:	2d078063          	beq	a5,a6,c88 <run+0x9a8>
#   while (*UART_OUT)
     9cc:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     9d0:	fe079ee3          	bnez	a5,9cc <run+0x6ec>
#   *UART_OUT = ch;
     9d4:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#     if (end_ == sizeof(line_) - 1) {
     9d8:	10d14f03          	lbu	t5,269(sp)
     9dc:	270f0a63          	beq	t5,a6,c50 <run+0x970>
#     if (cursor_ == end_) {
     9e0:	10c14d83          	lbu	s11,268(sp)
#       ++end_;
     9e4:	001f0793          	add	a5,t5,1
     9e8:	0ff7f793          	zext.b	a5,a5
#       ++cursor_;
     9ec:	001d8393          	add	t2,s11,1
#     for (size_t i = end_; i > cursor_; --i) {
     9f0:	00078093          	mv	ra,a5
#       ++cursor_;
     9f4:	0ff3f393          	zext.b	t2,t2
#     if (cursor_ == end_) {
     9f8:	27bf0863          	beq	t5,s11,c68 <run+0x988>
#     ++end_;
     9fc:	10f106a3          	sb	a5,269(sp)
#     for (size_t i = end_; i > cursor_; --i) {
     a00:	00fa0f33          	add	t5,s4,a5
     a04:	00078f93          	mv	t6,a5
     a08:	00fdfc63          	bgeu	s11,a5,a20 <run+0x740>
#       line_[i] = line_[i - 1];
     a0c:	ffff4283          	lbu	t0,-1(t5)
     a10:	ffff8f93          	add	t6,t6,-1
#     for (size_t i = end_; i > cursor_; --i) {
     a14:	ffff0f13          	add	t5,t5,-1
#       line_[i] = line_[i - 1];
     a18:	005f00a3          	sb	t0,1(t5)
#     for (size_t i = end_; i > cursor_; --i) {
     a1c:	fffde8e3          	bltu	s11,t6,a0c <run+0x72c>
#     line_[cursor_] = ch;
     a20:	080d8f13          	add	t5,s11,128
     a24:	09010f93          	add	t6,sp,144
     a28:	01ff0db3          	add	s11,t5,t6
     a2c:	faed8623          	sb	a4,-84(s11)
#     ++cursor_;
     a30:	10710623          	sb	t2,268(sp)
#     for (size_t i = cursor_; i < end_; ++i) {
     a34:	00038713          	mv	a4,t2
     a38:	0213f663          	bgeu	t2,ra,a64 <run+0x784>
     a3c:	007a0f33          	add	t5,s4,t2
#       f(line_[i]);
     a40:	000f4f83          	lbu	t6,0(t5)
#   while (*UART_OUT)
     a44:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     a48:	fe079ee3          	bnez	a5,a44 <run+0x764>
#   *UART_OUT = ch;
     a4c:	fff00f23          	sb	t6,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#     for (size_t i = cursor_; i < end_; ++i) {
     a50:	10d14783          	lbu	a5,269(sp)
     a54:	00170713          	add	a4,a4,1
     a58:	001f0f13          	add	t5,t5,1
     a5c:	fef762e3          	bltu	a4,a5,a40 <run+0x760>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     a60:	10c14383          	lbu	t2,268(sp)
     a64:	40778f33          	sub	t5,a5,t2
#     uart_send_char('A' + (nibble - 10));
#   }
# }
# 
# static auto uart_send_move_back(size_t const n) -> void {
#   for (size_t i = 0; i < n; ++i) {
     a68:	02778063          	beq	a5,t2,a88 <run+0x7a8>
     a6c:	00000713          	li	a4,0
#   while (*UART_OUT)
     a70:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     a74:	fe079ee3          	bnez	a5,a70 <run+0x790>
#   *UART_OUT = ch;
     a78:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     a7c:	00170713          	add	a4,a4,1
     a80:	feef18e3          	bne	t5,a4,a70 <run+0x790>
#   auto input_length() const -> size_t { return end_; }
     a84:	10d14783          	lbu	a5,269(sp)
#     led_set(~uint8_t(cmd_buf.input_length()));
     a88:	fff7c793          	not	a5,a5
     a8c:	0ff7f793          	zext.b	a5,a5
# static auto led_set(uint8_t bits) -> void { *LED = bits; }
     a90:	fef00fa3          	sb	a5,-1(zero) # ffffffff <_ZL21input_escape_sequence+0xffffd91f>
#   while ((ch = *UART_IN) == 0)
     a94:	f0dff06f          	j	9a0 <run+0x6c0>
#       if (ch == 0x5B) {
     a98:	1d870463          	beq	a4,s8,c60 <run+0x980>
#       if (input_escape_sequence[1] == 0x5B) {
     a9c:	00194f03          	lbu	t5,1(s2)
     aa0:	f18f1ce3          	bne	t5,s8,9b8 <run+0x6d8>
#         if (ch == 0x44) {
     aa4:	04400f13          	li	t5,68
     aa8:	71e70063          	beq	a4,t5,11a8 <run+0xec8>
#         if (ch == 0x43) {
     aac:	15d706e3          	beq	a4,t4,13f8 <run+0x1118>
#         if (ch == 0x33) {
     ab0:	6dc70663          	beq	a4,t3,117c <run+0xe9c>
#         if (input_escape_sequence[2] == 0x33) {
     ab4:	00294783          	lbu	a5,2(s2)
     ab8:	3fc78c63          	beq	a5,t3,eb0 <run+0xbd0>
#     input_escape_sequence[i] = '\0';
     abc:	000027b7          	lui	a5,0x2
     ac0:	6e07a023          	sw	zero,1760(a5) # 26e0 <_ZL21input_escape_sequence>
     ac4:	00092223          	sw	zero,4(s2)
#   for (size_t i = 0; i < sizeof(input_escape_sequence); ++i) {
     ac8:	ed9ff06f          	j	9a0 <run+0x6c0>
#       input_escape_sequence[0] = 0x1B;
     acc:	00b90023          	sb	a1,0(s2)
#       continue;
     ad0:	ed1ff06f          	j	9a0 <run+0x6c0>
#     if (cursor_ == 0) {
     ad4:	10c14703          	lbu	a4,268(sp)
     ad8:	fa0708e3          	beqz	a4,a88 <run+0x7a8>
#     if (cursor_ == end_) {
     adc:	fff70f93          	add	t6,a4,-1
     ae0:	04f70463          	beq	a4,a5,b28 <run+0x848>
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     ae4:	04fff263          	bgeu	t6,a5,b28 <run+0x848>
     ae8:	40e780b3          	sub	ra,a5,a4
     aec:	02e7e063          	bltu	a5,a4,b0c <run+0x82c>
     af0:	0060bf13          	sltiu	t5,ra,6
     af4:	000f1c63          	bnez	t5,b0c <run+0x82c>
     af8:	01fa03b3          	add	t2,s4,t6
     afc:	00ea0f33          	add	t5,s4,a4
     b00:	01e3e2b3          	or	t0,t2,t5
     b04:	0032f293          	and	t0,t0,3
     b08:	0c028063          	beqz	t0,bc8 <run+0x8e8>
     b0c:	00ea0733          	add	a4,s4,a4
#       line_[i] = line_[i + 1];
     b10:	00074f03          	lbu	t5,0(a4)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     b14:	00170713          	add	a4,a4,1
#       line_[i] = line_[i + 1];
     b18:	ffe70f23          	sb	t5,-2(a4)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     b1c:	41470f33          	sub	t5,a4,s4
     b20:	ffff0f13          	add	t5,t5,-1
     b24:	feff66e3          	bltu	t5,a5,b10 <run+0x830>
#       --end_;
     b28:	fff78713          	add	a4,a5,-1
#     --cursor_;
     b2c:	0ff77713          	zext.b	a4,a4
     b30:	00871713          	sll	a4,a4,0x8
     b34:	0ffff793          	zext.b	a5,t6
     b38:	00e7e7b3          	or	a5,a5,a4
     b3c:	10f11623          	sh	a5,268(sp)
#   while (*UART_OUT)
     b40:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     b44:	fe079ee3          	bnez	a5,b40 <run+0x860>
#   *UART_OUT = ch;
     b48:	07f00793          	li	a5,127
     b4c:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#     for (size_t i = cursor_; i < end_; ++i) {
     b50:	10c14703          	lbu	a4,268(sp)
     b54:	10d14783          	lbu	a5,269(sp)
     b58:	00ea0f33          	add	t5,s4,a4
     b5c:	02f77263          	bgeu	a4,a5,b80 <run+0x8a0>
#       f(line_[i]);
     b60:	000f4f83          	lbu	t6,0(t5)
#   while (*UART_OUT)
     b64:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     b68:	fe079ee3          	bnez	a5,b64 <run+0x884>
#   *UART_OUT = ch;
     b6c:	fff00f23          	sb	t6,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#     for (size_t i = cursor_; i < end_; ++i) {
     b70:	10d14783          	lbu	a5,269(sp)
     b74:	00170713          	add	a4,a4,1
     b78:	001f0f13          	add	t5,t5,1
     b7c:	fef762e3          	bltu	a4,a5,b60 <run+0x880>
#   while (*UART_OUT)
     b80:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     b84:	fe079ee3          	bnez	a5,b80 <run+0x8a0>
#   *UART_OUT = ch;
     b88:	02000793          	li	a5,32
     b8c:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     b90:	10d14783          	lbu	a5,269(sp)
     b94:	10c14f03          	lbu	t5,268(sp)
#   for (size_t i = 0; i < n; ++i) {
     b98:	fff00713          	li	a4,-1
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     b9c:	41e78f33          	sub	t5,a5,t5
#   for (size_t i = 0; i < n; ++i) {
     ba0:	eeef04e3          	beq	t5,a4,a88 <run+0x7a8>
     ba4:	00000713          	li	a4,0
     ba8:	00800f93          	li	t6,8
#   while (*UART_OUT)
     bac:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     bb0:	fe079ee3          	bnez	a5,bac <run+0x8cc>
#   *UART_OUT = ch;
     bb4:	fff00f23          	sb	t6,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     bb8:	00170793          	add	a5,a4,1
     bbc:	ecef04e3          	beq	t5,a4,a84 <run+0x7a4>
     bc0:	00078713          	mv	a4,a5
     bc4:	fe9ff06f          	j	bac <run+0x8cc>
     bc8:	00100293          	li	t0,1
     bcc:	00e7e463          	bltu	a5,a4,bd4 <run+0x8f4>
     bd0:	00108293          	add	t0,ra,1
     bd4:	ffc2f093          	and	ra,t0,-4
     bd8:	00038713          	mv	a4,t2
     bdc:	001380b3          	add	ra,t2,ra
#       line_[i] = line_[i + 1];
     be0:	000f2383          	lw	t2,0(t5)
     be4:	00470713          	add	a4,a4,4
     be8:	004f0f13          	add	t5,t5,4
     bec:	fe772e23          	sw	t2,-4(a4)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     bf0:	fe1718e3          	bne	a4,ra,be0 <run+0x900>
     bf4:	0032f713          	and	a4,t0,3
     bf8:	f20708e3          	beqz	a4,b28 <run+0x848>
     bfc:	ffc2f713          	and	a4,t0,-4
     c00:	01f70733          	add	a4,a4,t6
#       line_[i] = line_[i + 1];
     c04:	08170293          	add	t0,a4,129
     c08:	09010393          	add	t2,sp,144
     c0c:	007283b3          	add	t2,t0,t2
     c10:	fac3c083          	lbu	ra,-84(t2)
     c14:	08070293          	add	t0,a4,128
     c18:	09010d93          	add	s11,sp,144
     c1c:	01b282b3          	add	t0,t0,s11
     c20:	00170f13          	add	t5,a4,1
     c24:	fa128623          	sb	ra,-84(t0)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     c28:	f0ff70e3          	bgeu	t5,a5,b28 <run+0x848>
#       line_[i] = line_[i + 1];
     c2c:	08270f13          	add	t5,a4,130
     c30:	01bf0f33          	add	t5,t5,s11
     c34:	facf4083          	lbu	ra,-84(t5)
     c38:	00270713          	add	a4,a4,2
     c3c:	fa138623          	sb	ra,-84(t2)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     c40:	eef774e3          	bgeu	a4,a5,b28 <run+0x848>
#       line_[i] = line_[i + 1];
     c44:	faf2c703          	lbu	a4,-81(t0)
     c48:	faef0623          	sb	a4,-84(t5)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
     c4c:	eddff06f          	j	b28 <run+0x848>
#     if (cursor_ == end_) {
     c50:	10c14383          	lbu	t2,268(sp)
     c54:	04f00793          	li	a5,79
     c58:	04f00093          	li	ra,79
     c5c:	dd9ff06f          	j	a34 <run+0x754>
#         input_escape_sequence[1] = 0x5B;
     c60:	018900a3          	sb	s8,1(s2)
#         continue;
     c64:	d3dff06f          	j	9a0 <run+0x6c0>
#       ++cursor_;
     c68:	00879f93          	sll	t6,a5,0x8
#       line_[cursor_] = ch;
     c6c:	080f0f13          	add	t5,t5,128
     c70:	09010293          	add	t0,sp,144
     c74:	005f0f33          	add	t5,t5,t0
#       ++cursor_;
     c78:	01f3efb3          	or	t6,t2,t6
#       line_[cursor_] = ch;
     c7c:	faef0623          	sb	a4,-84(t5)
#       ++cursor_;
     c80:	11f11623          	sh	t6,268(sp)
#       return true;
     c84:	db1ff06f          	j	a34 <run+0x754>
#   auto set_eos() -> void { line_[end_] = '\0'; }
     c88:	09010713          	add	a4,sp,144
     c8c:	08078793          	add	a5,a5,128
     c90:	00e787b3          	add	a5,a5,a4
     c94:	fa078623          	sb	zero,-84(a5)
#   while (*str) {
     c98:	00d00613          	li	a2,13
     c9c:	00040713          	mv	a4,s0
#     while (*UART_OUT)
     ca0:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     ca4:	fe079ee3          	bnez	a5,ca0 <run+0x9c0>
#     *UART_OUT = *str++;
     ca8:	00170713          	add	a4,a4,1
     cac:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     cb0:	00074603          	lbu	a2,0(a4)
     cb4:	fe0616e3          	bnez	a2,ca0 <run+0x9c0>
     cb8:	09c10813          	add	a6,sp,156
#   size_t nwords = 0;
     cbc:	00000513          	li	a0,0
#   char *ptr = cmd_buf.command_line();
     cc0:	000a0793          	mv	a5,s4
#     while (*ptr && *ptr != ' ') {
     cc4:	02000593          	li	a1,32
#     if (nwords == sizeof(words) / sizeof(char const *)) {
     cc8:	00800893          	li	a7,8
#     while (*ptr && *ptr != ' ') {
     ccc:	0007c703          	lbu	a4,0(a5)
#     words[nwords] = ptr;
     cd0:	00f82023          	sw	a5,0(a6)
#     ++nwords;
     cd4:	00150513          	add	a0,a0,1
#     while (*ptr && *ptr != ' ') {
     cd8:	00071863          	bnez	a4,ce8 <run+0xa08>
     cdc:	0440006f          	j	d20 <run+0xa40>
     ce0:	0007c703          	lbu	a4,0(a5)
     ce4:	02070e63          	beqz	a4,d20 <run+0xa40>
     ce8:	00078613          	mv	a2,a5
#       ++ptr;
     cec:	00178793          	add	a5,a5,1
#     while (*ptr && *ptr != ' ') {
     cf0:	feb718e3          	bne	a4,a1,ce0 <run+0xa00>
#     *ptr = '\0';
     cf4:	00060023          	sb	zero,0(a2)
#     if (nwords == sizeof(words) / sizeof(char const *)) {
     cf8:	00480813          	add	a6,a6,4
     cfc:	fd1518e3          	bne	a0,a7,ccc <run+0x9ec>
     d00:	01c12703          	lw	a4,28(sp)
     d04:	07400613          	li	a2,116
#     while (*UART_OUT)
     d08:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     d0c:	fe079ee3          	bnez	a5,d08 <run+0xa28>
#     *UART_OUT = *str++;
     d10:	00170713          	add	a4,a4,1
     d14:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     d18:	00074603          	lbu	a2,0(a4)
     d1c:	fe0616e3          	bnez	a2,d08 <run+0xa28>
#   if (strings_equal(words[0], "help")) {
     d20:	09c12783          	lw	a5,156(sp)
#     if (*s1 != *s2) {
     d24:	06800613          	li	a2,104
     d28:	0007c703          	lbu	a4,0(a5)
     d2c:	0ac71263          	bne	a4,a2,dd0 <run+0xaf0>
     d30:	02012603          	lw	a2,32(sp)
     d34:	06800693          	li	a3,104
#     if (!*s1 && !*s2) {
     d38:	00d76733          	or	a4,a4,a3
#     ++s1;
     d3c:	00178793          	add	a5,a5,1
#     ++s2;
     d40:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
     d44:	02071a63          	bnez	a4,d78 <run+0xa98>
     d48:	00d00693          	li	a3,13
     d4c:	000d0713          	mv	a4,s10
#     while (*UART_OUT)
     d50:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     d54:	fe079ee3          	bnez	a5,d50 <run+0xa70>
#     *UART_OUT = *str++;
     d58:	00170713          	add	a4,a4,1
     d5c:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     d60:	00074683          	lbu	a3,0(a4)
     d64:	fe0696e3          	bnez	a3,d50 <run+0xa70>
#     active_entity = active_entity == 1 ? 2 : 1;
     d68:	00300793          	li	a5,3
     d6c:	413787b3          	sub	a5,a5,s3
     d70:	0ff7f993          	zext.b	s3,a5
     d74:	8d1ff06f          	j	644 <run+0x364>
#     if (*s1 != *s2) {
     d78:	0007c703          	lbu	a4,0(a5)
     d7c:	00064683          	lbu	a3,0(a2)
     d80:	fad70ce3          	beq	a4,a3,d38 <run+0xa58>
#     active_entity = active_entity == 1 ? 2 : 1;
     d84:	00300793          	li	a5,3
     d88:	413787b3          	sub	a5,a5,s3
     d8c:	0ff7f993          	zext.b	s3,a5
     d90:	8b5ff06f          	j	644 <run+0x364>
#     for (size_t i = 0; i < len; ++i) {
     d94:	00b507b3          	add	a5,a0,a1
     d98:	00579793          	sll	a5,a5,0x5
     d9c:	00fa87b3          	add	a5,s5,a5
     da0:	1147a603          	lw	a2,276(a5)
#       if (counter++) {
     da4:	00088713          	mv	a4,a7
     da8:	a89ff06f          	j	830 <run+0x550>
     dac:	00c12703          	lw	a4,12(sp)
     db0:	06e00613          	li	a2,110
#     while (*UART_OUT)
     db4:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     db8:	fe079ee3          	bnez	a5,db4 <run+0xad4>
#     *UART_OUT = *str++;
     dbc:	00170713          	add	a4,a4,1
     dc0:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     dc4:	00074603          	lbu	a2,0(a4)
     dc8:	fe0616e3          	bnez	a2,db4 <run+0xad4>
     dcc:	b39ff06f          	j	904 <run+0x624>
#     if (*s1 != *s2) {
     dd0:	06900613          	li	a2,105
     dd4:	1ac71e63          	bne	a4,a2,f90 <run+0xcb0>
     dd8:	02412583          	lw	a1,36(sp)
#     if (!*s1 && !*s2) {
     ddc:	00c76733          	or	a4,a4,a2
#     ++s1;
     de0:	00178793          	add	a5,a5,1
#     ++s2;
     de4:	00158593          	add	a1,a1,1
#     if (!*s1 && !*s2) {
     de8:	0a071663          	bnez	a4,e94 <run+0xbb4>
     dec:	07500613          	li	a2,117
     df0:	00048713          	mv	a4,s1
#     while (*UART_OUT)
     df4:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     df8:	fe079ee3          	bnez	a5,df4 <run+0xb14>
#     *UART_OUT = *str++;
     dfc:	00170713          	add	a4,a4,1
     e00:	fec00f23          	sb	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     e04:	00074603          	lbu	a2,0(a4)
     e08:	fe0616e3          	bnez	a2,df4 <run+0xb14>
#     for (size_t i = 0; i < len; ++i) {
     e0c:	01368633          	add	a2,a3,s3
     e10:	00261613          	sll	a2,a2,0x2
     e14:	41360633          	sub	a2,a2,s3
     e18:	00261613          	sll	a2,a2,0x2
     e1c:	00ca8633          	add	a2,s5,a2
     e20:	02862783          	lw	a5,40(a2)
     e24:	3a078a63          	beqz	a5,11d8 <run+0xef8>
#       if (!f(data[i])) {
     e28:	00864583          	lbu	a1,8(a2)
#     if (counter++) {
     e2c:	00100513          	li	a0,1
#     uart_send_str(objects[id].name);
     e30:	00259793          	sll	a5,a1,0x2
     e34:	00fc87b3          	add	a5,s9,a5
     e38:	0007a683          	lw	a3,0(a5)
     e3c:	0006c703          	lbu	a4,0(a3)
     e40:	00070e63          	beqz	a4,e5c <run+0xb7c>
#     while (*UART_OUT)
     e44:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     e48:	fe079ee3          	bnez	a5,e44 <run+0xb64>
#     *UART_OUT = *str++;
     e4c:	00168693          	add	a3,a3,1
     e50:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     e54:	0006c703          	lbu	a4,0(a3)
     e58:	fe0716e3          	bnez	a4,e44 <run+0xb64>
#     for (size_t i = 0; i < len; ++i) {
     e5c:	02862783          	lw	a5,40(a2)
     e60:	38f57c63          	bgeu	a0,a5,11f8 <run+0xf18>
#       if (!f(data[i])) {
     e64:	00a607b3          	add	a5,a2,a0
     e68:	0087c583          	lbu	a1,8(a5)
#     if (counter++) {
     e6c:	00150513          	add	a0,a0,1
     e70:	02c00693          	li	a3,44
     e74:	000b8713          	mv	a4,s7
#     while (*UART_OUT)
     e78:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     e7c:	fe079ee3          	bnez	a5,e78 <run+0xb98>
#     *UART_OUT = *str++;
     e80:	00170713          	add	a4,a4,1
     e84:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
     e88:	00074683          	lbu	a3,0(a4)
     e8c:	fe0696e3          	bnez	a3,e78 <run+0xb98>
     e90:	fa1ff06f          	j	e30 <run+0xb50>
#     if (*s1 != *s2) {
     e94:	0007c703          	lbu	a4,0(a5)
     e98:	0005c603          	lbu	a2,0(a1)
     e9c:	f4c700e3          	beq	a4,a2,ddc <run+0xafc>
#     active_entity = active_entity == 1 ? 2 : 1;
     ea0:	00300793          	li	a5,3
     ea4:	413787b3          	sub	a5,a5,s3
     ea8:	0ff7f993          	zext.b	s3,a5
     eac:	f98ff06f          	j	644 <run+0x364>
#           if (ch == 0x7e) {
     eb0:	07e00793          	li	a5,126
     eb4:	c0f714e3          	bne	a4,a5,abc <run+0x7dc>
#     if (cursor_ == end_) {
     eb8:	10c14703          	lbu	a4,268(sp)
     ebc:	10d14783          	lbu	a5,269(sp)
     ec0:	06f70063          	beq	a4,a5,f20 <run+0xc40>
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     ec4:	00170093          	add	ra,a4,1
     ec8:	04f0f663          	bgeu	ra,a5,f14 <run+0xc34>
     ecc:	40e783b3          	sub	t2,a5,a4
     ed0:	ffe38f13          	add	t5,t2,-2
     ed4:	006f3f13          	sltiu	t5,t5,6
     ed8:	00270d93          	add	s11,a4,2
     edc:	000f1e63          	bnez	t5,ef8 <run+0xc18>
     ee0:	01b7ec63          	bltu	a5,s11,ef8 <run+0xc18>
     ee4:	00ea02b3          	add	t0,s4,a4
     ee8:	001a0f33          	add	t5,s4,ra
     eec:	005f6fb3          	or	t6,t5,t0
     ef0:	003fff93          	and	t6,t6,3
     ef4:	220f88e3          	beqz	t6,1924 <run+0x1644>
     ef8:	00ea0f33          	add	t5,s4,a4
#       line_[i - 1] = line_[i];
     efc:	001f4f83          	lbu	t6,1(t5)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     f00:	001f0f13          	add	t5,t5,1
#       line_[i - 1] = line_[i];
     f04:	ffff0fa3          	sb	t6,-1(t5)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
     f08:	08c12f83          	lw	t6,140(sp)
     f0c:	01ef8fb3          	add	t6,t6,t5
     f10:	feffe6e3          	bltu	t6,a5,efc <run+0xc1c>
#     --end_;
     f14:	fff78793          	add	a5,a5,-1
     f18:	0ff7f793          	zext.b	a5,a5
     f1c:	10f106a3          	sb	a5,269(sp)
#     for (size_t i = cursor_; i < end_; ++i) {
     f20:	00ea0f33          	add	t5,s4,a4
     f24:	02f77263          	bgeu	a4,a5,f48 <run+0xc68>
#       f(line_[i]);
     f28:	000f4f83          	lbu	t6,0(t5)
#   while (*UART_OUT)
     f2c:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     f30:	fe079ee3          	bnez	a5,f2c <run+0xc4c>
#   *UART_OUT = ch;
     f34:	fff00f23          	sb	t6,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#     for (size_t i = cursor_; i < end_; ++i) {
     f38:	10d14783          	lbu	a5,269(sp)
     f3c:	00170713          	add	a4,a4,1
     f40:	001f0f13          	add	t5,t5,1
     f44:	fef762e3          	bltu	a4,a5,f28 <run+0xc48>
#   while (*UART_OUT)
     f48:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     f4c:	fe079ee3          	bnez	a5,f48 <run+0xc68>
#   *UART_OUT = ch;
     f50:	02000793          	li	a5,32
     f54:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     f58:	10d14703          	lbu	a4,269(sp)
     f5c:	10c14f03          	lbu	t5,268(sp)
#   for (size_t i = 0; i < n; ++i) {
     f60:	fff00793          	li	a5,-1
#   auto characters_after_cursor() const -> size_t { return end_ - cursor_; }
     f64:	41e70733          	sub	a4,a4,t5
#   for (size_t i = 0; i < n; ++i) {
     f68:	b4f70ae3          	beq	a4,a5,abc <run+0x7dc>
     f6c:	00000f13          	li	t5,0
     f70:	00800f93          	li	t6,8
#   while (*UART_OUT)
     f74:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     f78:	fe079ee3          	bnez	a5,f74 <run+0xc94>
#   *UART_OUT = ch;
     f7c:	fff00f23          	sb	t6,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
     f80:	001f0793          	add	a5,t5,1
     f84:	b3e70ce3          	beq	a4,t5,abc <run+0x7dc>
     f88:	00078f13          	mv	t5,a5
     f8c:	fe9ff06f          	j	f74 <run+0xc94>
#     if (*s1 != *s2) {
     f90:	07400613          	li	a2,116
     f94:	2ac71463          	bne	a4,a2,123c <run+0xf5c>
     f98:	02812583          	lw	a1,40(sp)
     f9c:	07400813          	li	a6,116
#     if (!*s1 && !*s2) {
     fa0:	01066633          	or	a2,a2,a6
#     ++s1;
     fa4:	00178793          	add	a5,a5,1
#     ++s2;
     fa8:	00158593          	add	a1,a1,1
#     if (!*s1 && !*s2) {
     fac:	16061c63          	bnez	a2,1124 <run+0xe44>
#     if (nwords < 2) {
     fb0:	00100793          	li	a5,1
     fb4:	02c12603          	lw	a2,44(sp)
     fb8:	12f50e63          	beq	a0,a5,10f4 <run+0xe14>
#   auto &lso = locations[ent.location].objects;
     fbc:	013687b3          	add	a5,a3,s3
     fc0:	00279793          	sll	a5,a5,0x2
     fc4:	413787b3          	sub	a5,a5,s3
     fc8:	00279793          	sll	a5,a5,0x2
     fcc:	00fa87b3          	add	a5,s5,a5
     fd0:	0047c503          	lbu	a0,4(a5)
#     action_take(eid, words[1]);
     fd4:	0a012f83          	lw	t6,160(sp)
#   auto length() const -> size_t { return len; }
     fd8:	00251713          	sll	a4,a0,0x2
     fdc:	00a705b3          	add	a1,a4,a0
     fe0:	00559593          	sll	a1,a1,0x5
     fe4:	00ba87b3          	add	a5,s5,a1
     fe8:	1087a803          	lw	a6,264(a5)
#   while (*str) {
     fec:	000fcf03          	lbu	t5,0(t6)
#   for (size_t i = 0; i < n; ++i) {
     ff0:	12080263          	beqz	a6,1114 <run+0xe34>
     ff4:	00000613          	li	a2,0
#       return data[ix];
     ff8:	00c587b3          	add	a5,a1,a2
     ffc:	00fb07b3          	add	a5,s6,a5
    1000:	0047c883          	lbu	a7,4(a5)
#     if (!strings_equal(objects[oid].name, obj_nm)) {
    1004:	00289793          	sll	a5,a7,0x2
    1008:	00fc87b3          	add	a5,s9,a5
    100c:	0007a303          	lw	t1,0(a5)
#     if (*s1 != *s2) {
    1010:	00034783          	lbu	a5,0(t1)
    1014:	12ff1c63          	bne	t5,a5,114c <run+0xe6c>
    1018:	000f0e93          	mv	t4,t5
    101c:	000f8e13          	mv	t3,t6
#     if (!*s1 && !*s2) {
    1020:	01d7e7b3          	or	a5,a5,t4
    1024:	0ff7f793          	zext.b	a5,a5
#     ++s1;
    1028:	00130313          	add	t1,t1,1
#     ++s2;
    102c:	001e0e13          	add	t3,t3,1
#     if (!*s1 && !*s2) {
    1030:	10079863          	bnez	a5,1140 <run+0xe60>
#     if (len == Size - 1) {
    1034:	013686b3          	add	a3,a3,s3
    1038:	00269693          	sll	a3,a3,0x2
    103c:	413686b3          	sub	a3,a3,s3
    1040:	00269693          	sll	a3,a3,0x2
    1044:	00da86b3          	add	a3,s5,a3
    1048:	0286a303          	lw	t1,40(a3)
    104c:	01f00793          	li	a5,31
    1050:	d0f30ce3          	beq	t1,a5,d68 <run+0xa88>
#     --len;
    1054:	00a707b3          	add	a5,a4,a0
    1058:	00579793          	sll	a5,a5,0x5
#     data[len] = elem;
    105c:	00668f33          	add	t5,a3,t1
#     ++len;
    1060:	00130e13          	add	t3,t1,1
#     --len;
    1064:	00fa8eb3          	add	t4,s5,a5
    1068:	fff80313          	add	t1,a6,-1
#     data[len] = elem;
    106c:	011f0423          	sb	a7,8(t5)
#     ++len;
    1070:	03c6a423          	sw	t3,40(a3)
#     --len;
    1074:	106ea423          	sw	t1,264(t4)
#     for (size_t i = ix; i < len; ++i) {
    1078:	ce6678e3          	bgeu	a2,t1,d68 <run+0xa88>
    107c:	40c808b3          	sub	a7,a6,a2
    1080:	ffe88e13          	add	t3,a7,-2
    1084:	00500693          	li	a3,5
    1088:	03c6f263          	bgeu	a3,t3,10ac <run+0xdcc>
    108c:	00c787b3          	add	a5,a5,a2
    1090:	00478693          	add	a3,a5,4
    1094:	00578793          	add	a5,a5,5
    1098:	00db06b3          	add	a3,s6,a3
    109c:	00fb07b3          	add	a5,s6,a5
    10a0:	00d7ee33          	or	t3,a5,a3
    10a4:	003e7e13          	and	t3,t3,3
    10a8:	720e0863          	beqz	t3,17d8 <run+0x14f8>
    10ac:	00458793          	add	a5,a1,4
    10b0:	087a8713          	add	a4,s5,135
    10b4:	00c787b3          	add	a5,a5,a2
    10b8:	01070733          	add	a4,a4,a6
    10bc:	00fb07b3          	add	a5,s6,a5
    10c0:	00b70733          	add	a4,a4,a1
#       data[i] = data[i + 1];
    10c4:	0017c683          	lbu	a3,1(a5)
#     for (size_t i = ix; i < len; ++i) {
    10c8:	00178793          	add	a5,a5,1
#       data[i] = data[i + 1];
    10cc:	fed78fa3          	sb	a3,-1(a5)
#     for (size_t i = ix; i < len; ++i) {
    10d0:	fee79ae3          	bne	a5,a4,10c4 <run+0xde4>
#     active_entity = active_entity == 1 ? 2 : 1;
    10d4:	00300793          	li	a5,3
    10d8:	413787b3          	sub	a5,a5,s3
    10dc:	0ff7f993          	zext.b	s3,a5
    10e0:	d64ff06f          	j	644 <run+0x364>
#     *UART_OUT = *str++;
    10e4:	00160613          	add	a2,a2,1
    10e8:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    10ec:	00064703          	lbu	a4,0(a2)
    10f0:	c6070ce3          	beqz	a4,d68 <run+0xa88>
#     while (*UART_OUT)
    10f4:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    10f8:	fe0786e3          	beqz	a5,10e4 <run+0xe04>
    10fc:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1100:	fe079ae3          	bnez	a5,10f4 <run+0xe14>
    1104:	fe1ff06f          	j	10e4 <run+0xe04>
#     *UART_OUT = *str++;
    1108:	001f8f93          	add	t6,t6,1
    110c:	ffe00f23          	sb	t5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1110:	000fcf03          	lbu	t5,0(t6)
    1114:	040f0263          	beqz	t5,1158 <run+0xe78>
#     while (*UART_OUT)
    1118:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    111c:	fe079ee3          	bnez	a5,1118 <run+0xe38>
    1120:	fe9ff06f          	j	1108 <run+0xe28>
#     if (*s1 != *s2) {
    1124:	0007c603          	lbu	a2,0(a5)
    1128:	0005c803          	lbu	a6,0(a1)
    112c:	e7060ae3          	beq	a2,a6,fa0 <run+0xcc0>
#     active_entity = active_entity == 1 ? 2 : 1;
    1130:	00300793          	li	a5,3
    1134:	413787b3          	sub	a5,a5,s3
    1138:	0ff7f993          	zext.b	s3,a5
    113c:	d08ff06f          	j	644 <run+0x364>
#     if (*s1 != *s2) {
    1140:	00034783          	lbu	a5,0(t1)
    1144:	000e4e83          	lbu	t4,0(t3)
    1148:	edd78ce3          	beq	a5,t4,1020 <run+0xd40>
#   for (size_t i = 0; i < n; ++i) {
    114c:	00160613          	add	a2,a2,1
    1150:	eac814e3          	bne	a6,a2,ff8 <run+0xd18>
#   while (*str) {
    1154:	fc0f12e3          	bnez	t5,1118 <run+0xe38>
    1158:	03012783          	lw	a5,48(sp)
    115c:	02000713          	li	a4,32
#     while (*UART_OUT)
    1160:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1164:	fe069ee3          	bnez	a3,1160 <run+0xe80>
#     *UART_OUT = *str++;
    1168:	00178793          	add	a5,a5,1
    116c:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1170:	0007c703          	lbu	a4,0(a5)
    1174:	fe0716e3          	bnez	a4,1160 <run+0xe80>
    1178:	bf1ff06f          	j	d68 <run+0xa88>
#           input_escape_sequence[2] = 0x33;
    117c:	01c90123          	sb	t3,2(s2)
#           continue;
    1180:	821ff06f          	j	9a0 <run+0x6c0>
    1184:	02c00593          	li	a1,44
    1188:	000b8613          	mv	a2,s7
#     while (*UART_OUT)
    118c:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1190:	fe079ee3          	bnez	a5,118c <run+0xeac>
#     *UART_OUT = *str++;
    1194:	00160613          	add	a2,a2,1
    1198:	feb00f23          	sb	a1,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    119c:	00064583          	lbu	a1,0(a2)
    11a0:	fe0596e3          	bnez	a1,118c <run+0xeac>
    11a4:	f28ff06f          	j	8cc <run+0x5ec>
#     if (cursor_ == 0) {
    11a8:	10c14703          	lbu	a4,268(sp)
    11ac:	900708e3          	beqz	a4,abc <run+0x7dc>
#     --cursor_;
    11b0:	01412f03          	lw	t5,20(sp)
    11b4:	fff70713          	add	a4,a4,-1
    11b8:	10e10623          	sb	a4,268(sp)
#     while (*UART_OUT)
    11bc:	ffe04703          	lbu	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    11c0:	fe071ee3          	bnez	a4,11bc <run+0xedc>
#     *UART_OUT = *str++;
    11c4:	001f0f13          	add	t5,t5,1
    11c8:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    11cc:	000f4783          	lbu	a5,0(t5)
    11d0:	fe0796e3          	bnez	a5,11bc <run+0xedc>
    11d4:	8e9ff06f          	j	abc <run+0x7dc>
#     for (size_t i = 0; i < len; ++i) {
    11d8:	00812703          	lw	a4,8(sp)
    11dc:	06e00693          	li	a3,110
#     while (*UART_OUT)
    11e0:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    11e4:	fe079ee3          	bnez	a5,11e0 <run+0xf00>
#     *UART_OUT = *str++;
    11e8:	00170713          	add	a4,a4,1
    11ec:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    11f0:	00074683          	lbu	a3,0(a4)
    11f4:	fe0696e3          	bnez	a3,11e0 <run+0xf00>
    11f8:	00d00693          	li	a3,13
    11fc:	00040713          	mv	a4,s0
#     while (*UART_OUT)
    1200:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1204:	fe079ee3          	bnez	a5,1200 <run+0xf20>
#     *UART_OUT = *str++;
    1208:	00170713          	add	a4,a4,1
    120c:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1210:	00074683          	lbu	a3,0(a4)
    1214:	fe0696e3          	bnez	a3,1200 <run+0xf20>
    1218:	00d00693          	li	a3,13
    121c:	00040713          	mv	a4,s0
#     while (*UART_OUT)
    1220:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1224:	fe079ee3          	bnez	a5,1220 <run+0xf40>
#     *UART_OUT = *str++;
    1228:	00170713          	add	a4,a4,1
    122c:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1230:	00074683          	lbu	a3,0(a4)
    1234:	fe0696e3          	bnez	a3,1220 <run+0xf40>
    1238:	b31ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    123c:	06400613          	li	a2,100
    1240:	1ec71663          	bne	a4,a2,142c <run+0x114c>
    1244:	03412583          	lw	a1,52(sp)
    1248:	06400813          	li	a6,100
#     if (!*s1 && !*s2) {
    124c:	01066633          	or	a2,a2,a6
#     ++s1;
    1250:	00178793          	add	a5,a5,1
#     ++s2;
    1254:	00158593          	add	a1,a1,1
#     if (!*s1 && !*s2) {
    1258:	10061c63          	bnez	a2,1370 <run+0x1090>
#     if (nwords < 2) {
    125c:	00100793          	li	a5,1
    1260:	74f50663          	beq	a0,a5,19ac <run+0x16cc>
#   auto length() const -> size_t { return len; }
    1264:	01368533          	add	a0,a3,s3
    1268:	00251513          	sll	a0,a0,0x2
    126c:	41350533          	sub	a0,a0,s3
    1270:	00251513          	sll	a0,a0,0x2
    1274:	00aa87b3          	add	a5,s5,a0
    1278:	0287a883          	lw	a7,40(a5)
#     action_drop(eid, words[1]);
    127c:	0a012703          	lw	a4,160(sp)
#   for (size_t i = 0; i < n; ++i) {
    1280:	10088a63          	beqz	a7,1394 <run+0x10b4>
#     if (*s1 != *s2) {
    1284:	00074e83          	lbu	t4,0(a4)
#   for (size_t i = 0; i < n; ++i) {
    1288:	00000813          	li	a6,0
#       return data[ix];
    128c:	010507b3          	add	a5,a0,a6
    1290:	00fa87b3          	add	a5,s5,a5
    1294:	0087c303          	lbu	t1,8(a5)
#     if (!strings_equal(objects[oid].name, obj_nm)) {
    1298:	00231793          	sll	a5,t1,0x2
    129c:	00fc87b3          	add	a5,s9,a5
    12a0:	0007a603          	lw	a2,0(a5)
#     if (*s1 != *s2) {
    12a4:	00064783          	lbu	a5,0(a2)
    12a8:	0efe9263          	bne	t4,a5,138c <run+0x10ac>
    12ac:	000e8e13          	mv	t3,t4
    12b0:	00070593          	mv	a1,a4
#     if (!*s1 && !*s2) {
    12b4:	01c7e7b3          	or	a5,a5,t3
#     ++s1;
    12b8:	00160613          	add	a2,a2,1
#     ++s2;
    12bc:	00158593          	add	a1,a1,1
#     if (!*s1 && !*s2) {
    12c0:	0c079063          	bnez	a5,1380 <run+0x10a0>
#     if (locations[ent.location].objects.add(oid)) {
    12c4:	01368633          	add	a2,a3,s3
    12c8:	00261613          	sll	a2,a2,0x2
    12cc:	41360633          	sub	a2,a2,s3
    12d0:	00261613          	sll	a2,a2,0x2
    12d4:	00ca8e33          	add	t3,s5,a2
    12d8:	004e4783          	lbu	a5,4(t3)
#     if (len == Size - 1) {
    12dc:	07f00593          	li	a1,127
    12e0:	00279713          	sll	a4,a5,0x2
    12e4:	00f70733          	add	a4,a4,a5
    12e8:	00571713          	sll	a4,a4,0x5
    12ec:	00ea8733          	add	a4,s5,a4
    12f0:	10872783          	lw	a5,264(a4)
    12f4:	a6b78ae3          	beq	a5,a1,d68 <run+0xa88>
#     data[len] = elem;
    12f8:	00f70eb3          	add	t4,a4,a5
#     --len;
    12fc:	fff88593          	add	a1,a7,-1
#     ++len;
    1300:	00178793          	add	a5,a5,1
#     data[len] = elem;
    1304:	086e8423          	sb	t1,136(t4)
#     ++len;
    1308:	10f72423          	sw	a5,264(a4)
#     --len;
    130c:	02be2423          	sw	a1,40(t3)
#     for (size_t i = ix; i < len; ++i) {
    1310:	a4b87ce3          	bgeu	a6,a1,d68 <run+0xa88>
    1314:	41088733          	sub	a4,a7,a6
    1318:	ffe70793          	add	a5,a4,-2
    131c:	00500e13          	li	t3,5
    1320:	02fe7263          	bgeu	t3,a5,1344 <run+0x1064>
    1324:	01060633          	add	a2,a2,a6
    1328:	00860313          	add	t1,a2,8
    132c:	00960613          	add	a2,a2,9
    1330:	006a8333          	add	t1,s5,t1
    1334:	00ca87b3          	add	a5,s5,a2
    1338:	0067e633          	or	a2,a5,t1
    133c:	00367613          	and	a2,a2,3
    1340:	50060663          	beqz	a2,184c <run+0x156c>
    1344:	00412783          	lw	a5,4(sp)
    1348:	00850713          	add	a4,a0,8
    134c:	01070733          	add	a4,a4,a6
    1350:	011787b3          	add	a5,a5,a7
    1354:	00ea8733          	add	a4,s5,a4
    1358:	00a787b3          	add	a5,a5,a0
#       data[i] = data[i + 1];
    135c:	00174683          	lbu	a3,1(a4)
#     for (size_t i = ix; i < len; ++i) {
    1360:	00170713          	add	a4,a4,1
#       data[i] = data[i + 1];
    1364:	fed70fa3          	sb	a3,-1(a4)
#     for (size_t i = ix; i < len; ++i) {
    1368:	fee79ae3          	bne	a5,a4,135c <run+0x107c>
    136c:	9fdff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    1370:	0007c603          	lbu	a2,0(a5)
    1374:	0005c803          	lbu	a6,0(a1)
    1378:	ed060ae3          	beq	a2,a6,124c <run+0xf6c>
    137c:	9edff06f          	j	d68 <run+0xa88>
    1380:	00064783          	lbu	a5,0(a2)
    1384:	0005ce03          	lbu	t3,0(a1)
    1388:	f3c786e3          	beq	a5,t3,12b4 <run+0xfd4>
#   for (size_t i = 0; i < n; ++i) {
    138c:	00180813          	add	a6,a6,1
    1390:	ef089ee3          	bne	a7,a6,128c <run+0xfac>
    1394:	00012783          	lw	a5,0(sp)
    1398:	07500693          	li	a3,117
#     while (*UART_OUT)
    139c:	ffe04603          	lbu	a2,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    13a0:	fe061ee3          	bnez	a2,139c <run+0x10bc>
#     *UART_OUT = *str++;
    13a4:	00178793          	add	a5,a5,1
    13a8:	fed00f23          	sb	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    13ac:	0007c683          	lbu	a3,0(a5)
    13b0:	fe0696e3          	bnez	a3,139c <run+0x10bc>
    13b4:	00074783          	lbu	a5,0(a4)
    13b8:	00078e63          	beqz	a5,13d4 <run+0x10f4>
#     while (*UART_OUT)
    13bc:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    13c0:	fe069ee3          	bnez	a3,13bc <run+0x10dc>
#     *UART_OUT = *str++;
    13c4:	00170713          	add	a4,a4,1
    13c8:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    13cc:	00074783          	lbu	a5,0(a4)
    13d0:	fe0796e3          	bnez	a5,13bc <run+0x10dc>
    13d4:	03c12783          	lw	a5,60(sp)
    13d8:	00d00713          	li	a4,13
#     while (*UART_OUT)
    13dc:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    13e0:	fe069ee3          	bnez	a3,13dc <run+0x10fc>
#     *UART_OUT = *str++;
    13e4:	00178793          	add	a5,a5,1
    13e8:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    13ec:	0007c703          	lbu	a4,0(a5)
    13f0:	fe0716e3          	bnez	a4,13dc <run+0x10fc>
    13f4:	975ff06f          	j	d68 <run+0xa88>
#     if (cursor_ == end_) {
    13f8:	10c14703          	lbu	a4,268(sp)
    13fc:	10d14f03          	lbu	t5,269(sp)
    1400:	eaef0e63          	beq	t5,a4,abc <run+0x7dc>
#     ++cursor_;
    1404:	01812f03          	lw	t5,24(sp)
    1408:	00170713          	add	a4,a4,1
    140c:	10e10623          	sb	a4,268(sp)
#     while (*UART_OUT)
    1410:	ffe04703          	lbu	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1414:	fe071ee3          	bnez	a4,1410 <run+0x1130>
#     *UART_OUT = *str++;
    1418:	001f0f13          	add	t5,t5,1
    141c:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1420:	000f4783          	lbu	a5,0(t5)
    1424:	fe0796e3          	bnez	a5,1410 <run+0x1130>
    1428:	e94ff06f          	j	abc <run+0x7dc>
#     if (*s1 != *s2) {
    142c:	06e00613          	li	a2,110
    1430:	02c71e63          	bne	a4,a2,146c <run+0x118c>
    1434:	04012603          	lw	a2,64(sp)
    1438:	06e00693          	li	a3,110
#     if (!*s1 && !*s2) {
    143c:	00d76733          	or	a4,a4,a3
#     ++s1;
    1440:	00178793          	add	a5,a5,1
#     ++s2;
    1444:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
    1448:	00071a63          	bnez	a4,145c <run+0x117c>
#     action_go(eid, 0);
    144c:	00000593          	li	a1,0
    1450:	00098513          	mv	a0,s3
    1454:	bb5fe0ef          	jal	8 <_ZL9action_gohh>
    1458:	911ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    145c:	0007c703          	lbu	a4,0(a5)
    1460:	00064683          	lbu	a3,0(a2)
    1464:	fcd70ce3          	beq	a4,a3,143c <run+0x115c>
    1468:	901ff06f          	j	d68 <run+0xa88>
    146c:	06500613          	li	a2,101
    1470:	02c71e63          	bne	a4,a2,14ac <run+0x11cc>
    1474:	04412603          	lw	a2,68(sp)
    1478:	06500693          	li	a3,101
#     if (!*s1 && !*s2) {
    147c:	00d76733          	or	a4,a4,a3
#     ++s1;
    1480:	00178793          	add	a5,a5,1
#     ++s2;
    1484:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
    1488:	00071a63          	bnez	a4,149c <run+0x11bc>
#     action_go(eid, 1);
    148c:	00100593          	li	a1,1
    1490:	00098513          	mv	a0,s3
    1494:	b75fe0ef          	jal	8 <_ZL9action_gohh>
    1498:	8d1ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    149c:	0007c703          	lbu	a4,0(a5)
    14a0:	00064683          	lbu	a3,0(a2)
    14a4:	fcd70ce3          	beq	a4,a3,147c <run+0x119c>
    14a8:	8c1ff06f          	j	d68 <run+0xa88>
    14ac:	07300613          	li	a2,115
    14b0:	02c71e63          	bne	a4,a2,14ec <run+0x120c>
    14b4:	04812603          	lw	a2,72(sp)
    14b8:	07300693          	li	a3,115
#     if (!*s1 && !*s2) {
    14bc:	00d76733          	or	a4,a4,a3
#     ++s1;
    14c0:	00178793          	add	a5,a5,1
#     ++s2;
    14c4:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
    14c8:	00071a63          	bnez	a4,14dc <run+0x11fc>
#     action_go(eid, 2);
    14cc:	00200593          	li	a1,2
    14d0:	00098513          	mv	a0,s3
    14d4:	b35fe0ef          	jal	8 <_ZL9action_gohh>
    14d8:	891ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    14dc:	0007c703          	lbu	a4,0(a5)
    14e0:	00064683          	lbu	a3,0(a2)
    14e4:	fcd70ce3          	beq	a4,a3,14bc <run+0x11dc>
    14e8:	881ff06f          	j	d68 <run+0xa88>
    14ec:	07700613          	li	a2,119
    14f0:	02c71e63          	bne	a4,a2,152c <run+0x124c>
    14f4:	04c12603          	lw	a2,76(sp)
    14f8:	07700693          	li	a3,119
#     if (!*s1 && !*s2) {
    14fc:	00d76733          	or	a4,a4,a3
#     ++s1;
    1500:	00178793          	add	a5,a5,1
#     ++s2;
    1504:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
    1508:	00071a63          	bnez	a4,151c <run+0x123c>
#     action_go(eid, 3);
    150c:	00300593          	li	a1,3
    1510:	00098513          	mv	a0,s3
    1514:	af5fe0ef          	jal	8 <_ZL9action_gohh>
    1518:	851ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    151c:	0007c703          	lbu	a4,0(a5)
    1520:	00064683          	lbu	a3,0(a2)
    1524:	fcd70ce3          	beq	a4,a3,14fc <run+0x121c>
    1528:	841ff06f          	j	d68 <run+0xa88>
    152c:	06700613          	li	a2,103
    1530:	1cc71663          	bne	a4,a2,16fc <run+0x141c>
    1534:	05012583          	lw	a1,80(sp)
    1538:	06700813          	li	a6,103
#     if (!*s1 && !*s2) {
    153c:	01066633          	or	a2,a2,a6
#     ++s1;
    1540:	00178793          	add	a5,a5,1
#     ++s2;
    1544:	00158593          	add	a1,a1,1
#     if (!*s1 && !*s2) {
    1548:	1a061263          	bnez	a2,16ec <run+0x140c>
#     if (nwords < 2) {
    154c:	00100793          	li	a5,1
    1550:	56f50a63          	beq	a0,a5,1ac4 <run+0x17e4>
#     if (nwords < 3) {
    1554:	00200793          	li	a5,2
    1558:	48f50663          	beq	a0,a5,19e4 <run+0x1704>
#   location &loc = locations[ent.location];
    155c:	013687b3          	add	a5,a3,s3
    1560:	00279793          	sll	a5,a5,0x2
    1564:	413787b3          	sub	a5,a5,s3
    1568:	00279793          	sll	a5,a5,0x2
    156c:	00fa87b3          	add	a5,s5,a5
    1570:	0047c703          	lbu	a4,4(a5)
#     action_give(eid, words[1], words[2]);
    1574:	0a412503          	lw	a0,164(sp)
    1578:	0a012883          	lw	a7,160(sp)
#   auto length() const -> size_t { return len; }
    157c:	00271793          	sll	a5,a4,0x2
    1580:	00e787b3          	add	a5,a5,a4
    1584:	00579793          	sll	a5,a5,0x5
    1588:	00fa8733          	add	a4,s5,a5
    158c:	11472e03          	lw	t3,276(a4)
#     if (*s1 != *s2) {
    1590:	00054803          	lbu	a6,0(a0)
    1594:	00fb05b3          	add	a1,s6,a5
#   for (size_t i = 0; i < n; ++i) {
    1598:	00000e93          	li	t4,0
    159c:	49de0463          	beq	t3,t4,1a24 <run+0x1744>
#     entity &to = entities[lse.at(i)];
    15a0:	0885c303          	lbu	t1,136(a1)
#     if (!strings_equal(to.name, to_ent_nm)) {
    15a4:	00131613          	sll	a2,t1,0x1
    15a8:	006607b3          	add	a5,a2,t1
    15ac:	00279793          	sll	a5,a5,0x2
    15b0:	406787b3          	sub	a5,a5,t1
    15b4:	00279793          	sll	a5,a5,0x2
    15b8:	00fa87b3          	add	a5,s5,a5
    15bc:	0007a783          	lw	a5,0(a5)
#     if (*s1 != *s2) {
    15c0:	0007c703          	lbu	a4,0(a5)
    15c4:	44e81663          	bne	a6,a4,1a10 <run+0x1730>
    15c8:	00080f93          	mv	t6,a6
    15cc:	00050f13          	mv	t5,a0
#     if (!*s1 && !*s2) {
    15d0:	01f76733          	or	a4,a4,t6
#     ++s1;
    15d4:	00178793          	add	a5,a5,1
#     ++s2;
    15d8:	001f0f13          	add	t5,t5,1
#     if (!*s1 && !*s2) {
    15dc:	42071463          	bnez	a4,1a04 <run+0x1724>
#   auto length() const -> size_t { return len; }
    15e0:	013687b3          	add	a5,a3,s3
    15e4:	00279793          	sll	a5,a5,0x2
    15e8:	413787b3          	sub	a5,a5,s3
    15ec:	00279793          	sll	a5,a5,0x2
    15f0:	00fa8733          	add	a4,s5,a5
    15f4:	02872283          	lw	t0,40(a4)
    15f8:	0008cf83          	lbu	t6,0(a7)
    15fc:	00199693          	sll	a3,s3,0x1
#     for (size_t j = 0; j < m; j++) {
    1600:	00000593          	li	a1,0
    1604:	44b28a63          	beq	t0,a1,1a58 <run+0x1778>
#       return data[ix];
    1608:	00874803          	lbu	a6,8(a4)
#       if (!strings_equal(objects[oid].name, obj_nm)) {
    160c:	00281513          	sll	a0,a6,0x2
    1610:	00ac8533          	add	a0,s9,a0
    1614:	00052e03          	lw	t3,0(a0)
#     if (*s1 != *s2) {
    1618:	000e4503          	lbu	a0,0(t3)
    161c:	42af9463          	bne	t6,a0,1a44 <run+0x1764>
    1620:	000f8f13          	mv	t5,t6
    1624:	00088e93          	mv	t4,a7
#     if (!*s1 && !*s2) {
    1628:	01e56533          	or	a0,a0,t5
#     ++s1;
    162c:	001e0e13          	add	t3,t3,1
#     ++s2;
    1630:	001e8e93          	add	t4,t4,1
#     if (!*s1 && !*s2) {
    1634:	40051263          	bnez	a0,1a38 <run+0x1758>
#     if (len == Size - 1) {
    1638:	00660633          	add	a2,a2,t1
    163c:	00261613          	sll	a2,a2,0x2
    1640:	40660633          	sub	a2,a2,t1
    1644:	00261613          	sll	a2,a2,0x2
    1648:	00ca8633          	add	a2,s5,a2
    164c:	02862883          	lw	a7,40(a2)
    1650:	01f00713          	li	a4,31
    1654:	f0e88a63          	beq	a7,a4,d68 <run+0xa88>
#     if (len == 0) {
    1658:	01368733          	add	a4,a3,s3
    165c:	00271713          	sll	a4,a4,0x2
    1660:	41370733          	sub	a4,a4,s3
#     ++len;
    1664:	00188693          	add	a3,a7,1
#     if (len == 0) {
    1668:	00271713          	sll	a4,a4,0x2
#     ++len;
    166c:	02d62423          	sw	a3,40(a2)
#     if (len == 0) {
    1670:	00ea86b3          	add	a3,s5,a4
    1674:	0286a503          	lw	a0,40(a3)
#     data[len] = elem;
    1678:	01160633          	add	a2,a2,a7
    167c:	01060423          	sb	a6,8(a2)
#     if (len == 0) {
    1680:	ee050463          	beqz	a0,d68 <run+0xa88>
#     --len;
    1684:	fff50893          	add	a7,a0,-1
    1688:	0316a423          	sw	a7,40(a3)
#     for (size_t i = ix; i < len; ++i) {
    168c:	ed15fe63          	bgeu	a1,a7,d68 <run+0xa88>
    1690:	40b506b3          	sub	a3,a0,a1
    1694:	ffe68813          	add	a6,a3,-2
    1698:	00500613          	li	a2,5
    169c:	03067263          	bgeu	a2,a6,16c0 <run+0x13e0>
    16a0:	00b70733          	add	a4,a4,a1
    16a4:	00870813          	add	a6,a4,8
    16a8:	00970713          	add	a4,a4,9
    16ac:	010a8833          	add	a6,s5,a6
    16b0:	00ea8733          	add	a4,s5,a4
    16b4:	01076633          	or	a2,a4,a6
    16b8:	00367613          	and	a2,a2,3
    16bc:	3a060c63          	beqz	a2,1a74 <run+0x1794>
    16c0:	00412683          	lw	a3,4(sp)
    16c4:	00878713          	add	a4,a5,8
    16c8:	00b70733          	add	a4,a4,a1
    16cc:	00a686b3          	add	a3,a3,a0
    16d0:	00ea8733          	add	a4,s5,a4
    16d4:	00f687b3          	add	a5,a3,a5
#       data[i] = data[i + 1];
    16d8:	00174683          	lbu	a3,1(a4)
#     for (size_t i = ix; i < len; ++i) {
    16dc:	00170713          	add	a4,a4,1
#       data[i] = data[i + 1];
    16e0:	fed70fa3          	sb	a3,-1(a4)
#     for (size_t i = ix; i < len; ++i) {
    16e4:	fee79ae3          	bne	a5,a4,16d8 <run+0x13f8>
    16e8:	e80ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    16ec:	0007c603          	lbu	a2,0(a5)
    16f0:	0005c803          	lbu	a6,0(a1)
    16f4:	e50604e3          	beq	a2,a6,153c <run+0x125c>
    16f8:	e70ff06f          	j	d68 <run+0xa88>
    16fc:	06d00693          	li	a3,109
    1700:	e6d71463          	bne	a4,a3,d68 <run+0xa88>
    1704:	06412603          	lw	a2,100(sp)
    1708:	00070693          	mv	a3,a4
#     if (!*s1 && !*s2) {
    170c:	00d76733          	or	a4,a4,a3
    1710:	0ff77713          	zext.b	a4,a4
#     ++s1;
    1714:	00178793          	add	a5,a5,1
#     ++s2;
    1718:	00160613          	add	a2,a2,1
#     if (!*s1 && !*s2) {
    171c:	0a071663          	bnez	a4,17c8 <run+0x14e8>
    1720:	06812783          	lw	a5,104(sp)
    1724:	07400713          	li	a4,116
#     while (*UART_OUT)
    1728:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    172c:	fe069ee3          	bnez	a3,1728 <run+0x1448>
#     *UART_OUT = *str++;
    1730:	00178793          	add	a5,a5,1
    1734:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1738:	0007c703          	lbu	a4,0(a5)
    173c:	fe0716e3          	bnez	a4,1728 <run+0x1448>
#   while (ptr < end) {
    1740:	00200737          	lui	a4,0x200
#   char *ptr = reinterpret_cast<char *>(0x10000);
    1744:	000107b7          	lui	a5,0x10
#   while (ptr < end) {
    1748:	c0070713          	add	a4,a4,-1024 # 1ffc00 <_ZL21input_escape_sequence+0x1fd520>
    174c:	0ff7f613          	zext.b	a2,a5
#     *ptr++ = ch++;
    1750:	00c78023          	sb	a2,0(a5) # 10000 <_ZL21input_escape_sequence+0xd920>
    1754:	00178793          	add	a5,a5,1
#   while (ptr < end) {
    1758:	fee79ae3          	bne	a5,a4,174c <run+0x146c>
    175c:	06c12783          	lw	a5,108(sp)
#   while (*str) {
    1760:	07400713          	li	a4,116
#     while (*UART_OUT)
    1764:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1768:	fe069ee3          	bnez	a3,1764 <run+0x1484>
#     *UART_OUT = *str++;
    176c:	00178793          	add	a5,a5,1
    1770:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1774:	0007c703          	lbu	a4,0(a5)
    1778:	fe0716e3          	bnez	a4,1764 <run+0x1484>
#   while (ptr < end) {
    177c:	00200737          	lui	a4,0x200
#   ptr = reinterpret_cast<char *>(0x10000);
    1780:	000107b7          	lui	a5,0x10
#   while (ptr < end) {
    1784:	c0070713          	add	a4,a4,-1024 # 1ffc00 <_ZL21input_escape_sequence+0x1fd520>
    1788:	0080006f          	j	1790 <run+0x14b0>
    178c:	3ae78463          	beq	a5,a4,1b34 <run+0x1854>
#     if (*ptr++ != ch++) {
    1790:	0007c603          	lbu	a2,0(a5) # 10000 <_ZL21input_escape_sequence+0xd920>
    1794:	00178793          	add	a5,a5,1
    1798:	fff78693          	add	a3,a5,-1
    179c:	0ff6f693          	zext.b	a3,a3
    17a0:	fed606e3          	beq	a2,a3,178c <run+0x14ac>
    17a4:	07012783          	lw	a5,112(sp)
#   while (*str) {
    17a8:	02100713          	li	a4,33
#     while (*UART_OUT)
    17ac:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    17b0:	fe069ee3          	bnez	a3,17ac <run+0x14cc>
#     *UART_OUT = *str++;
    17b4:	00178793          	add	a5,a5,1
    17b8:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    17bc:	0007c703          	lbu	a4,0(a5)
    17c0:	fe0716e3          	bnez	a4,17ac <run+0x14cc>
    17c4:	da4ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    17c8:	0007c703          	lbu	a4,0(a5)
    17cc:	00064683          	lbu	a3,0(a2)
    17d0:	f2d70ee3          	beq	a4,a3,170c <run+0x142c>
    17d4:	d94ff06f          	j	d68 <run+0xa88>
    17d8:	fff88593          	add	a1,a7,-1
    17dc:	ffc5f813          	and	a6,a1,-4
    17e0:	01068833          	add	a6,a3,a6
#       data[i] = data[i + 1];
    17e4:	0007a883          	lw	a7,0(a5)
    17e8:	00468693          	add	a3,a3,4
    17ec:	00478793          	add	a5,a5,4
    17f0:	ff16ae23          	sw	a7,-4(a3)
#     for (size_t i = ix; i < len; ++i) {
    17f4:	ff0698e3          	bne	a3,a6,17e4 <run+0x1504>
    17f8:	ffc5f693          	and	a3,a1,-4
    17fc:	0035f593          	and	a1,a1,3
    1800:	00c686b3          	add	a3,a3,a2
    1804:	d6058263          	beqz	a1,d68 <run+0xa88>
#       data[i] = data[i + 1];
    1808:	00a707b3          	add	a5,a4,a0
    180c:	00579793          	sll	a5,a5,0x5
    1810:	00fa87b3          	add	a5,s5,a5
    1814:	00168593          	add	a1,a3,1
    1818:	00b78633          	add	a2,a5,a1
    181c:	08864503          	lbu	a0,136(a2)
    1820:	00d78733          	add	a4,a5,a3
    1824:	08a70423          	sb	a0,136(a4)
#     for (size_t i = ix; i < len; ++i) {
    1828:	d465f063          	bgeu	a1,t1,d68 <run+0xa88>
#       data[i] = data[i + 1];
    182c:	00268693          	add	a3,a3,2
    1830:	00d787b3          	add	a5,a5,a3
    1834:	0887c583          	lbu	a1,136(a5)
    1838:	08b60423          	sb	a1,136(a2)
#     for (size_t i = ix; i < len; ++i) {
    183c:	d266f663          	bgeu	a3,t1,d68 <run+0xa88>
#       data[i] = data[i + 1];
    1840:	08b74703          	lbu	a4,139(a4)
    1844:	08e78423          	sb	a4,136(a5)
#     for (size_t i = ix; i < len; ++i) {
    1848:	d20ff06f          	j	d68 <run+0xa88>
#       data[i] = data[i + 1];
    184c:	0007a503          	lw	a0,0(a5)
    1850:	fff70713          	add	a4,a4,-1
    1854:	00275613          	srl	a2,a4,0x2
    1858:	00a32023          	sw	a0,0(t1)
#     for (size_t i = ix; i < len; ++i) {
    185c:	00100513          	li	a0,1
    1860:	16a60663          	beq	a2,a0,19cc <run+0x16ec>
#       data[i] = data[i + 1];
    1864:	0047a883          	lw	a7,4(a5)
    1868:	00200513          	li	a0,2
    186c:	01132223          	sw	a7,4(t1)
#     for (size_t i = ix; i < len; ++i) {
    1870:	04a60c63          	beq	a2,a0,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    1874:	0087a883          	lw	a7,8(a5)
    1878:	00300513          	li	a0,3
    187c:	01132423          	sw	a7,8(t1)
#     for (size_t i = ix; i < len; ++i) {
    1880:	04a60463          	beq	a2,a0,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    1884:	00c7a883          	lw	a7,12(a5)
    1888:	00400513          	li	a0,4
    188c:	01132623          	sw	a7,12(t1)
#     for (size_t i = ix; i < len; ++i) {
    1890:	02a60c63          	beq	a2,a0,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    1894:	0107a503          	lw	a0,16(a5)
    1898:	00a32823          	sw	a0,16(t1)
#     for (size_t i = ix; i < len; ++i) {
    189c:	03c60663          	beq	a2,t3,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    18a0:	0147a883          	lw	a7,20(a5)
    18a4:	00600513          	li	a0,6
    18a8:	01132a23          	sw	a7,20(t1)
#     for (size_t i = ix; i < len; ++i) {
    18ac:	00a60e63          	beq	a2,a0,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    18b0:	0187a883          	lw	a7,24(a5)
    18b4:	00700513          	li	a0,7
    18b8:	01132c23          	sw	a7,24(t1)
#     for (size_t i = ix; i < len; ++i) {
    18bc:	00a60663          	beq	a2,a0,18c8 <run+0x15e8>
#       data[i] = data[i + 1];
    18c0:	01c7a783          	lw	a5,28(a5)
    18c4:	00f32e23          	sw	a5,28(t1)
#     for (size_t i = ix; i < len; ++i) {
    18c8:	00377793          	and	a5,a4,3
    18cc:	c8078e63          	beqz	a5,d68 <run+0xa88>
    18d0:	ffc77713          	and	a4,a4,-4
    18d4:	01070733          	add	a4,a4,a6
#       data[i] = data[i + 1];
    18d8:	013687b3          	add	a5,a3,s3
    18dc:	00279793          	sll	a5,a5,0x2
    18e0:	413787b3          	sub	a5,a5,s3
    18e4:	00279793          	sll	a5,a5,0x2
    18e8:	00fa87b3          	add	a5,s5,a5
    18ec:	00170513          	add	a0,a4,1
    18f0:	00a78633          	add	a2,a5,a0
    18f4:	00864803          	lbu	a6,8(a2)
    18f8:	00e786b3          	add	a3,a5,a4
    18fc:	01068423          	sb	a6,8(a3)
#     for (size_t i = ix; i < len; ++i) {
    1900:	c6b57463          	bgeu	a0,a1,d68 <run+0xa88>
#       data[i] = data[i + 1];
    1904:	00270713          	add	a4,a4,2
    1908:	00e787b3          	add	a5,a5,a4
    190c:	0087c503          	lbu	a0,8(a5)
    1910:	00a60423          	sb	a0,8(a2)
#     for (size_t i = ix; i < len; ++i) {
    1914:	c4b77a63          	bgeu	a4,a1,d68 <run+0xa88>
#       data[i] = data[i + 1];
    1918:	00b6c703          	lbu	a4,11(a3)
    191c:	00e78423          	sb	a4,8(a5)
#     for (size_t i = ix; i < len; ++i) {
    1920:	c48ff06f          	j	d68 <run+0xa88>
    1924:	00100f93          	li	t6,1
    1928:	01b7e463          	bltu	a5,s11,1930 <run+0x1650>
    192c:	fff38f93          	add	t6,t2,-1
    1930:	ffcff393          	and	t2,t6,-4
    1934:	007f03b3          	add	t2,t5,t2
#       line_[i - 1] = line_[i];
    1938:	000f2d83          	lw	s11,0(t5)
    193c:	004f0f13          	add	t5,t5,4
    1940:	00428293          	add	t0,t0,4
    1944:	ffb2ae23          	sw	s11,-4(t0)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1948:	ffe398e3          	bne	t2,t5,1938 <run+0x1658>
    194c:	ffcfff13          	and	t5,t6,-4
    1950:	003fff93          	and	t6,t6,3
    1954:	001f0f33          	add	t5,t5,ra
    1958:	da0f8e63          	beqz	t6,f14 <run+0xc34>
#       line_[i - 1] = line_[i];
    195c:	080f0f93          	add	t6,t5,128
    1960:	09010293          	add	t0,sp,144
    1964:	005f82b3          	add	t0,t6,t0
    1968:	fac2c383          	lbu	t2,-84(t0)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    196c:	001f0f93          	add	t6,t5,1
#       line_[i - 1] = line_[i];
    1970:	fa7285a3          	sb	t2,-85(t0)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1974:	dafff063          	bgeu	t6,a5,f14 <run+0xc34>
#       line_[i - 1] = line_[i];
    1978:	081f0f93          	add	t6,t5,129
    197c:	09010393          	add	t2,sp,144
    1980:	007f8fb3          	add	t6,t6,t2
    1984:	facfc383          	lbu	t2,-84(t6)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1988:	002f0f13          	add	t5,t5,2
#       line_[i - 1] = line_[i];
    198c:	fa728623          	sb	t2,-84(t0)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1990:	d8ff7263          	bgeu	t5,a5,f14 <run+0xc34>
#       line_[i - 1] = line_[i];
    1994:	080f0f13          	add	t5,t5,128
    1998:	09010293          	add	t0,sp,144
    199c:	005f0f33          	add	t5,t5,t0
    19a0:	facf4f03          	lbu	t5,-84(t5)
    19a4:	fbef8623          	sb	t5,-84(t6)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    19a8:	d6cff06f          	j	f14 <run+0xc34>
    19ac:	03812683          	lw	a3,56(sp)
#     while (*UART_OUT)
    19b0:	ffe04783          	lbu	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    19b4:	fe079ee3          	bnez	a5,19b0 <run+0x16d0>
#     *UART_OUT = *str++;
    19b8:	00168693          	add	a3,a3,1
    19bc:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    19c0:	0006c703          	lbu	a4,0(a3)
    19c4:	fe0716e3          	bnez	a4,19b0 <run+0x16d0>
    19c8:	ba0ff06f          	j	d68 <run+0xa88>
    19cc:	00480713          	add	a4,a6,4
    19d0:	f09ff06f          	j	18d8 <run+0x15f8>
#     *ptr++ = char(ch);
    19d4:	000025b7          	lui	a1,0x2
#   while (n--) {
    19d8:	ffe78613          	add	a2,a5,-2
#     *ptr++ = char(ch);
    19dc:	6e158593          	add	a1,a1,1761 # 26e1 <_ZL21input_escape_sequence+0x1>
    19e0:	9a5fe06f          	j	384 <run+0xa4>
    19e4:	05812783          	lw	a5,88(sp)
#     while (*UART_OUT)
    19e8:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    19ec:	fe069ee3          	bnez	a3,19e8 <run+0x1708>
#     *UART_OUT = *str++;
    19f0:	00178793          	add	a5,a5,1
    19f4:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    19f8:	0007c703          	lbu	a4,0(a5)
    19fc:	fe0716e3          	bnez	a4,19e8 <run+0x1708>
    1a00:	b68ff06f          	j	d68 <run+0xa88>
#     if (*s1 != *s2) {
    1a04:	0007c703          	lbu	a4,0(a5)
    1a08:	000f4f83          	lbu	t6,0(t5)
    1a0c:	bdf702e3          	beq	a4,t6,15d0 <run+0x12f0>
#   for (size_t i = 0; i < n; ++i) {
    1a10:	001e8e93          	add	t4,t4,1
    1a14:	00158593          	add	a1,a1,1
    1a18:	b85ff06f          	j	159c <run+0x12bc>
#     *UART_OUT = *str++;
    1a1c:	00150513          	add	a0,a0,1
    1a20:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1a24:	00054783          	lbu	a5,0(a0)
    1a28:	0e078663          	beqz	a5,1b14 <run+0x1834>
#     while (*UART_OUT)
    1a2c:	ffe04703          	lbu	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1a30:	fe071ee3          	bnez	a4,1a2c <run+0x174c>
    1a34:	fe9ff06f          	j	1a1c <run+0x173c>
#     if (*s1 != *s2) {
    1a38:	000e4503          	lbu	a0,0(t3)
    1a3c:	000ecf03          	lbu	t5,0(t4)
    1a40:	bfe504e3          	beq	a0,t5,1628 <run+0x1348>
#     for (size_t j = 0; j < m; j++) {
    1a44:	00158593          	add	a1,a1,1
    1a48:	00170713          	add	a4,a4,1
    1a4c:	bb9ff06f          	j	1604 <run+0x1324>
#     *UART_OUT = *str++;
    1a50:	00188893          	add	a7,a7,1
    1a54:	fef00f23          	sb	a5,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1a58:	0008c783          	lbu	a5,0(a7)
    1a5c:	08078c63          	beqz	a5,1af4 <run+0x1814>
#     while (*UART_OUT)
    1a60:	ffe04703          	lbu	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1a64:	fe071ee3          	bnez	a4,1a60 <run+0x1780>
    1a68:	fe9ff06f          	j	1a50 <run+0x1770>
#   char *ptr = reinterpret_cast<char *>(str);
    1a6c:	6e070713          	add	a4,a4,1760
    1a70:	945fe06f          	j	3b4 <run+0xd4>
    1a74:	fff68693          	add	a3,a3,-1
    1a78:	ffc6f513          	and	a0,a3,-4
#       data[i] = data[i + 1];
    1a7c:	00c70333          	add	t1,a4,a2
    1a80:	00032e03          	lw	t3,0(t1)
    1a84:	00c80333          	add	t1,a6,a2
    1a88:	00460613          	add	a2,a2,4
    1a8c:	01c32023          	sw	t3,0(t1)
#     for (size_t i = ix; i < len; ++i) {
    1a90:	fec516e3          	bne	a0,a2,1a7c <run+0x179c>
    1a94:	ffc6f713          	and	a4,a3,-4
    1a98:	0036f693          	and	a3,a3,3
    1a9c:	00b70733          	add	a4,a4,a1
    1aa0:	ac068463          	beqz	a3,d68 <run+0xa88>
    1aa4:	00e787b3          	add	a5,a5,a4
    1aa8:	00fa87b3          	add	a5,s5,a5
#       data[i] = data[i + 1];
    1aac:	0097c683          	lbu	a3,9(a5)
    1ab0:	00170713          	add	a4,a4,1
#     for (size_t i = ix; i < len; ++i) {
    1ab4:	00178793          	add	a5,a5,1
#       data[i] = data[i + 1];
    1ab8:	00d783a3          	sb	a3,7(a5)
#     for (size_t i = ix; i < len; ++i) {
    1abc:	ff1768e3          	bltu	a4,a7,1aac <run+0x17cc>
    1ac0:	aa8ff06f          	j	d68 <run+0xa88>
    1ac4:	05412783          	lw	a5,84(sp)
#     while (*UART_OUT)
    1ac8:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1acc:	fe069ee3          	bnez	a3,1ac8 <run+0x17e8>
#     *UART_OUT = *str++;
    1ad0:	00178793          	add	a5,a5,1
    1ad4:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
#   while (*str) {
    1ad8:	0007c703          	lbu	a4,0(a5)
    1adc:	fe0716e3          	bnez	a4,1ac8 <run+0x17e8>
    1ae0:	a88ff06f          	j	d68 <run+0xa88>
#     *ptr++ = char(ch);
    1ae4:	000025b7          	lui	a1,0x2
#   while (n--) {
    1ae8:	ffd78613          	add	a2,a5,-3
#     *ptr++ = char(ch);
    1aec:	6e258593          	add	a1,a1,1762 # 26e2 <_ZL21input_escape_sequence+0x2>
    1af0:	895fe06f          	j	384 <run+0xa4>
    1af4:	05c12783          	lw	a5,92(sp)
#   while (*str) {
    1af8:	0007c703          	lbu	a4,0(a5)
    1afc:	a6070663          	beqz	a4,d68 <run+0xa88>
#     while (*UART_OUT)
    1b00:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b04:	fe069ee3          	bnez	a3,1b00 <run+0x1820>
#     *UART_OUT = *str++;
    1b08:	00178793          	add	a5,a5,1
    1b0c:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b10:	fe9ff06f          	j	1af8 <run+0x1818>
    1b14:	06012783          	lw	a5,96(sp)
#   while (*str) {
    1b18:	0007c703          	lbu	a4,0(a5)
    1b1c:	a4070663          	beqz	a4,d68 <run+0xa88>
#     while (*UART_OUT)
    1b20:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b24:	fe069ee3          	bnez	a3,1b20 <run+0x1840>
#     *UART_OUT = *str++;
    1b28:	00178793          	add	a5,a5,1
    1b2c:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b30:	fe9ff06f          	j	1b18 <run+0x1838>
    1b34:	07412783          	lw	a5,116(sp)
#   while (*str) {
    1b38:	0007c703          	lbu	a4,0(a5)
    1b3c:	a2070663          	beqz	a4,d68 <run+0xa88>
#     while (*UART_OUT)
    1b40:	ffe04683          	lbu	a3,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b44:	fe069ee3          	bnez	a3,1b40 <run+0x1860>
#     *UART_OUT = *str++;
    1b48:	00178793          	add	a5,a5,1
    1b4c:	fee00f23          	sb	a4,-2(zero) # fffffffe <_ZL21input_escape_sequence+0xffffd91e>
    1b50:	fe9ff06f          	j	1b38 <run+0x1858>

00001b54 <memset>:
#   while (n--) {
    1b54:	fff60813          	add	a6,a2,-1
    1b58:	0c060e63          	beqz	a2,1c34 <memset+0xe0>
    1b5c:	40a006b3          	neg	a3,a0
    1b60:	00500893          	li	a7,5
#     *ptr++ = char(ch);
    1b64:	0ff5f713          	zext.b	a4,a1
    1b68:	0036f793          	and	a5,a3,3
    1b6c:	0d08f663          	bgeu	a7,a6,1c38 <memset+0xe4>
#   char *ptr = reinterpret_cast<char *>(str);
    1b70:	00050893          	mv	a7,a0
    1b74:	02078e63          	beqz	a5,1bb0 <memset+0x5c>
#     *ptr++ = char(ch);
    1b78:	00e50023          	sb	a4,0(a0)
#   while (n--) {
    1b7c:	0026f693          	and	a3,a3,2
#     *ptr++ = char(ch);
    1b80:	00150893          	add	a7,a0,1
#   while (n--) {
    1b84:	ffe60813          	add	a6,a2,-2
    1b88:	02068463          	beqz	a3,1bb0 <memset+0x5c>
#     *ptr++ = char(ch);
    1b8c:	fff50693          	add	a3,a0,-1
    1b90:	00e500a3          	sb	a4,1(a0)
#   while (n--) {
    1b94:	0036f693          	and	a3,a3,3
#     *ptr++ = char(ch);
    1b98:	00250893          	add	a7,a0,2
#   while (n--) {
    1b9c:	ffd60813          	add	a6,a2,-3
    1ba0:	00069863          	bnez	a3,1bb0 <memset+0x5c>
#     *ptr++ = char(ch);
    1ba4:	00350893          	add	a7,a0,3
    1ba8:	00e50123          	sb	a4,2(a0)
#   while (n--) {
    1bac:	ffc60813          	add	a6,a2,-4
    1bb0:	00871693          	sll	a3,a4,0x8
    1bb4:	40f60633          	sub	a2,a2,a5
    1bb8:	01071593          	sll	a1,a4,0x10
    1bbc:	00d766b3          	or	a3,a4,a3
    1bc0:	00b6e6b3          	or	a3,a3,a1
    1bc4:	01871313          	sll	t1,a4,0x18
    1bc8:	00f507b3          	add	a5,a0,a5
    1bcc:	ffc67593          	and	a1,a2,-4
    1bd0:	0066e6b3          	or	a3,a3,t1
    1bd4:	00f585b3          	add	a1,a1,a5
#     *ptr++ = char(ch);
    1bd8:	00d7a023          	sw	a3,0(a5)
#   while (n--) {
    1bdc:	00478793          	add	a5,a5,4
    1be0:	feb79ce3          	bne	a5,a1,1bd8 <memset+0x84>
    1be4:	00367793          	and	a5,a2,3
    1be8:	04078663          	beqz	a5,1c34 <memset+0xe0>
    1bec:	ffc67613          	and	a2,a2,-4
    1bf0:	00c887b3          	add	a5,a7,a2
    1bf4:	40c80833          	sub	a6,a6,a2
#     *ptr++ = char(ch);
    1bf8:	00e78023          	sb	a4,0(a5)
#   while (n--) {
    1bfc:	02080c63          	beqz	a6,1c34 <memset+0xe0>
#     *ptr++ = char(ch);
    1c00:	00e780a3          	sb	a4,1(a5)
#   while (n--) {
    1c04:	00100693          	li	a3,1
    1c08:	02d80663          	beq	a6,a3,1c34 <memset+0xe0>
#     *ptr++ = char(ch);
    1c0c:	00e78123          	sb	a4,2(a5)
#   while (n--) {
    1c10:	00200693          	li	a3,2
    1c14:	02d80063          	beq	a6,a3,1c34 <memset+0xe0>
#     *ptr++ = char(ch);
    1c18:	00e781a3          	sb	a4,3(a5)
#   while (n--) {
    1c1c:	00300693          	li	a3,3
    1c20:	00d80a63          	beq	a6,a3,1c34 <memset+0xe0>
#     *ptr++ = char(ch);
    1c24:	00e78223          	sb	a4,4(a5)
#   while (n--) {
    1c28:	00400693          	li	a3,4
    1c2c:	00d80463          	beq	a6,a3,1c34 <memset+0xe0>
#     *ptr++ = char(ch);
    1c30:	00e782a3          	sb	a4,5(a5)
# }
    1c34:	00008067          	ret
#   char *ptr = reinterpret_cast<char *>(str);
    1c38:	00050793          	mv	a5,a0
    1c3c:	fbdff06f          	j	1bf8 <memset+0xa4>
