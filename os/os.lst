
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# # generated - do not edit (see `configuration.py`)
# .global _start
# _start:
#     li sp, 0x200000
       0:	00200137          	lui	sp,0x200
#     jal ra, run
       4:	040000ef          	jal	44 <run>

00000008 <_ZL20startup_init_staticsv>:
# using size_t = uint32_t;
# 
# static auto startup_init_bss() -> void;
# // freestanding does not automatically initialize bss section
# 
# static auto startup_init_statics() -> void {}
       8:	ff010113          	add	sp,sp,-16 # 1ffff0 <__bss_end+0x1fc8dc>
       c:	00812623          	sw	s0,12(sp)
      10:	01010413          	add	s0,sp,16
      14:	00000013          	nop
      18:	00c12403          	lw	s0,12(sp)
      1c:	01010113          	add	sp,sp,16
      20:	00008067          	ret

00000024 <_ZL4exiti>:
# // freestanding does not automatically initiate statics
# 
# static auto exit(int code) -> void {}
      24:	fe010113          	add	sp,sp,-32
      28:	00812e23          	sw	s0,28(sp)
      2c:	02010413          	add	s0,sp,32
      30:	fea42623          	sw	a0,-20(s0)
      34:	00000013          	nop
      38:	01c12403          	lw	s0,28(sp)
      3c:	02010113          	add	sp,sp,32
      40:	00008067          	ret

00000044 <run>:
# static auto handle_input(entity_id_t eid, command_buffer &buf) -> void;
# static auto action_mem_test() -> void;
# static auto strings_equal(char const *s1, char const *s2) -> bool;
# static auto string_copy(char const *src, size_t src_len, char *dst) -> void;
# 
# extern "C" auto run() -> void {
      44:	f9010113          	add	sp,sp,-112
      48:	06112623          	sw	ra,108(sp)
      4c:	06812423          	sw	s0,104(sp)
      50:	07010413          	add	s0,sp,112
#   startup_init_bss();
      54:	00002097          	auipc	ra,0x2
      58:	9dc080e7          	jalr	-1572(ra) # 1a30 <_ZL16startup_init_bssv>
#   // initiates bss section to zeros
# 
#   startup_init_statics();
      5c:	00000097          	auipc	ra,0x0
      60:	fac080e7          	jalr	-84(ra) # 8 <_ZL20startup_init_staticsv>
#   // initiate statics in freestanding build
# 
#   led_set(0);
      64:	00000513          	li	a0,0
      68:	00001097          	auipc	ra,0x1
      6c:	74c080e7          	jalr	1868(ra) # 17b4 <_ZL7led_seth>
#   // turn all leds on
# 
#   entity_id_t active_entity = 1;
      70:	00100793          	li	a5,1
      74:	fef407a3          	sb	a5,-17(s0)
#   command_buffer inbuf{};
      78:	f9440793          	add	a5,s0,-108
      7c:	05200713          	li	a4,82
      80:	00070613          	mv	a2,a4
      84:	00000593          	li	a1,0
      88:	00078513          	mv	a0,a5
      8c:	00002097          	auipc	ra,0x2
      90:	93c080e7          	jalr	-1732(ra) # 19c8 <memset>
# 
#   uart_send_str(ascii_art);
      94:	000037b7          	lui	a5,0x3
      98:	7087a783          	lw	a5,1800(a5) # 3708 <_ZL9ascii_art>
      9c:	00078513          	mv	a0,a5
      a0:	00001097          	auipc	ra,0x1
      a4:	744080e7          	jalr	1860(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str(hello);
      a8:	000037b7          	lui	a5,0x3
      ac:	7047a783          	lw	a5,1796(a5) # 3704 <_ZL5hello>
      b0:	00078513          	mv	a0,a5
      b4:	00001097          	auipc	ra,0x1
      b8:	730080e7          	jalr	1840(ra) # 17e4 <_ZL13uart_send_strPKc>
# 
#   while (true) {
#     entity const &ent = entities[active_entity];
      bc:	fef44703          	lbu	a4,-17(s0)
      c0:	00070793          	mv	a5,a4
      c4:	00179793          	sll	a5,a5,0x1
      c8:	00e787b3          	add	a5,a5,a4
      cc:	00279793          	sll	a5,a5,0x2
      d0:	40e787b3          	sub	a5,a5,a4
      d4:	00279793          	sll	a5,a5,0x2
      d8:	00003737          	lui	a4,0x3
      dc:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
      e0:	00e787b3          	add	a5,a5,a4
      e4:	fef42423          	sw	a5,-24(s0)
#     print_location(ent.location, active_entity);
      e8:	fe842783          	lw	a5,-24(s0)
      ec:	0047c783          	lbu	a5,4(a5)
      f0:	fef44703          	lbu	a4,-17(s0)
      f4:	00070593          	mv	a1,a4
      f8:	00078513          	mv	a0,a5
      fc:	00000097          	auipc	ra,0x0
     100:	43c080e7          	jalr	1084(ra) # 538 <_ZL14print_locationhh>
#     uart_send_str(ent.name);
     104:	fe842783          	lw	a5,-24(s0)
     108:	0007a783          	lw	a5,0(a5)
     10c:	00078513          	mv	a0,a5
     110:	00001097          	auipc	ra,0x1
     114:	6d4080e7          	jalr	1748(ra) # 17e4 <_ZL13uart_send_strPKc>
#     uart_send_str(" > ");
     118:	000037b7          	lui	a5,0x3
     11c:	82878513          	add	a0,a5,-2008 # 2828 <_ZN4listIhLi8EE6removeEh+0x4c0>
     120:	00001097          	auipc	ra,0x1
     124:	6c4080e7          	jalr	1732(ra) # 17e4 <_ZL13uart_send_strPKc>
#     input(inbuf);
     128:	f9440793          	add	a5,s0,-108
     12c:	00078513          	mv	a0,a5
     130:	00001097          	auipc	ra,0x1
     134:	130080e7          	jalr	304(ra) # 1260 <_ZL5inputR14command_buffer>
#     uart_send_str("\r\n");
     138:	000037b7          	lui	a5,0x3
     13c:	82c78513          	add	a0,a5,-2004 # 282c <_ZN4listIhLi8EE6removeEh+0x4c4>
     140:	00001097          	auipc	ra,0x1
     144:	6a4080e7          	jalr	1700(ra) # 17e4 <_ZL13uart_send_strPKc>
#     handle_input(active_entity, inbuf);
     148:	f9440713          	add	a4,s0,-108
     14c:	fef44783          	lbu	a5,-17(s0)
     150:	00070593          	mv	a1,a4
     154:	00078513          	mv	a0,a5
     158:	00000097          	auipc	ra,0x0
     15c:	02c080e7          	jalr	44(ra) # 184 <_ZL12handle_inputhR14command_buffer>
#     if (active_entity == 1)
     160:	fef44703          	lbu	a4,-17(s0)
     164:	00100793          	li	a5,1
     168:	00f71863          	bne	a4,a5,178 <run+0x134>
#       active_entity = 2;
     16c:	00200793          	li	a5,2
     170:	fef407a3          	sb	a5,-17(s0)
     174:	f49ff06f          	j	bc <run+0x78>
#     else
#       active_entity = 1;
     178:	00100793          	li	a5,1
     17c:	fef407a3          	sb	a5,-17(s0)
#   }
     180:	f3dff06f          	j	bc <run+0x78>

00000184 <_ZL12handle_inputhR14command_buffer>:
# }
# 
# static auto handle_input(entity_id_t eid, command_buffer &buf) -> void {
     184:	fb010113          	add	sp,sp,-80
     188:	04112623          	sw	ra,76(sp)
     18c:	04812423          	sw	s0,72(sp)
     190:	05010413          	add	s0,sp,80
     194:	00050793          	mv	a5,a0
     198:	fab42c23          	sw	a1,-72(s0)
     19c:	faf40fa3          	sb	a5,-65(s0)
#   char const *words[8];
#   char *ptr = buf.command_line();
     1a0:	fb842503          	lw	a0,-72(s0)
     1a4:	00002097          	auipc	ra,0x2
     1a8:	ddc080e7          	jalr	-548(ra) # 1f80 <_ZN14command_buffer12command_lineEv>
     1ac:	fea42623          	sw	a0,-20(s0)
#   size_t nwords = 0;
     1b0:	fe042423          	sw	zero,-24(s0)
#   while (true) {
#     words[nwords++] = ptr;
     1b4:	fec42703          	lw	a4,-20(s0)
     1b8:	fe842783          	lw	a5,-24(s0)
     1bc:	00178693          	add	a3,a5,1
     1c0:	fed42423          	sw	a3,-24(s0)
     1c4:	00279793          	sll	a5,a5,0x2
     1c8:	ff078793          	add	a5,a5,-16
     1cc:	008787b3          	add	a5,a5,s0
     1d0:	fce7ac23          	sw	a4,-40(a5)
#     while (*ptr && *ptr != ' ') {
     1d4:	0100006f          	j	1e4 <_ZL12handle_inputhR14command_buffer+0x60>
#       ptr++;
     1d8:	fec42783          	lw	a5,-20(s0)
     1dc:	00178793          	add	a5,a5,1
     1e0:	fef42623          	sw	a5,-20(s0)
#     while (*ptr && *ptr != ' ') {
     1e4:	fec42783          	lw	a5,-20(s0)
     1e8:	0007c783          	lbu	a5,0(a5)
     1ec:	00078a63          	beqz	a5,200 <_ZL12handle_inputhR14command_buffer+0x7c>
     1f0:	fec42783          	lw	a5,-20(s0)
     1f4:	0007c703          	lbu	a4,0(a5)
     1f8:	02000793          	li	a5,32
     1fc:	fcf71ee3          	bne	a4,a5,1d8 <_ZL12handle_inputhR14command_buffer+0x54>
#     }
#     if (!*ptr)
     200:	fec42783          	lw	a5,-20(s0)
     204:	0007c783          	lbu	a5,0(a5)
     208:	02078c63          	beqz	a5,240 <_ZL12handle_inputhR14command_buffer+0xbc>
#       break;
#     *ptr = '\0';
     20c:	fec42783          	lw	a5,-20(s0)
     210:	00078023          	sb	zero,0(a5)
#     ptr++;
     214:	fec42783          	lw	a5,-20(s0)
     218:	00178793          	add	a5,a5,1
     21c:	fef42623          	sw	a5,-20(s0)
#     if (nwords == sizeof(words) / sizeof(char const *)) {
     220:	fe842703          	lw	a4,-24(s0)
     224:	00800793          	li	a5,8
     228:	f8f716e3          	bne	a4,a5,1b4 <_ZL12handle_inputhR14command_buffer+0x30>
#       uart_send_str("too many words, some ignored\r\n\r\n");
     22c:	000037b7          	lui	a5,0x3
     230:	83078513          	add	a0,a5,-2000 # 2830 <_ZN4listIhLi8EE6removeEh+0x4c8>
     234:	00001097          	auipc	ra,0x1
     238:	5b0080e7          	jalr	1456(ra) # 17e4 <_ZL13uart_send_strPKc>
#       break;
     23c:	0080006f          	j	244 <_ZL12handle_inputhR14command_buffer+0xc0>
#       break;
     240:	00000013          	nop
#   }
#   // for (size_t i = 0; i < nwords; i++) {
#   //   uart_send_str(words[i]);
#   //   uart_send_str("\r\n");
#   // }
#   if (strings_equal(words[0], "help")) {
     244:	fc842703          	lw	a4,-56(s0)
     248:	000037b7          	lui	a5,0x3
     24c:	85478593          	add	a1,a5,-1964 # 2854 <_ZN4listIhLi8EE6removeEh+0x4ec>
     250:	00070513          	mv	a0,a4
     254:	00001097          	auipc	ra,0x1
     258:	35c080e7          	jalr	860(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     25c:	00050793          	mv	a5,a0
     260:	00078863          	beqz	a5,270 <_ZL12handle_inputhR14command_buffer+0xec>
#     print_help();
     264:	00001097          	auipc	ra,0x1
     268:	d84080e7          	jalr	-636(ra) # fe8 <_ZL10print_helpv>
     26c:	2bc0006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "i")) {
     270:	fc842703          	lw	a4,-56(s0)
     274:	000037b7          	lui	a5,0x3
     278:	85c78593          	add	a1,a5,-1956 # 285c <_ZN4listIhLi8EE6removeEh+0x4f4>
     27c:	00070513          	mv	a0,a4
     280:	00001097          	auipc	ra,0x1
     284:	330080e7          	jalr	816(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     288:	00050793          	mv	a5,a0
     28c:	02078463          	beqz	a5,2b4 <_ZL12handle_inputhR14command_buffer+0x130>
#     action_inventory(eid);
     290:	fbf44783          	lbu	a5,-65(s0)
     294:	00078513          	mv	a0,a5
     298:	00000097          	auipc	ra,0x0
     29c:	5b8080e7          	jalr	1464(ra) # 850 <_ZL16action_inventoryh>
#     uart_send_str("\r\n");
     2a0:	000037b7          	lui	a5,0x3
     2a4:	82c78513          	add	a0,a5,-2004 # 282c <_ZN4listIhLi8EE6removeEh+0x4c4>
     2a8:	00001097          	auipc	ra,0x1
     2ac:	53c080e7          	jalr	1340(ra) # 17e4 <_ZL13uart_send_strPKc>
     2b0:	2780006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "t")) {
     2b4:	fc842703          	lw	a4,-56(s0)
     2b8:	000037b7          	lui	a5,0x3
     2bc:	86078593          	add	a1,a5,-1952 # 2860 <_ZN4listIhLi8EE6removeEh+0x4f8>
     2c0:	00070513          	mv	a0,a4
     2c4:	00001097          	auipc	ra,0x1
     2c8:	2ec080e7          	jalr	748(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     2cc:	00050793          	mv	a5,a0
     2d0:	04078063          	beqz	a5,310 <_ZL12handle_inputhR14command_buffer+0x18c>
#     if (nwords < 2) {
     2d4:	fe842703          	lw	a4,-24(s0)
     2d8:	00100793          	li	a5,1
     2dc:	00e7ec63          	bltu	a5,a4,2f4 <_ZL12handle_inputhR14command_buffer+0x170>
#       uart_send_str("take what\r\n\r\n");
     2e0:	000037b7          	lui	a5,0x3
     2e4:	86478513          	add	a0,a5,-1948 # 2864 <_ZN4listIhLi8EE6removeEh+0x4fc>
     2e8:	00001097          	auipc	ra,0x1
     2ec:	4fc080e7          	jalr	1276(ra) # 17e4 <_ZL13uart_send_strPKc>
#       return;
     2f0:	2380006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#     }
#     action_take(eid, words[1]);
     2f4:	fcc42703          	lw	a4,-52(s0)
     2f8:	fbf44783          	lbu	a5,-65(s0)
     2fc:	00070593          	mv	a1,a4
     300:	00078513          	mv	a0,a5
     304:	00000097          	auipc	ra,0x0
     308:	678080e7          	jalr	1656(ra) # 97c <_ZL11action_takehPKc>
     30c:	21c0006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "d")) {
     310:	fc842703          	lw	a4,-56(s0)
     314:	000037b7          	lui	a5,0x3
     318:	87478593          	add	a1,a5,-1932 # 2874 <_ZN4listIhLi8EE6removeEh+0x50c>
     31c:	00070513          	mv	a0,a4
     320:	00001097          	auipc	ra,0x1
     324:	290080e7          	jalr	656(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     328:	00050793          	mv	a5,a0
     32c:	04078063          	beqz	a5,36c <_ZL12handle_inputhR14command_buffer+0x1e8>
#     if (nwords < 2) {
     330:	fe842703          	lw	a4,-24(s0)
     334:	00100793          	li	a5,1
     338:	00e7ec63          	bltu	a5,a4,350 <_ZL12handle_inputhR14command_buffer+0x1cc>
#       uart_send_str("drop what\r\n\r\n");
     33c:	000037b7          	lui	a5,0x3
     340:	87878513          	add	a0,a5,-1928 # 2878 <_ZN4listIhLi8EE6removeEh+0x510>
     344:	00001097          	auipc	ra,0x1
     348:	4a0080e7          	jalr	1184(ra) # 17e4 <_ZL13uart_send_strPKc>
#       return;
     34c:	1dc0006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#     }
#     action_drop(eid, words[1]);
     350:	fcc42703          	lw	a4,-52(s0)
     354:	fbf44783          	lbu	a5,-65(s0)
     358:	00070593          	mv	a1,a4
     35c:	00078513          	mv	a0,a5
     360:	00000097          	auipc	ra,0x0
     364:	784080e7          	jalr	1924(ra) # ae4 <_ZL11action_drophPKc>
     368:	1c00006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "n")) {
     36c:	fc842703          	lw	a4,-56(s0)
     370:	000037b7          	lui	a5,0x3
     374:	88878593          	add	a1,a5,-1912 # 2888 <_ZN4listIhLi8EE6removeEh+0x520>
     378:	00070513          	mv	a0,a4
     37c:	00001097          	auipc	ra,0x1
     380:	234080e7          	jalr	564(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     384:	00050793          	mv	a5,a0
     388:	00078e63          	beqz	a5,3a4 <_ZL12handle_inputhR14command_buffer+0x220>
#     action_go(eid, 0);
     38c:	fbf44783          	lbu	a5,-65(s0)
     390:	00000593          	li	a1,0
     394:	00078513          	mv	a0,a5
     398:	00001097          	auipc	ra,0x1
     39c:	8c4080e7          	jalr	-1852(ra) # c5c <_ZL9action_gohh>
     3a0:	1880006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "e")) {
     3a4:	fc842703          	lw	a4,-56(s0)
     3a8:	000037b7          	lui	a5,0x3
     3ac:	88c78593          	add	a1,a5,-1908 # 288c <_ZN4listIhLi8EE6removeEh+0x524>
     3b0:	00070513          	mv	a0,a4
     3b4:	00001097          	auipc	ra,0x1
     3b8:	1fc080e7          	jalr	508(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     3bc:	00050793          	mv	a5,a0
     3c0:	00078e63          	beqz	a5,3dc <_ZL12handle_inputhR14command_buffer+0x258>
#     action_go(eid, 1);
     3c4:	fbf44783          	lbu	a5,-65(s0)
     3c8:	00100593          	li	a1,1
     3cc:	00078513          	mv	a0,a5
     3d0:	00001097          	auipc	ra,0x1
     3d4:	88c080e7          	jalr	-1908(ra) # c5c <_ZL9action_gohh>
     3d8:	1500006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "s")) {
     3dc:	fc842703          	lw	a4,-56(s0)
     3e0:	000037b7          	lui	a5,0x3
     3e4:	89078593          	add	a1,a5,-1904 # 2890 <_ZN4listIhLi8EE6removeEh+0x528>
     3e8:	00070513          	mv	a0,a4
     3ec:	00001097          	auipc	ra,0x1
     3f0:	1c4080e7          	jalr	452(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     3f4:	00050793          	mv	a5,a0
     3f8:	00078e63          	beqz	a5,414 <_ZL12handle_inputhR14command_buffer+0x290>
#     action_go(eid, 2);
     3fc:	fbf44783          	lbu	a5,-65(s0)
     400:	00200593          	li	a1,2
     404:	00078513          	mv	a0,a5
     408:	00001097          	auipc	ra,0x1
     40c:	854080e7          	jalr	-1964(ra) # c5c <_ZL9action_gohh>
     410:	1180006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "w")) {
     414:	fc842703          	lw	a4,-56(s0)
     418:	000037b7          	lui	a5,0x3
     41c:	89478593          	add	a1,a5,-1900 # 2894 <_ZN4listIhLi8EE6removeEh+0x52c>
     420:	00070513          	mv	a0,a4
     424:	00001097          	auipc	ra,0x1
     428:	18c080e7          	jalr	396(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     42c:	00050793          	mv	a5,a0
     430:	00078e63          	beqz	a5,44c <_ZL12handle_inputhR14command_buffer+0x2c8>
#     action_go(eid, 3);
     434:	fbf44783          	lbu	a5,-65(s0)
     438:	00300593          	li	a1,3
     43c:	00078513          	mv	a0,a5
     440:	00001097          	auipc	ra,0x1
     444:	81c080e7          	jalr	-2020(ra) # c5c <_ZL9action_gohh>
     448:	0e00006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "g")) {
     44c:	fc842703          	lw	a4,-56(s0)
     450:	000037b7          	lui	a5,0x3
     454:	89878593          	add	a1,a5,-1896 # 2898 <_ZN4listIhLi8EE6removeEh+0x530>
     458:	00070513          	mv	a0,a4
     45c:	00001097          	auipc	ra,0x1
     460:	154080e7          	jalr	340(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     464:	00050793          	mv	a5,a0
     468:	06078463          	beqz	a5,4d0 <_ZL12handle_inputhR14command_buffer+0x34c>
#     if (nwords < 2) {
     46c:	fe842703          	lw	a4,-24(s0)
     470:	00100793          	li	a5,1
     474:	00e7ec63          	bltu	a5,a4,48c <_ZL12handle_inputhR14command_buffer+0x308>
#       uart_send_str("give what\r\n\r\n");
     478:	000037b7          	lui	a5,0x3
     47c:	89c78513          	add	a0,a5,-1892 # 289c <_ZN4listIhLi8EE6removeEh+0x534>
     480:	00001097          	auipc	ra,0x1
     484:	364080e7          	jalr	868(ra) # 17e4 <_ZL13uart_send_strPKc>
#       return;
     488:	0a00006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#     }
#     if (nwords < 3) {
     48c:	fe842703          	lw	a4,-24(s0)
     490:	00200793          	li	a5,2
     494:	00e7ec63          	bltu	a5,a4,4ac <_ZL12handle_inputhR14command_buffer+0x328>
#       uart_send_str("give to whom\r\n\r\n");
     498:	000037b7          	lui	a5,0x3
     49c:	8ac78513          	add	a0,a5,-1876 # 28ac <_ZN4listIhLi8EE6removeEh+0x544>
     4a0:	00001097          	auipc	ra,0x1
     4a4:	344080e7          	jalr	836(ra) # 17e4 <_ZL13uart_send_strPKc>
#       return;
     4a8:	0800006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#     }
#     action_give(eid, words[1], words[2]);
     4ac:	fcc42703          	lw	a4,-52(s0)
     4b0:	fd042683          	lw	a3,-48(s0)
     4b4:	fbf44783          	lbu	a5,-65(s0)
     4b8:	00068613          	mv	a2,a3
     4bc:	00070593          	mv	a1,a4
     4c0:	00078513          	mv	a0,a5
     4c4:	00001097          	auipc	ra,0x1
     4c8:	8d0080e7          	jalr	-1840(ra) # d94 <_ZL11action_givehPKcS0_>
     4cc:	05c0006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "m")) {
     4d0:	fc842703          	lw	a4,-56(s0)
     4d4:	000037b7          	lui	a5,0x3
     4d8:	8c078593          	add	a1,a5,-1856 # 28c0 <_ZN4listIhLi8EE6removeEh+0x558>
     4dc:	00070513          	mv	a0,a4
     4e0:	00001097          	auipc	ra,0x1
     4e4:	0d0080e7          	jalr	208(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     4e8:	00050793          	mv	a5,a0
     4ec:	00078863          	beqz	a5,4fc <_ZL12handle_inputhR14command_buffer+0x378>
#     action_mem_test();
     4f0:	00001097          	auipc	ra,0x1
     4f4:	3e8080e7          	jalr	1000(ra) # 18d8 <_ZL15action_mem_testv>
     4f8:	0300006f          	j	528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#   } else if (strings_equal(words[0], "q")) {
     4fc:	fc842703          	lw	a4,-56(s0)
     500:	000037b7          	lui	a5,0x3
     504:	8c478593          	add	a1,a5,-1852 # 28c4 <_ZN4listIhLi8EE6removeEh+0x55c>
     508:	00070513          	mv	a0,a4
     50c:	00001097          	auipc	ra,0x1
     510:	0a4080e7          	jalr	164(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     514:	00050793          	mv	a5,a0
     518:	00078863          	beqz	a5,528 <_ZL12handle_inputhR14command_buffer+0x3a4>
#     exit(0);
     51c:	00000513          	li	a0,0
     520:	00000097          	auipc	ra,0x0
     524:	b04080e7          	jalr	-1276(ra) # 24 <_ZL4exiti>
#   }
# }
     528:	04c12083          	lw	ra,76(sp)
     52c:	04812403          	lw	s0,72(sp)
     530:	05010113          	add	sp,sp,80
     534:	00008067          	ret

00000538 <_ZL14print_locationhh>:
# 
# static auto print_location(location_id_t lid,
#                            entity_id_t eid_exclude_from_output) -> void {
     538:	fb010113          	add	sp,sp,-80
     53c:	04112623          	sw	ra,76(sp)
     540:	04812423          	sw	s0,72(sp)
     544:	05010413          	add	s0,sp,80
     548:	00050793          	mv	a5,a0
     54c:	00058713          	mv	a4,a1
     550:	faf40fa3          	sb	a5,-65(s0)
     554:	00070793          	mv	a5,a4
     558:	faf40f23          	sb	a5,-66(s0)
#   location &loc = locations[lid];
     55c:	fbf44703          	lbu	a4,-65(s0)
     560:	00070793          	mv	a5,a4
     564:	00279793          	sll	a5,a5,0x2
     568:	00e787b3          	add	a5,a5,a4
     56c:	00579793          	sll	a5,a5,0x5
     570:	00003737          	lui	a4,0x3
     574:	3cc70713          	add	a4,a4,972 # 33cc <_ZL9locations>
     578:	00e787b3          	add	a5,a5,a4
     57c:	fcf42e23          	sw	a5,-36(s0)
#   uart_send_str("u r in ");
     580:	000037b7          	lui	a5,0x3
     584:	8c878513          	add	a0,a5,-1848 # 28c8 <_ZN4listIhLi8EE6removeEh+0x560>
     588:	00001097          	auipc	ra,0x1
     58c:	25c080e7          	jalr	604(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str(loc.name);
     590:	fdc42783          	lw	a5,-36(s0)
     594:	0007a783          	lw	a5,0(a5)
     598:	00078513          	mv	a0,a5
     59c:	00001097          	auipc	ra,0x1
     5a0:	248080e7          	jalr	584(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str("\r\nu c: ");
     5a4:	000037b7          	lui	a5,0x3
     5a8:	8d078513          	add	a0,a5,-1840 # 28d0 <_ZN4listIhLi8EE6removeEh+0x568>
     5ac:	00001097          	auipc	ra,0x1
     5b0:	238080e7          	jalr	568(ra) # 17e4 <_ZL13uart_send_strPKc>
# 
#   // print objects at location
#   int counter = 0;
     5b4:	fe042623          	sw	zero,-20(s0)
#   list<object_id_t, LOCATION_MAX_OBJECTS> &lso = loc.objects;
     5b8:	fdc42783          	lw	a5,-36(s0)
     5bc:	00478793          	add	a5,a5,4
     5c0:	fcf42c23          	sw	a5,-40(s0)
#   for (size_t i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     5c4:	fe042423          	sw	zero,-24(s0)
     5c8:	07c0006f          	j	644 <_ZL14print_locationhh+0x10c>
#     object_id_t const oid = lso.at(i);
     5cc:	fe842583          	lw	a1,-24(s0)
     5d0:	fd842503          	lw	a0,-40(s0)
     5d4:	00002097          	auipc	ra,0x2
     5d8:	9f8080e7          	jalr	-1544(ra) # 1fcc <_ZN4listIhLi128EE2atEj>
     5dc:	00050793          	mv	a5,a0
     5e0:	fcf40ba3          	sb	a5,-41(s0)
#     if (!oid) {
     5e4:	fd744783          	lbu	a5,-41(s0)
     5e8:	06078663          	beqz	a5,654 <_ZL14print_locationhh+0x11c>
#       break;
#     }
#     if (counter++) {
     5ec:	fec42783          	lw	a5,-20(s0)
     5f0:	00178713          	add	a4,a5,1
     5f4:	fee42623          	sw	a4,-20(s0)
     5f8:	00f037b3          	snez	a5,a5
     5fc:	0ff7f793          	zext.b	a5,a5
     600:	00078a63          	beqz	a5,614 <_ZL14print_locationhh+0xdc>
#       uart_send_str(", ");
     604:	000037b7          	lui	a5,0x3
     608:	8d878513          	add	a0,a5,-1832 # 28d8 <_ZN4listIhLi8EE6removeEh+0x570>
     60c:	00001097          	auipc	ra,0x1
     610:	1d8080e7          	jalr	472(ra) # 17e4 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str(objects[oid].name);
     614:	fd744783          	lbu	a5,-41(s0)
     618:	00003737          	lui	a4,0x3
     61c:	33870713          	add	a4,a4,824 # 3338 <_ZL7objects>
     620:	00279793          	sll	a5,a5,0x2
     624:	00f707b3          	add	a5,a4,a5
     628:	0007a783          	lw	a5,0(a5)
     62c:	00078513          	mv	a0,a5
     630:	00001097          	auipc	ra,0x1
     634:	1b4080e7          	jalr	436(ra) # 17e4 <_ZL13uart_send_strPKc>
#   for (size_t i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     638:	fe842783          	lw	a5,-24(s0)
     63c:	00178793          	add	a5,a5,1
     640:	fef42423          	sw	a5,-24(s0)
     644:	fe842703          	lw	a4,-24(s0)
     648:	07f00793          	li	a5,127
     64c:	f8e7f0e3          	bgeu	a5,a4,5cc <_ZL14print_locationhh+0x94>
     650:	0080006f          	j	658 <_ZL14print_locationhh+0x120>
#       break;
     654:	00000013          	nop
#   }
#   if (!counter) {
     658:	fec42783          	lw	a5,-20(s0)
     65c:	00079a63          	bnez	a5,670 <_ZL14print_locationhh+0x138>
#     uart_send_str("nothing");
     660:	000037b7          	lui	a5,0x3
     664:	8dc78513          	add	a0,a5,-1828 # 28dc <_ZN4listIhLi8EE6removeEh+0x574>
     668:	00001097          	auipc	ra,0x1
     66c:	17c080e7          	jalr	380(ra) # 17e4 <_ZL13uart_send_strPKc>
#   }
#   uart_send_str("\r\n");
     670:	000037b7          	lui	a5,0x3
     674:	82c78513          	add	a0,a5,-2004 # 282c <_ZN4listIhLi8EE6removeEh+0x4c4>
     678:	00001097          	auipc	ra,0x1
     67c:	16c080e7          	jalr	364(ra) # 17e4 <_ZL13uart_send_strPKc>
# 
#   // print entities in location
#   counter = false;
     680:	fe042623          	sw	zero,-20(s0)
#   list<object_id_t, LOCATION_MAX_ENTITIES> &lse = loc.entities;
     684:	fdc42783          	lw	a5,-36(s0)
     688:	08878793          	add	a5,a5,136
     68c:	fcf42823          	sw	a5,-48(s0)
#   for (size_t i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     690:	fe042223          	sw	zero,-28(s0)
     694:	0a40006f          	j	738 <_ZL14print_locationhh+0x200>
#     entity_id_t const eid = lse.at(i);
     698:	fe442583          	lw	a1,-28(s0)
     69c:	fd042503          	lw	a0,-48(s0)
     6a0:	00002097          	auipc	ra,0x2
     6a4:	974080e7          	jalr	-1676(ra) # 2014 <_ZN4listIhLi8EE2atEj>
     6a8:	00050793          	mv	a5,a0
     6ac:	fcf407a3          	sb	a5,-49(s0)
#     if (!eid) {
     6b0:	fcf44783          	lbu	a5,-49(s0)
     6b4:	08078a63          	beqz	a5,748 <_ZL14print_locationhh+0x210>
#       break;
#     }
#     if (eid == eid_exclude_from_output) {
     6b8:	fcf44703          	lbu	a4,-49(s0)
     6bc:	fbe44783          	lbu	a5,-66(s0)
     6c0:	06f70463          	beq	a4,a5,728 <_ZL14print_locationhh+0x1f0>
#       continue;
#     }
#     if (counter++) {
     6c4:	fec42783          	lw	a5,-20(s0)
     6c8:	00178713          	add	a4,a5,1
     6cc:	fee42623          	sw	a4,-20(s0)
     6d0:	00f037b3          	snez	a5,a5
     6d4:	0ff7f793          	zext.b	a5,a5
     6d8:	00078a63          	beqz	a5,6ec <_ZL14print_locationhh+0x1b4>
#       uart_send_str(", ");
     6dc:	000037b7          	lui	a5,0x3
     6e0:	8d878513          	add	a0,a5,-1832 # 28d8 <_ZN4listIhLi8EE6removeEh+0x570>
     6e4:	00001097          	auipc	ra,0x1
     6e8:	100080e7          	jalr	256(ra) # 17e4 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str(entities[eid].name);
     6ec:	fcf44703          	lbu	a4,-49(s0)
     6f0:	000037b7          	lui	a5,0x3
     6f4:	34878693          	add	a3,a5,840 # 3348 <_ZL8entities>
     6f8:	00070793          	mv	a5,a4
     6fc:	00179793          	sll	a5,a5,0x1
     700:	00e787b3          	add	a5,a5,a4
     704:	00279793          	sll	a5,a5,0x2
     708:	40e787b3          	sub	a5,a5,a4
     70c:	00279793          	sll	a5,a5,0x2
     710:	00f687b3          	add	a5,a3,a5
     714:	0007a783          	lw	a5,0(a5)
     718:	00078513          	mv	a0,a5
     71c:	00001097          	auipc	ra,0x1
     720:	0c8080e7          	jalr	200(ra) # 17e4 <_ZL13uart_send_strPKc>
     724:	0080006f          	j	72c <_ZL14print_locationhh+0x1f4>
#       continue;
     728:	00000013          	nop
#   for (size_t i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     72c:	fe442783          	lw	a5,-28(s0)
     730:	00178793          	add	a5,a5,1
     734:	fef42223          	sw	a5,-28(s0)
     738:	fe442703          	lw	a4,-28(s0)
     73c:	00700793          	li	a5,7
     740:	f4e7fce3          	bgeu	a5,a4,698 <_ZL14print_locationhh+0x160>
     744:	0080006f          	j	74c <_ZL14print_locationhh+0x214>
#       break;
     748:	00000013          	nop
#   }
#   if (counter != 0) {
     74c:	fec42783          	lw	a5,-20(s0)
     750:	00078a63          	beqz	a5,764 <_ZL14print_locationhh+0x22c>
#     uart_send_str(" is here\r\n");
     754:	000037b7          	lui	a5,0x3
     758:	8e478513          	add	a0,a5,-1820 # 28e4 <_ZN4listIhLi8EE6removeEh+0x57c>
     75c:	00001097          	auipc	ra,0x1
     760:	088080e7          	jalr	136(ra) # 17e4 <_ZL13uart_send_strPKc>
#   }
# 
#   // print exits from location
#   counter = 0;
     764:	fe042623          	sw	zero,-20(s0)
#   uart_send_str("exits: ");
     768:	000037b7          	lui	a5,0x3
     76c:	8f078513          	add	a0,a5,-1808 # 28f0 <_ZN4listIhLi8EE6removeEh+0x588>
     770:	00001097          	auipc	ra,0x1
     774:	074080e7          	jalr	116(ra) # 17e4 <_ZL13uart_send_strPKc>
#   for (size_t i = 0; i < LOCATION_MAX_EXITS; i++) {
     778:	fe042023          	sw	zero,-32(s0)
     77c:	08c0006f          	j	808 <_ZL14print_locationhh+0x2d0>
#     if (!loc.exits.at(i)) {
     780:	fdc42783          	lw	a5,-36(s0)
     784:	09478793          	add	a5,a5,148
     788:	fe042583          	lw	a1,-32(s0)
     78c:	00078513          	mv	a0,a5
     790:	00002097          	auipc	ra,0x2
     794:	8cc080e7          	jalr	-1844(ra) # 205c <_ZN4listIhLi6EE2atEj>
     798:	00050793          	mv	a5,a0
     79c:	0017b793          	seqz	a5,a5
     7a0:	0ff7f793          	zext.b	a5,a5
     7a4:	04079a63          	bnez	a5,7f8 <_ZL14print_locationhh+0x2c0>
#       continue;
#     }
#     if (counter++) {
     7a8:	fec42783          	lw	a5,-20(s0)
     7ac:	00178713          	add	a4,a5,1
     7b0:	fee42623          	sw	a4,-20(s0)
     7b4:	00f037b3          	snez	a5,a5
     7b8:	0ff7f793          	zext.b	a5,a5
     7bc:	00078a63          	beqz	a5,7d0 <_ZL14print_locationhh+0x298>
#       uart_send_str(", ");
     7c0:	000037b7          	lui	a5,0x3
     7c4:	8d878513          	add	a0,a5,-1832 # 28d8 <_ZN4listIhLi8EE6removeEh+0x570>
     7c8:	00001097          	auipc	ra,0x1
     7cc:	01c080e7          	jalr	28(ra) # 17e4 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str(exit_names[i]);
     7d0:	000037b7          	lui	a5,0x3
     7d4:	6ec78713          	add	a4,a5,1772 # 36ec <_ZL10exit_names>
     7d8:	fe042783          	lw	a5,-32(s0)
     7dc:	00279793          	sll	a5,a5,0x2
     7e0:	00f707b3          	add	a5,a4,a5
     7e4:	0007a783          	lw	a5,0(a5)
     7e8:	00078513          	mv	a0,a5
     7ec:	00001097          	auipc	ra,0x1
     7f0:	ff8080e7          	jalr	-8(ra) # 17e4 <_ZL13uart_send_strPKc>
     7f4:	0080006f          	j	7fc <_ZL14print_locationhh+0x2c4>
#       continue;
     7f8:	00000013          	nop
#   for (size_t i = 0; i < LOCATION_MAX_EXITS; i++) {
     7fc:	fe042783          	lw	a5,-32(s0)
     800:	00178793          	add	a5,a5,1
     804:	fef42023          	sw	a5,-32(s0)
     808:	fe042703          	lw	a4,-32(s0)
     80c:	00500793          	li	a5,5
     810:	f6e7f8e3          	bgeu	a5,a4,780 <_ZL14print_locationhh+0x248>
#   }
#   if (counter == 0) {
     814:	fec42783          	lw	a5,-20(s0)
     818:	00079a63          	bnez	a5,82c <_ZL14print_locationhh+0x2f4>
#     uart_send_str("none");
     81c:	000037b7          	lui	a5,0x3
     820:	8f878513          	add	a0,a5,-1800 # 28f8 <_ZN4listIhLi8EE6removeEh+0x590>
     824:	00001097          	auipc	ra,0x1
     828:	fc0080e7          	jalr	-64(ra) # 17e4 <_ZL13uart_send_strPKc>
#   }
#   uart_send_str("\r\n");
     82c:	000037b7          	lui	a5,0x3
     830:	82c78513          	add	a0,a5,-2004 # 282c <_ZN4listIhLi8EE6removeEh+0x4c4>
     834:	00001097          	auipc	ra,0x1
     838:	fb0080e7          	jalr	-80(ra) # 17e4 <_ZL13uart_send_strPKc>
# }
     83c:	00000013          	nop
     840:	04c12083          	lw	ra,76(sp)
     844:	04812403          	lw	s0,72(sp)
     848:	05010113          	add	sp,sp,80
     84c:	00008067          	ret

00000850 <_ZL16action_inventoryh>:
# 
# static auto action_inventory(entity_id_t eid) -> void {
     850:	fd010113          	add	sp,sp,-48
     854:	02112623          	sw	ra,44(sp)
     858:	02812423          	sw	s0,40(sp)
     85c:	03010413          	add	s0,sp,48
     860:	00050793          	mv	a5,a0
     864:	fcf40fa3          	sb	a5,-33(s0)
#   uart_send_str("u have: ");
     868:	000037b7          	lui	a5,0x3
     86c:	90078513          	add	a0,a5,-1792 # 2900 <_ZN4listIhLi8EE6removeEh+0x598>
     870:	00001097          	auipc	ra,0x1
     874:	f74080e7          	jalr	-140(ra) # 17e4 <_ZL13uart_send_strPKc>
#   int counter = 0;
     878:	fe042623          	sw	zero,-20(s0)
#   list<object_id_t, ENTITY_MAX_OBJECTS> &ls = entities[eid].objects;
     87c:	fdf44703          	lbu	a4,-33(s0)
     880:	00070793          	mv	a5,a4
     884:	00179793          	sll	a5,a5,0x1
     888:	00e787b3          	add	a5,a5,a4
     88c:	00279793          	sll	a5,a5,0x2
     890:	40e787b3          	sub	a5,a5,a4
     894:	00279793          	sll	a5,a5,0x2
     898:	00003737          	lui	a4,0x3
     89c:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     8a0:	00e787b3          	add	a5,a5,a4
     8a4:	00878793          	add	a5,a5,8
     8a8:	fef42223          	sw	a5,-28(s0)
#   for (size_t i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     8ac:	fe042423          	sw	zero,-24(s0)
     8b0:	07c0006f          	j	92c <_ZL16action_inventoryh+0xdc>
#     object_id_t const oid = ls.at(i);
     8b4:	fe842583          	lw	a1,-24(s0)
     8b8:	fe442503          	lw	a0,-28(s0)
     8bc:	00001097          	auipc	ra,0x1
     8c0:	7e8080e7          	jalr	2024(ra) # 20a4 <_ZN4listIhLi32EE2atEj>
     8c4:	00050793          	mv	a5,a0
     8c8:	fef401a3          	sb	a5,-29(s0)
#     if (!oid) {
     8cc:	fe344783          	lbu	a5,-29(s0)
     8d0:	06078663          	beqz	a5,93c <_ZL16action_inventoryh+0xec>
#       break;
#     }
#     if (counter++) {
     8d4:	fec42783          	lw	a5,-20(s0)
     8d8:	00178713          	add	a4,a5,1
     8dc:	fee42623          	sw	a4,-20(s0)
     8e0:	00f037b3          	snez	a5,a5
     8e4:	0ff7f793          	zext.b	a5,a5
     8e8:	00078a63          	beqz	a5,8fc <_ZL16action_inventoryh+0xac>
#       uart_send_str(", ");
     8ec:	000037b7          	lui	a5,0x3
     8f0:	8d878513          	add	a0,a5,-1832 # 28d8 <_ZN4listIhLi8EE6removeEh+0x570>
     8f4:	00001097          	auipc	ra,0x1
     8f8:	ef0080e7          	jalr	-272(ra) # 17e4 <_ZL13uart_send_strPKc>
#     }
#     uart_send_str(objects[oid].name);
     8fc:	fe344783          	lbu	a5,-29(s0)
     900:	00003737          	lui	a4,0x3
     904:	33870713          	add	a4,a4,824 # 3338 <_ZL7objects>
     908:	00279793          	sll	a5,a5,0x2
     90c:	00f707b3          	add	a5,a4,a5
     910:	0007a783          	lw	a5,0(a5)
     914:	00078513          	mv	a0,a5
     918:	00001097          	auipc	ra,0x1
     91c:	ecc080e7          	jalr	-308(ra) # 17e4 <_ZL13uart_send_strPKc>
#   for (size_t i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     920:	fe842783          	lw	a5,-24(s0)
     924:	00178793          	add	a5,a5,1
     928:	fef42423          	sw	a5,-24(s0)
     92c:	fe842703          	lw	a4,-24(s0)
     930:	01f00793          	li	a5,31
     934:	f8e7f0e3          	bgeu	a5,a4,8b4 <_ZL16action_inventoryh+0x64>
     938:	0080006f          	j	940 <_ZL16action_inventoryh+0xf0>
#       break;
     93c:	00000013          	nop
#   }
#   if (counter == 0) {
     940:	fec42783          	lw	a5,-20(s0)
     944:	00079a63          	bnez	a5,958 <_ZL16action_inventoryh+0x108>
#     uart_send_str("nothing");
     948:	000037b7          	lui	a5,0x3
     94c:	8dc78513          	add	a0,a5,-1828 # 28dc <_ZN4listIhLi8EE6removeEh+0x574>
     950:	00001097          	auipc	ra,0x1
     954:	e94080e7          	jalr	-364(ra) # 17e4 <_ZL13uart_send_strPKc>
#   }
#   uart_send_str("\r\n");
     958:	000037b7          	lui	a5,0x3
     95c:	82c78513          	add	a0,a5,-2004 # 282c <_ZN4listIhLi8EE6removeEh+0x4c4>
     960:	00001097          	auipc	ra,0x1
     964:	e84080e7          	jalr	-380(ra) # 17e4 <_ZL13uart_send_strPKc>
# }
     968:	00000013          	nop
     96c:	02c12083          	lw	ra,44(sp)
     970:	02812403          	lw	s0,40(sp)
     974:	03010113          	add	sp,sp,48
     978:	00008067          	ret

0000097c <_ZL11action_takehPKc>:
# 
# static auto action_take(entity_id_t eid, name_t obj) -> void {
     97c:	fd010113          	add	sp,sp,-48
     980:	02112623          	sw	ra,44(sp)
     984:	02812423          	sw	s0,40(sp)
     988:	03010413          	add	s0,sp,48
     98c:	00050793          	mv	a5,a0
     990:	fcb42c23          	sw	a1,-40(s0)
     994:	fcf40fa3          	sb	a5,-33(s0)
#   entity &ent = entities[eid];
     998:	fdf44703          	lbu	a4,-33(s0)
     99c:	00070793          	mv	a5,a4
     9a0:	00179793          	sll	a5,a5,0x1
     9a4:	00e787b3          	add	a5,a5,a4
     9a8:	00279793          	sll	a5,a5,0x2
     9ac:	40e787b3          	sub	a5,a5,a4
     9b0:	00279793          	sll	a5,a5,0x2
     9b4:	00003737          	lui	a4,0x3
     9b8:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     9bc:	00e787b3          	add	a5,a5,a4
     9c0:	fef42423          	sw	a5,-24(s0)
#   list<object_id_t, LOCATION_MAX_OBJECTS> &lso =
#       locations[ent.location].objects;
     9c4:	fe842783          	lw	a5,-24(s0)
     9c8:	0047c783          	lbu	a5,4(a5)
     9cc:	00078713          	mv	a4,a5
#   list<object_id_t, LOCATION_MAX_OBJECTS> &lso =
     9d0:	00070793          	mv	a5,a4
     9d4:	00279793          	sll	a5,a5,0x2
     9d8:	00e787b3          	add	a5,a5,a4
     9dc:	00579793          	sll	a5,a5,0x5
     9e0:	00003737          	lui	a4,0x3
     9e4:	3cc70713          	add	a4,a4,972 # 33cc <_ZL9locations>
     9e8:	00e787b3          	add	a5,a5,a4
     9ec:	00478793          	add	a5,a5,4
     9f0:	fef42223          	sw	a5,-28(s0)
#   for (size_t i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     9f4:	fe042623          	sw	zero,-20(s0)
     9f8:	0a40006f          	j	a9c <_ZL11action_takehPKc+0x120>
#     object_id_t const oid = lso.at(i);
     9fc:	fec42583          	lw	a1,-20(s0)
     a00:	fe442503          	lw	a0,-28(s0)
     a04:	00001097          	auipc	ra,0x1
     a08:	5c8080e7          	jalr	1480(ra) # 1fcc <_ZN4listIhLi128EE2atEj>
     a0c:	00050793          	mv	a5,a0
     a10:	fef401a3          	sb	a5,-29(s0)
#     if (!oid) {
     a14:	fe344783          	lbu	a5,-29(s0)
     a18:	08078a63          	beqz	a5,aac <_ZL11action_takehPKc+0x130>
#       break;
#     }
#     if (!strings_equal(objects[oid].name, obj)) {
     a1c:	fe344783          	lbu	a5,-29(s0)
     a20:	00003737          	lui	a4,0x3
     a24:	33870713          	add	a4,a4,824 # 3338 <_ZL7objects>
     a28:	00279793          	sll	a5,a5,0x2
     a2c:	00f707b3          	add	a5,a4,a5
     a30:	0007a783          	lw	a5,0(a5)
     a34:	fd842583          	lw	a1,-40(s0)
     a38:	00078513          	mv	a0,a5
     a3c:	00001097          	auipc	ra,0x1
     a40:	b74080e7          	jalr	-1164(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     a44:	00050793          	mv	a5,a0
     a48:	0017c793          	xor	a5,a5,1
     a4c:	0ff7f793          	zext.b	a5,a5
     a50:	02079e63          	bnez	a5,a8c <_ZL11action_takehPKc+0x110>
#       continue;
#     }
#     if (ent.objects.add(oid)) {
     a54:	fe842783          	lw	a5,-24(s0)
     a58:	00878793          	add	a5,a5,8
     a5c:	fe344703          	lbu	a4,-29(s0)
     a60:	00070593          	mv	a1,a4
     a64:	00078513          	mv	a0,a5
     a68:	00001097          	auipc	ra,0x1
     a6c:	684080e7          	jalr	1668(ra) # 20ec <_ZN4listIhLi32EE3addEh>
     a70:	00050793          	mv	a5,a0
     a74:	04078e63          	beqz	a5,ad0 <_ZL11action_takehPKc+0x154>
#       lso.remove_by_index(i);
     a78:	fec42583          	lw	a1,-20(s0)
     a7c:	fe442503          	lw	a0,-28(s0)
     a80:	00001097          	auipc	ra,0x1
     a84:	6f0080e7          	jalr	1776(ra) # 2170 <_ZN4listIhLi128EE15remove_by_indexEj>
#     }
#     return;
     a88:	0480006f          	j	ad0 <_ZL11action_takehPKc+0x154>
#       continue;
     a8c:	00000013          	nop
#   for (size_t i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     a90:	fec42783          	lw	a5,-20(s0)
     a94:	00178793          	add	a5,a5,1
     a98:	fef42623          	sw	a5,-20(s0)
     a9c:	fec42703          	lw	a4,-20(s0)
     aa0:	07f00793          	li	a5,127
     aa4:	f4e7fce3          	bgeu	a5,a4,9fc <_ZL11action_takehPKc+0x80>
     aa8:	0080006f          	j	ab0 <_ZL11action_takehPKc+0x134>
#       break;
     aac:	00000013          	nop
#   }
#   uart_send_str(obj);
     ab0:	fd842503          	lw	a0,-40(s0)
     ab4:	00001097          	auipc	ra,0x1
     ab8:	d30080e7          	jalr	-720(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str(" not here\r\n\r\n");
     abc:	000037b7          	lui	a5,0x3
     ac0:	90c78513          	add	a0,a5,-1780 # 290c <_ZN4listIhLi8EE6removeEh+0x5a4>
     ac4:	00001097          	auipc	ra,0x1
     ac8:	d20080e7          	jalr	-736(ra) # 17e4 <_ZL13uart_send_strPKc>
     acc:	0080006f          	j	ad4 <_ZL11action_takehPKc+0x158>
#     return;
     ad0:	00000013          	nop
# }
     ad4:	02c12083          	lw	ra,44(sp)
     ad8:	02812403          	lw	s0,40(sp)
     adc:	03010113          	add	sp,sp,48
     ae0:	00008067          	ret

00000ae4 <_ZL11action_drophPKc>:
# 
# static auto action_drop(entity_id_t eid, name_t obj) -> void {
     ae4:	fd010113          	add	sp,sp,-48
     ae8:	02112623          	sw	ra,44(sp)
     aec:	02812423          	sw	s0,40(sp)
     af0:	03010413          	add	s0,sp,48
     af4:	00050793          	mv	a5,a0
     af8:	fcb42c23          	sw	a1,-40(s0)
     afc:	fcf40fa3          	sb	a5,-33(s0)
#   entity &ent = entities[eid];
     b00:	fdf44703          	lbu	a4,-33(s0)
     b04:	00070793          	mv	a5,a4
     b08:	00179793          	sll	a5,a5,0x1
     b0c:	00e787b3          	add	a5,a5,a4
     b10:	00279793          	sll	a5,a5,0x2
     b14:	40e787b3          	sub	a5,a5,a4
     b18:	00279793          	sll	a5,a5,0x2
     b1c:	00003737          	lui	a4,0x3
     b20:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     b24:	00e787b3          	add	a5,a5,a4
     b28:	fef42423          	sw	a5,-24(s0)
#   list<object_id_t, ENTITY_MAX_OBJECTS> &lso = ent.objects;
     b2c:	fe842783          	lw	a5,-24(s0)
     b30:	00878793          	add	a5,a5,8
     b34:	fef42223          	sw	a5,-28(s0)
#   for (size_t i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     b38:	fe042623          	sw	zero,-20(s0)
     b3c:	0c80006f          	j	c04 <_ZL11action_drophPKc+0x120>
#     object_id_t const oid = lso.at(i);
     b40:	fec42583          	lw	a1,-20(s0)
     b44:	fe442503          	lw	a0,-28(s0)
     b48:	00001097          	auipc	ra,0x1
     b4c:	55c080e7          	jalr	1372(ra) # 20a4 <_ZN4listIhLi32EE2atEj>
     b50:	00050793          	mv	a5,a0
     b54:	fef401a3          	sb	a5,-29(s0)
#     if (!oid) {
     b58:	fe344783          	lbu	a5,-29(s0)
     b5c:	0a078c63          	beqz	a5,c14 <_ZL11action_drophPKc+0x130>
#       break;
#     }
#     if (!strings_equal(objects[oid].name, obj)) {
     b60:	fe344783          	lbu	a5,-29(s0)
     b64:	00003737          	lui	a4,0x3
     b68:	33870713          	add	a4,a4,824 # 3338 <_ZL7objects>
     b6c:	00279793          	sll	a5,a5,0x2
     b70:	00f707b3          	add	a5,a4,a5
     b74:	0007a783          	lw	a5,0(a5)
     b78:	fd842583          	lw	a1,-40(s0)
     b7c:	00078513          	mv	a0,a5
     b80:	00001097          	auipc	ra,0x1
     b84:	a30080e7          	jalr	-1488(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     b88:	00050793          	mv	a5,a0
     b8c:	0017c793          	xor	a5,a5,1
     b90:	0ff7f793          	zext.b	a5,a5
     b94:	06079063          	bnez	a5,bf4 <_ZL11action_drophPKc+0x110>
#       continue;
#     }
#     if (locations[ent.location].objects.add(oid)) {
     b98:	fe842783          	lw	a5,-24(s0)
     b9c:	0047c783          	lbu	a5,4(a5)
     ba0:	00078713          	mv	a4,a5
     ba4:	00070793          	mv	a5,a4
     ba8:	00279793          	sll	a5,a5,0x2
     bac:	00e787b3          	add	a5,a5,a4
     bb0:	00579793          	sll	a5,a5,0x5
     bb4:	00003737          	lui	a4,0x3
     bb8:	3cc70713          	add	a4,a4,972 # 33cc <_ZL9locations>
     bbc:	00e787b3          	add	a5,a5,a4
     bc0:	00478793          	add	a5,a5,4
     bc4:	fe344703          	lbu	a4,-29(s0)
     bc8:	00070593          	mv	a1,a4
     bcc:	00078513          	mv	a0,a5
     bd0:	00001097          	auipc	ra,0x1
     bd4:	618080e7          	jalr	1560(ra) # 21e8 <_ZN4listIhLi128EE3addEh>
     bd8:	00050793          	mv	a5,a0
     bdc:	06078663          	beqz	a5,c48 <_ZL11action_drophPKc+0x164>
#       lso.remove_by_index(i);
     be0:	fec42583          	lw	a1,-20(s0)
     be4:	fe442503          	lw	a0,-28(s0)
     be8:	00001097          	auipc	ra,0x1
     bec:	684080e7          	jalr	1668(ra) # 226c <_ZN4listIhLi32EE15remove_by_indexEj>
#     }
#     return;
     bf0:	0580006f          	j	c48 <_ZL11action_drophPKc+0x164>
#       continue;
     bf4:	00000013          	nop
#   for (size_t i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     bf8:	fec42783          	lw	a5,-20(s0)
     bfc:	00178793          	add	a5,a5,1
     c00:	fef42623          	sw	a5,-20(s0)
     c04:	fec42703          	lw	a4,-20(s0)
     c08:	01f00793          	li	a5,31
     c0c:	f2e7fae3          	bgeu	a5,a4,b40 <_ZL11action_drophPKc+0x5c>
     c10:	0080006f          	j	c18 <_ZL11action_drophPKc+0x134>
#       break;
     c14:	00000013          	nop
#   }
#   uart_send_str("u don't have ");
     c18:	000037b7          	lui	a5,0x3
     c1c:	91c78513          	add	a0,a5,-1764 # 291c <_ZN4listIhLi8EE6removeEh+0x5b4>
     c20:	00001097          	auipc	ra,0x1
     c24:	bc4080e7          	jalr	-1084(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str(obj);
     c28:	fd842503          	lw	a0,-40(s0)
     c2c:	00001097          	auipc	ra,0x1
     c30:	bb8080e7          	jalr	-1096(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str("\r\n\r\n");
     c34:	000037b7          	lui	a5,0x3
     c38:	92c78513          	add	a0,a5,-1748 # 292c <_ZN4listIhLi8EE6removeEh+0x5c4>
     c3c:	00001097          	auipc	ra,0x1
     c40:	ba8080e7          	jalr	-1112(ra) # 17e4 <_ZL13uart_send_strPKc>
     c44:	0080006f          	j	c4c <_ZL11action_drophPKc+0x168>
#     return;
     c48:	00000013          	nop
# }
     c4c:	02c12083          	lw	ra,44(sp)
     c50:	02812403          	lw	s0,40(sp)
     c54:	03010113          	add	sp,sp,48
     c58:	00008067          	ret

00000c5c <_ZL9action_gohh>:
# 
# static auto action_go(entity_id_t eid, direction_t dir) -> void {
     c5c:	fd010113          	add	sp,sp,-48
     c60:	02112623          	sw	ra,44(sp)
     c64:	02812423          	sw	s0,40(sp)
     c68:	03010413          	add	s0,sp,48
     c6c:	00050793          	mv	a5,a0
     c70:	00058713          	mv	a4,a1
     c74:	fcf40fa3          	sb	a5,-33(s0)
     c78:	00070793          	mv	a5,a4
     c7c:	fcf40f23          	sb	a5,-34(s0)
#   entity &ent = entities[eid];
     c80:	fdf44703          	lbu	a4,-33(s0)
     c84:	00070793          	mv	a5,a4
     c88:	00179793          	sll	a5,a5,0x1
     c8c:	00e787b3          	add	a5,a5,a4
     c90:	00279793          	sll	a5,a5,0x2
     c94:	40e787b3          	sub	a5,a5,a4
     c98:	00279793          	sll	a5,a5,0x2
     c9c:	00003737          	lui	a4,0x3
     ca0:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     ca4:	00e787b3          	add	a5,a5,a4
     ca8:	fef42623          	sw	a5,-20(s0)
#   location &loc = locations[ent.location];
     cac:	fec42783          	lw	a5,-20(s0)
     cb0:	0047c783          	lbu	a5,4(a5)
     cb4:	00078713          	mv	a4,a5
     cb8:	00070793          	mv	a5,a4
     cbc:	00279793          	sll	a5,a5,0x2
     cc0:	00e787b3          	add	a5,a5,a4
     cc4:	00579793          	sll	a5,a5,0x5
     cc8:	00003737          	lui	a4,0x3
     ccc:	3cc70713          	add	a4,a4,972 # 33cc <_ZL9locations>
     cd0:	00e787b3          	add	a5,a5,a4
     cd4:	fef42423          	sw	a5,-24(s0)
#   location_id_t const to = loc.exits.at(dir);
     cd8:	fe842783          	lw	a5,-24(s0)
     cdc:	09478793          	add	a5,a5,148
     ce0:	fde44703          	lbu	a4,-34(s0)
     ce4:	00070593          	mv	a1,a4
     ce8:	00078513          	mv	a0,a5
     cec:	00001097          	auipc	ra,0x1
     cf0:	370080e7          	jalr	880(ra) # 205c <_ZN4listIhLi6EE2atEj>
     cf4:	00050793          	mv	a5,a0
     cf8:	fef403a3          	sb	a5,-25(s0)
#   if (!to) {
     cfc:	fe744783          	lbu	a5,-25(s0)
     d00:	00079c63          	bnez	a5,d18 <_ZL9action_gohh+0xbc>
#     uart_send_str("cannot go there\r\n\r\n");
     d04:	000037b7          	lui	a5,0x3
     d08:	93478513          	add	a0,a5,-1740 # 2934 <_ZN4listIhLi8EE6removeEh+0x5cc>
     d0c:	00001097          	auipc	ra,0x1
     d10:	ad8080e7          	jalr	-1320(ra) # 17e4 <_ZL13uart_send_strPKc>
#     return;
     d14:	0700006f          	j	d84 <_ZL9action_gohh+0x128>
#   }
#   if (locations[to].entities.add(eid)) {
     d18:	fe744703          	lbu	a4,-25(s0)
     d1c:	00070793          	mv	a5,a4
     d20:	00279793          	sll	a5,a5,0x2
     d24:	00e787b3          	add	a5,a5,a4
     d28:	00579793          	sll	a5,a5,0x5
     d2c:	08078713          	add	a4,a5,128
     d30:	000037b7          	lui	a5,0x3
     d34:	3cc78793          	add	a5,a5,972 # 33cc <_ZL9locations>
     d38:	00f707b3          	add	a5,a4,a5
     d3c:	00878793          	add	a5,a5,8
     d40:	fdf44703          	lbu	a4,-33(s0)
     d44:	00070593          	mv	a1,a4
     d48:	00078513          	mv	a0,a5
     d4c:	00001097          	auipc	ra,0x1
     d50:	598080e7          	jalr	1432(ra) # 22e4 <_ZN4listIhLi8EE3addEh>
     d54:	00050793          	mv	a5,a0
     d58:	02078663          	beqz	a5,d84 <_ZL9action_gohh+0x128>
#     loc.entities.remove(eid);
     d5c:	fe842783          	lw	a5,-24(s0)
     d60:	08878793          	add	a5,a5,136
     d64:	fdf44703          	lbu	a4,-33(s0)
     d68:	00070593          	mv	a1,a4
     d6c:	00078513          	mv	a0,a5
     d70:	00001097          	auipc	ra,0x1
     d74:	5f8080e7          	jalr	1528(ra) # 2368 <_ZN4listIhLi8EE6removeEh>
#     ent.location = to;
     d78:	fec42783          	lw	a5,-20(s0)
     d7c:	fe744703          	lbu	a4,-25(s0)
     d80:	00e78223          	sb	a4,4(a5)
#   }
# }
     d84:	02c12083          	lw	ra,44(sp)
     d88:	02812403          	lw	s0,40(sp)
     d8c:	03010113          	add	sp,sp,48
     d90:	00008067          	ret

00000d94 <_ZL11action_givehPKcS0_>:
# 
# static auto action_give(entity_id_t eid, name_t obj, name_t to_ent) -> void {
     d94:	fc010113          	add	sp,sp,-64
     d98:	02112e23          	sw	ra,60(sp)
     d9c:	02812c23          	sw	s0,56(sp)
     da0:	04010413          	add	s0,sp,64
     da4:	00050793          	mv	a5,a0
     da8:	fcb42423          	sw	a1,-56(s0)
     dac:	fcc42223          	sw	a2,-60(s0)
     db0:	fcf407a3          	sb	a5,-49(s0)
#   entity &ent = entities[eid];
     db4:	fcf44703          	lbu	a4,-49(s0)
     db8:	00070793          	mv	a5,a4
     dbc:	00179793          	sll	a5,a5,0x1
     dc0:	00e787b3          	add	a5,a5,a4
     dc4:	00279793          	sll	a5,a5,0x2
     dc8:	40e787b3          	sub	a5,a5,a4
     dcc:	00279793          	sll	a5,a5,0x2
     dd0:	00003737          	lui	a4,0x3
     dd4:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     dd8:	00e787b3          	add	a5,a5,a4
     ddc:	fef42223          	sw	a5,-28(s0)
#   location &loc = locations[ent.location];
     de0:	fe442783          	lw	a5,-28(s0)
     de4:	0047c783          	lbu	a5,4(a5)
     de8:	00078713          	mv	a4,a5
     dec:	00070793          	mv	a5,a4
     df0:	00279793          	sll	a5,a5,0x2
     df4:	00e787b3          	add	a5,a5,a4
     df8:	00579793          	sll	a5,a5,0x5
     dfc:	00003737          	lui	a4,0x3
     e00:	3cc70713          	add	a4,a4,972 # 33cc <_ZL9locations>
     e04:	00e787b3          	add	a5,a5,a4
     e08:	fef42023          	sw	a5,-32(s0)
#   list<object_id_t, LOCATION_MAX_ENTITIES> &lse = loc.entities;
     e0c:	fe042783          	lw	a5,-32(s0)
     e10:	08878793          	add	a5,a5,136
     e14:	fcf42e23          	sw	a5,-36(s0)
#   for (size_t i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     e18:	fe042623          	sw	zero,-20(s0)
     e1c:	1840006f          	j	fa0 <_ZL11action_givehPKcS0_+0x20c>
#     if (!lse.at(i)) {
     e20:	fec42583          	lw	a1,-20(s0)
     e24:	fdc42503          	lw	a0,-36(s0)
     e28:	00001097          	auipc	ra,0x1
     e2c:	1ec080e7          	jalr	492(ra) # 2014 <_ZN4listIhLi8EE2atEj>
     e30:	00050793          	mv	a5,a0
     e34:	0017b793          	seqz	a5,a5
     e38:	0ff7f793          	zext.b	a5,a5
     e3c:	16079a63          	bnez	a5,fb0 <_ZL11action_givehPKcS0_+0x21c>
#       break;
#     }
#     entity &to = entities[lse.at(i)];
     e40:	fec42583          	lw	a1,-20(s0)
     e44:	fdc42503          	lw	a0,-36(s0)
     e48:	00001097          	auipc	ra,0x1
     e4c:	1cc080e7          	jalr	460(ra) # 2014 <_ZN4listIhLi8EE2atEj>
     e50:	00050793          	mv	a5,a0
     e54:	00078713          	mv	a4,a5
     e58:	00070793          	mv	a5,a4
     e5c:	00179793          	sll	a5,a5,0x1
     e60:	00e787b3          	add	a5,a5,a4
     e64:	00279793          	sll	a5,a5,0x2
     e68:	40e787b3          	sub	a5,a5,a4
     e6c:	00279793          	sll	a5,a5,0x2
     e70:	00003737          	lui	a4,0x3
     e74:	34870713          	add	a4,a4,840 # 3348 <_ZL8entities>
     e78:	00e787b3          	add	a5,a5,a4
     e7c:	fcf42c23          	sw	a5,-40(s0)
#     if (!strings_equal(to.name, to_ent)) {
     e80:	fd842783          	lw	a5,-40(s0)
     e84:	0007a783          	lw	a5,0(a5)
     e88:	fc442583          	lw	a1,-60(s0)
     e8c:	00078513          	mv	a0,a5
     e90:	00000097          	auipc	ra,0x0
     e94:	720080e7          	jalr	1824(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     e98:	00050793          	mv	a5,a0
     e9c:	0017c793          	xor	a5,a5,1
     ea0:	0ff7f793          	zext.b	a5,a5
     ea4:	0e079663          	bnez	a5,f90 <_ZL11action_givehPKcS0_+0x1fc>
#       continue;
#     }
#     list<object_id_t, ENTITY_MAX_OBJECTS> &lso = ent.objects;
     ea8:	fe442783          	lw	a5,-28(s0)
     eac:	00878793          	add	a5,a5,8
     eb0:	fcf42a23          	sw	a5,-44(s0)
#     for (size_t j = 0; j < ENTITY_MAX_OBJECTS; j++) {
     eb4:	fe042423          	sw	zero,-24(s0)
     eb8:	0a40006f          	j	f5c <_ZL11action_givehPKcS0_+0x1c8>
#       object_id_t const oid = lso.at(j);
     ebc:	fe842583          	lw	a1,-24(s0)
     ec0:	fd442503          	lw	a0,-44(s0)
     ec4:	00001097          	auipc	ra,0x1
     ec8:	1e0080e7          	jalr	480(ra) # 20a4 <_ZN4listIhLi32EE2atEj>
     ecc:	00050793          	mv	a5,a0
     ed0:	fcf409a3          	sb	a5,-45(s0)
#       if (!oid) {
     ed4:	fd344783          	lbu	a5,-45(s0)
     ed8:	08078a63          	beqz	a5,f6c <_ZL11action_givehPKcS0_+0x1d8>
#         break;
#       }
#       if (!strings_equal(objects[oid].name, obj)) {
     edc:	fd344783          	lbu	a5,-45(s0)
     ee0:	00003737          	lui	a4,0x3
     ee4:	33870713          	add	a4,a4,824 # 3338 <_ZL7objects>
     ee8:	00279793          	sll	a5,a5,0x2
     eec:	00f707b3          	add	a5,a4,a5
     ef0:	0007a783          	lw	a5,0(a5)
     ef4:	fc842583          	lw	a1,-56(s0)
     ef8:	00078513          	mv	a0,a5
     efc:	00000097          	auipc	ra,0x0
     f00:	6b4080e7          	jalr	1716(ra) # 15b0 <_ZL13strings_equalPKcS0_>
     f04:	00050793          	mv	a5,a0
     f08:	0017c793          	xor	a5,a5,1
     f0c:	0ff7f793          	zext.b	a5,a5
     f10:	02079e63          	bnez	a5,f4c <_ZL11action_givehPKcS0_+0x1b8>
#         continue;
#       }
#       if (to.objects.add(oid)) {
     f14:	fd842783          	lw	a5,-40(s0)
     f18:	00878793          	add	a5,a5,8
     f1c:	fd344703          	lbu	a4,-45(s0)
     f20:	00070593          	mv	a1,a4
     f24:	00078513          	mv	a0,a5
     f28:	00001097          	auipc	ra,0x1
     f2c:	1c4080e7          	jalr	452(ra) # 20ec <_ZN4listIhLi32EE3addEh>
     f30:	00050793          	mv	a5,a0
     f34:	0a078063          	beqz	a5,fd4 <_ZL11action_givehPKcS0_+0x240>
#         lso.remove_by_index(j);
     f38:	fe842583          	lw	a1,-24(s0)
     f3c:	fd442503          	lw	a0,-44(s0)
     f40:	00001097          	auipc	ra,0x1
     f44:	32c080e7          	jalr	812(ra) # 226c <_ZN4listIhLi32EE15remove_by_indexEj>
#       }
#       return;
     f48:	08c0006f          	j	fd4 <_ZL11action_givehPKcS0_+0x240>
#         continue;
     f4c:	00000013          	nop
#     for (size_t j = 0; j < ENTITY_MAX_OBJECTS; j++) {
     f50:	fe842783          	lw	a5,-24(s0)
     f54:	00178793          	add	a5,a5,1
     f58:	fef42423          	sw	a5,-24(s0)
     f5c:	fe842703          	lw	a4,-24(s0)
     f60:	01f00793          	li	a5,31
     f64:	f4e7fce3          	bgeu	a5,a4,ebc <_ZL11action_givehPKcS0_+0x128>
     f68:	0080006f          	j	f70 <_ZL11action_givehPKcS0_+0x1dc>
#         break;
     f6c:	00000013          	nop
#     }
#     uart_send_str(obj);
     f70:	fc842503          	lw	a0,-56(s0)
     f74:	00001097          	auipc	ra,0x1
     f78:	870080e7          	jalr	-1936(ra) # 17e4 <_ZL13uart_send_strPKc>
#     uart_send_str(" not in inventory\r\n\r\n");
     f7c:	000037b7          	lui	a5,0x3
     f80:	94878513          	add	a0,a5,-1720 # 2948 <_ZN4listIhLi8EE6removeEh+0x5e0>
     f84:	00001097          	auipc	ra,0x1
     f88:	860080e7          	jalr	-1952(ra) # 17e4 <_ZL13uart_send_strPKc>
#     return;
     f8c:	04c0006f          	j	fd8 <_ZL11action_givehPKcS0_+0x244>
#       continue;
     f90:	00000013          	nop
#   for (size_t i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     f94:	fec42783          	lw	a5,-20(s0)
     f98:	00178793          	add	a5,a5,1
     f9c:	fef42623          	sw	a5,-20(s0)
     fa0:	fec42703          	lw	a4,-20(s0)
     fa4:	00700793          	li	a5,7
     fa8:	e6e7fce3          	bgeu	a5,a4,e20 <_ZL11action_givehPKcS0_+0x8c>
     fac:	0080006f          	j	fb4 <_ZL11action_givehPKcS0_+0x220>
#       break;
     fb0:	00000013          	nop
#   }
#   uart_send_str(to_ent);
     fb4:	fc442503          	lw	a0,-60(s0)
     fb8:	00001097          	auipc	ra,0x1
     fbc:	82c080e7          	jalr	-2004(ra) # 17e4 <_ZL13uart_send_strPKc>
#   uart_send_str(" is not here\r\n\r\n");
     fc0:	000037b7          	lui	a5,0x3
     fc4:	96078513          	add	a0,a5,-1696 # 2960 <_ZN4listIhLi8EE6removeEh+0x5f8>
     fc8:	00001097          	auipc	ra,0x1
     fcc:	81c080e7          	jalr	-2020(ra) # 17e4 <_ZL13uart_send_strPKc>
     fd0:	0080006f          	j	fd8 <_ZL11action_givehPKcS0_+0x244>
#       return;
     fd4:	00000013          	nop
# }
     fd8:	03c12083          	lw	ra,60(sp)
     fdc:	03812403          	lw	s0,56(sp)
     fe0:	04010113          	add	sp,sp,64
     fe4:	00008067          	ret

00000fe8 <_ZL10print_helpv>:
# 
# static auto print_help() -> void {
     fe8:	ff010113          	add	sp,sp,-16
     fec:	00112623          	sw	ra,12(sp)
     ff0:	00812423          	sw	s0,8(sp)
     ff4:	01010413          	add	s0,sp,16
#   uart_send_str(
     ff8:	000037b7          	lui	a5,0x3
     ffc:	97478513          	add	a0,a5,-1676 # 2974 <_ZN4listIhLi8EE6removeEh+0x60c>
    1000:	00000097          	auipc	ra,0x0
    1004:	7e4080e7          	jalr	2020(ra) # 17e4 <_ZL13uart_send_strPKc>
#       "\r\ncommand:\r\n  n: go north\r\n  e: go east\r\n  s: go south\r\n  w: "
#       "go west\r\n  i: "
#       "display inventory\r\n  t <object>: take object\r\n  d <object>: drop "
#       "object\r\n  g <object> <entity>: give object to entity\r\n  help: this "
#       "message\r\n\r\n");
# }
    1008:	00000013          	nop
    100c:	00c12083          	lw	ra,12(sp)
    1010:	00812403          	lw	s0,8(sp)
    1014:	01010113          	add	sp,sp,16
    1018:	00008067          	ret

0000101c <_ZL27input_escape_sequence_clearv>:
# 
# static char input_escape_sequence[8];
# static auto input_escape_sequence_clear() -> void {
    101c:	fe010113          	add	sp,sp,-32
    1020:	00812e23          	sw	s0,28(sp)
    1024:	02010413          	add	s0,sp,32
#   for (size_t i = 0; i < sizeof(input_escape_sequence); ++i) {
    1028:	fe042623          	sw	zero,-20(s0)
    102c:	0280006f          	j	1054 <_ZL27input_escape_sequence_clearv+0x38>
#     input_escape_sequence[i] = '0';
    1030:	000037b7          	lui	a5,0x3
    1034:	70c78713          	add	a4,a5,1804 # 370c <_ZL21input_escape_sequence>
    1038:	fec42783          	lw	a5,-20(s0)
    103c:	00f707b3          	add	a5,a4,a5
    1040:	03000713          	li	a4,48
    1044:	00e78023          	sb	a4,0(a5)
#   for (size_t i = 0; i < sizeof(input_escape_sequence); ++i) {
    1048:	fec42783          	lw	a5,-20(s0)
    104c:	00178793          	add	a5,a5,1
    1050:	fef42623          	sw	a5,-20(s0)
    1054:	fec42703          	lw	a4,-20(s0)
    1058:	00700793          	li	a5,7
    105c:	fce7fae3          	bgeu	a5,a4,1030 <_ZL27input_escape_sequence_clearv+0x14>
#   }
# }
    1060:	00000013          	nop
    1064:	00000013          	nop
    1068:	01c12403          	lw	s0,28(sp)
    106c:	02010113          	add	sp,sp,32
    1070:	00008067          	ret

00001074 <_ZZL5inputR14command_bufferENKUlcE_clEc>:
#           if (ch == 0x7e) {
#             // escape sequence 0x1B 0x5B 0x33 0x7E
#             // delete
#             buf.del();
#             buf.apply_on_chars_from_cursor_to_end(
#                 [](char c) { uart_send_char(c); });
    1074:	fe010113          	add	sp,sp,-32
    1078:	00112e23          	sw	ra,28(sp)
    107c:	00812c23          	sw	s0,24(sp)
    1080:	02010413          	add	s0,sp,32
    1084:	fea42623          	sw	a0,-20(s0)
    1088:	00058793          	mv	a5,a1
    108c:	fef405a3          	sb	a5,-21(s0)
    1090:	feb44783          	lbu	a5,-21(s0)
    1094:	00078513          	mv	a0,a5
    1098:	00000097          	auipc	ra,0x0
    109c:	7b4080e7          	jalr	1972(ra) # 184c <_ZL14uart_send_charc>
    10a0:	00000013          	nop
    10a4:	01c12083          	lw	ra,28(sp)
    10a8:	01812403          	lw	s0,24(sp)
    10ac:	02010113          	add	sp,sp,32
    10b0:	00008067          	ret

000010b4 <_ZZL5inputR14command_bufferENUlcE_4_FUNEc>:
    10b4:	fe010113          	add	sp,sp,-32
    10b8:	00112e23          	sw	ra,28(sp)
    10bc:	00812c23          	sw	s0,24(sp)
    10c0:	02010413          	add	s0,sp,32
    10c4:	00050793          	mv	a5,a0
    10c8:	fef407a3          	sb	a5,-17(s0)
    10cc:	fef44783          	lbu	a5,-17(s0)
    10d0:	00078593          	mv	a1,a5
    10d4:	00000513          	li	a0,0
    10d8:	00000097          	auipc	ra,0x0
    10dc:	f9c080e7          	jalr	-100(ra) # 1074 <_ZZL5inputR14command_bufferENKUlcE_clEc>
    10e0:	01c12083          	lw	ra,28(sp)
    10e4:	01812403          	lw	s0,24(sp)
    10e8:	02010113          	add	sp,sp,32
    10ec:	00008067          	ret

000010f0 <_ZZL5inputR14command_bufferENKUlcE_cvPFvcEEv>:
    10f0:	fe010113          	add	sp,sp,-32
    10f4:	00812e23          	sw	s0,28(sp)
    10f8:	02010413          	add	s0,sp,32
    10fc:	fea42623          	sw	a0,-20(s0)
    1100:	000017b7          	lui	a5,0x1
    1104:	0b478793          	add	a5,a5,180 # 10b4 <_ZZL5inputR14command_bufferENUlcE_4_FUNEc>
    1108:	00078513          	mv	a0,a5
    110c:	01c12403          	lw	s0,28(sp)
    1110:	02010113          	add	sp,sp,32
    1114:	00008067          	ret

00001118 <_ZZL5inputR14command_bufferENKUlcE0_clEc>:
#     }
#     if (ch == CHAR_BACKSPACE) {
#       if (buf.backspace()) {
#         uart_send_char(ch);
#         buf.apply_on_chars_from_cursor_to_end(
#             [](char c) { uart_send_char(c); });
    1118:	fe010113          	add	sp,sp,-32
    111c:	00112e23          	sw	ra,28(sp)
    1120:	00812c23          	sw	s0,24(sp)
    1124:	02010413          	add	s0,sp,32
    1128:	fea42623          	sw	a0,-20(s0)
    112c:	00058793          	mv	a5,a1
    1130:	fef405a3          	sb	a5,-21(s0)
    1134:	feb44783          	lbu	a5,-21(s0)
    1138:	00078513          	mv	a0,a5
    113c:	00000097          	auipc	ra,0x0
    1140:	710080e7          	jalr	1808(ra) # 184c <_ZL14uart_send_charc>
    1144:	00000013          	nop
    1148:	01c12083          	lw	ra,28(sp)
    114c:	01812403          	lw	s0,24(sp)
    1150:	02010113          	add	sp,sp,32
    1154:	00008067          	ret

00001158 <_ZZL5inputR14command_bufferENUlcE0_4_FUNEc>:
    1158:	fe010113          	add	sp,sp,-32
    115c:	00112e23          	sw	ra,28(sp)
    1160:	00812c23          	sw	s0,24(sp)
    1164:	02010413          	add	s0,sp,32
    1168:	00050793          	mv	a5,a0
    116c:	fef407a3          	sb	a5,-17(s0)
    1170:	fef44783          	lbu	a5,-17(s0)
    1174:	00078593          	mv	a1,a5
    1178:	00000513          	li	a0,0
    117c:	00000097          	auipc	ra,0x0
    1180:	f9c080e7          	jalr	-100(ra) # 1118 <_ZZL5inputR14command_bufferENKUlcE0_clEc>
    1184:	01c12083          	lw	ra,28(sp)
    1188:	01812403          	lw	s0,24(sp)
    118c:	02010113          	add	sp,sp,32
    1190:	00008067          	ret

00001194 <_ZZL5inputR14command_bufferENKUlcE0_cvPFvcEEv>:
    1194:	fe010113          	add	sp,sp,-32
    1198:	00812e23          	sw	s0,28(sp)
    119c:	02010413          	add	s0,sp,32
    11a0:	fea42623          	sw	a0,-20(s0)
    11a4:	000017b7          	lui	a5,0x1
    11a8:	15878793          	add	a5,a5,344 # 1158 <_ZZL5inputR14command_bufferENUlcE0_4_FUNEc>
    11ac:	00078513          	mv	a0,a5
    11b0:	01c12403          	lw	s0,28(sp)
    11b4:	02010113          	add	sp,sp,32
    11b8:	00008067          	ret

000011bc <_ZZL5inputR14command_bufferENKUlcE1_clEc>:
#       return;
#     } else {
#       uart_send_char(ch);
#       buf.insert(ch);
#       buf.apply_on_chars_from_cursor_to_end(
#           [](char const c) { uart_send_char(c); });
    11bc:	fe010113          	add	sp,sp,-32
    11c0:	00112e23          	sw	ra,28(sp)
    11c4:	00812c23          	sw	s0,24(sp)
    11c8:	02010413          	add	s0,sp,32
    11cc:	fea42623          	sw	a0,-20(s0)
    11d0:	00058793          	mv	a5,a1
    11d4:	fef405a3          	sb	a5,-21(s0)
    11d8:	feb44783          	lbu	a5,-21(s0)
    11dc:	00078513          	mv	a0,a5
    11e0:	00000097          	auipc	ra,0x0
    11e4:	66c080e7          	jalr	1644(ra) # 184c <_ZL14uart_send_charc>
    11e8:	00000013          	nop
    11ec:	01c12083          	lw	ra,28(sp)
    11f0:	01812403          	lw	s0,24(sp)
    11f4:	02010113          	add	sp,sp,32
    11f8:	00008067          	ret

000011fc <_ZZL5inputR14command_bufferENUlcE1_4_FUNEc>:
    11fc:	fe010113          	add	sp,sp,-32
    1200:	00112e23          	sw	ra,28(sp)
    1204:	00812c23          	sw	s0,24(sp)
    1208:	02010413          	add	s0,sp,32
    120c:	00050793          	mv	a5,a0
    1210:	fef407a3          	sb	a5,-17(s0)
    1214:	fef44783          	lbu	a5,-17(s0)
    1218:	00078593          	mv	a1,a5
    121c:	00000513          	li	a0,0
    1220:	00000097          	auipc	ra,0x0
    1224:	f9c080e7          	jalr	-100(ra) # 11bc <_ZZL5inputR14command_bufferENKUlcE1_clEc>
    1228:	01c12083          	lw	ra,28(sp)
    122c:	01812403          	lw	s0,24(sp)
    1230:	02010113          	add	sp,sp,32
    1234:	00008067          	ret

00001238 <_ZZL5inputR14command_bufferENKUlcE1_cvPFvcEEv>:
    1238:	fe010113          	add	sp,sp,-32
    123c:	00812e23          	sw	s0,28(sp)
    1240:	02010413          	add	s0,sp,32
    1244:	fea42623          	sw	a0,-20(s0)
    1248:	000017b7          	lui	a5,0x1
    124c:	1fc78793          	add	a5,a5,508 # 11fc <_ZZL5inputR14command_bufferENUlcE1_4_FUNEc>
    1250:	00078513          	mv	a0,a5
    1254:	01c12403          	lw	s0,28(sp)
    1258:	02010113          	add	sp,sp,32
    125c:	00008067          	ret

00001260 <_ZL5inputR14command_buffer>:
# static auto input(command_buffer &buf) -> void {
    1260:	fd010113          	add	sp,sp,-48
    1264:	02112623          	sw	ra,44(sp)
    1268:	02812423          	sw	s0,40(sp)
    126c:	03010413          	add	s0,sp,48
    1270:	fca42e23          	sw	a0,-36(s0)
#   buf.reset();
    1274:	fdc42503          	lw	a0,-36(s0)
    1278:	00001097          	auipc	ra,0x1
    127c:	b08080e7          	jalr	-1272(ra) # 1d80 <_ZN14command_buffer5resetEv>
#     char const ch = uart_read_char();
    1280:	00000097          	auipc	ra,0x0
    1284:	618080e7          	jalr	1560(ra) # 1898 <_ZL14uart_read_charv>
    1288:	00050793          	mv	a5,a0
    128c:	fef407a3          	sb	a5,-17(s0)
#     if (ch == 0x1B) {
    1290:	fef44703          	lbu	a4,-17(s0)
    1294:	01b00793          	li	a5,27
    1298:	00f71c63          	bne	a4,a5,12b0 <_ZL5inputR14command_buffer+0x50>
#       input_escape_sequence[0] = 0x1B;
    129c:	000037b7          	lui	a5,0x3
    12a0:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    12a4:	01b00713          	li	a4,27
    12a8:	00e78023          	sb	a4,0(a5)
#       continue;
    12ac:	2f00006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#     if (input_escape_sequence[0] == 0x1B) {
    12b0:	000037b7          	lui	a5,0x3
    12b4:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    12b8:	0007c703          	lbu	a4,0(a5)
    12bc:	01b00793          	li	a5,27
    12c0:	18f71663          	bne	a4,a5,144c <_ZL5inputR14command_buffer+0x1ec>
#       if (ch == 0x5B) {
    12c4:	fef44703          	lbu	a4,-17(s0)
    12c8:	05b00793          	li	a5,91
    12cc:	00f71c63          	bne	a4,a5,12e4 <_ZL5inputR14command_buffer+0x84>
#         input_escape_sequence[1] = 0x5B;
    12d0:	000037b7          	lui	a5,0x3
    12d4:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    12d8:	05b00713          	li	a4,91
    12dc:	00e780a3          	sb	a4,1(a5)
#         continue;
    12e0:	2bc0006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#       if (input_escape_sequence[1] == 0x5B) {
    12e4:	000037b7          	lui	a5,0x3
    12e8:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    12ec:	0017c703          	lbu	a4,1(a5)
    12f0:	05b00793          	li	a5,91
    12f4:	14f71c63          	bne	a4,a5,144c <_ZL5inputR14command_buffer+0x1ec>
#         if (ch == 0x44) {
    12f8:	fef44703          	lbu	a4,-17(s0)
    12fc:	04400793          	li	a5,68
    1300:	04f71463          	bne	a4,a5,1348 <_ZL5inputR14command_buffer+0xe8>
#           if (buf.move_cursor_left()) {
    1304:	fdc42503          	lw	a0,-36(s0)
    1308:	00001097          	auipc	ra,0x1
    130c:	b1c080e7          	jalr	-1252(ra) # 1e24 <_ZN14command_buffer16move_cursor_leftEv>
    1310:	00050793          	mv	a5,a0
    1314:	02078463          	beqz	a5,133c <_ZL5inputR14command_buffer+0xdc>
#             uart_send_char(0x1B);
    1318:	01b00513          	li	a0,27
    131c:	00000097          	auipc	ra,0x0
    1320:	530080e7          	jalr	1328(ra) # 184c <_ZL14uart_send_charc>
#             uart_send_char(0x5B);
    1324:	05b00513          	li	a0,91
    1328:	00000097          	auipc	ra,0x0
    132c:	524080e7          	jalr	1316(ra) # 184c <_ZL14uart_send_charc>
#             uart_send_char(0x44);
    1330:	04400513          	li	a0,68
    1334:	00000097          	auipc	ra,0x0
    1338:	518080e7          	jalr	1304(ra) # 184c <_ZL14uart_send_charc>
#           input_escape_sequence_clear();
    133c:	00000097          	auipc	ra,0x0
    1340:	ce0080e7          	jalr	-800(ra) # 101c <_ZL27input_escape_sequence_clearv>
#           continue;
    1344:	2580006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#         if (ch == 0x43) {
    1348:	fef44703          	lbu	a4,-17(s0)
    134c:	04300793          	li	a5,67
    1350:	04f71463          	bne	a4,a5,1398 <_ZL5inputR14command_buffer+0x138>
#           if (buf.move_cursor_right()) {
    1354:	fdc42503          	lw	a0,-36(s0)
    1358:	00001097          	auipc	ra,0x1
    135c:	b1c080e7          	jalr	-1252(ra) # 1e74 <_ZN14command_buffer17move_cursor_rightEv>
    1360:	00050793          	mv	a5,a0
    1364:	02078463          	beqz	a5,138c <_ZL5inputR14command_buffer+0x12c>
#             uart_send_char(0x1B);
    1368:	01b00513          	li	a0,27
    136c:	00000097          	auipc	ra,0x0
    1370:	4e0080e7          	jalr	1248(ra) # 184c <_ZL14uart_send_charc>
#             uart_send_char(0x5B);
    1374:	05b00513          	li	a0,91
    1378:	00000097          	auipc	ra,0x0
    137c:	4d4080e7          	jalr	1236(ra) # 184c <_ZL14uart_send_charc>
#             uart_send_char(0x43);
    1380:	04300513          	li	a0,67
    1384:	00000097          	auipc	ra,0x0
    1388:	4c8080e7          	jalr	1224(ra) # 184c <_ZL14uart_send_charc>
#           input_escape_sequence_clear();
    138c:	00000097          	auipc	ra,0x0
    1390:	c90080e7          	jalr	-880(ra) # 101c <_ZL27input_escape_sequence_clearv>
#           continue;
    1394:	2080006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#         if (ch == 0x33) {
    1398:	fef44703          	lbu	a4,-17(s0)
    139c:	03300793          	li	a5,51
    13a0:	00f71c63          	bne	a4,a5,13b8 <_ZL5inputR14command_buffer+0x158>
#           input_escape_sequence[2] = 0x33;
    13a4:	000037b7          	lui	a5,0x3
    13a8:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    13ac:	03300713          	li	a4,51
    13b0:	00e78123          	sb	a4,2(a5)
#           continue;
    13b4:	1e80006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#         if (input_escape_sequence[2] == 0x33) {
    13b8:	000037b7          	lui	a5,0x3
    13bc:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    13c0:	0027c703          	lbu	a4,2(a5)
    13c4:	03300793          	li	a5,51
    13c8:	06f71c63          	bne	a4,a5,1440 <_ZL5inputR14command_buffer+0x1e0>
#           if (ch == 0x7e) {
    13cc:	fef44703          	lbu	a4,-17(s0)
    13d0:	07e00793          	li	a5,126
    13d4:	06f71063          	bne	a4,a5,1434 <_ZL5inputR14command_buffer+0x1d4>
#             buf.del();
    13d8:	fdc42503          	lw	a0,-36(s0)
    13dc:	00001097          	auipc	ra,0x1
    13e0:	8fc080e7          	jalr	-1796(ra) # 1cd8 <_ZN14command_buffer3delEv>
#             buf.apply_on_chars_from_cursor_to_end(
    13e4:	fe440793          	add	a5,s0,-28
    13e8:	00078513          	mv	a0,a5
    13ec:	00000097          	auipc	ra,0x0
    13f0:	d04080e7          	jalr	-764(ra) # 10f0 <_ZZL5inputR14command_bufferENKUlcE_cvPFvcEEv>
    13f4:	00050793          	mv	a5,a0
    13f8:	00078593          	mv	a1,a5
    13fc:	fdc42503          	lw	a0,-36(s0)
    1400:	00001097          	auipc	ra,0x1
    1404:	acc080e7          	jalr	-1332(ra) # 1ecc <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE>
#             uart_send_char(' ');
    1408:	02000513          	li	a0,32
    140c:	00000097          	auipc	ra,0x0
    1410:	440080e7          	jalr	1088(ra) # 184c <_ZL14uart_send_charc>
#             uart_send_move_back(buf.characters_after_cursor() + 1);
    1414:	fdc42503          	lw	a0,-36(s0)
    1418:	00001097          	auipc	ra,0x1
    141c:	b30080e7          	jalr	-1232(ra) # 1f48 <_ZN14command_buffer23characters_after_cursorEv>
    1420:	00050793          	mv	a5,a0
    1424:	00178793          	add	a5,a5,1
    1428:	00078513          	mv	a0,a5
    142c:	00000097          	auipc	ra,0x0
    1430:	330080e7          	jalr	816(ra) # 175c <_ZL19uart_send_move_backj>
#           input_escape_sequence_clear();
    1434:	00000097          	auipc	ra,0x0
    1438:	be8080e7          	jalr	-1048(ra) # 101c <_ZL27input_escape_sequence_clearv>
#           continue;
    143c:	1600006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#         input_escape_sequence_clear();
    1440:	00000097          	auipc	ra,0x0
    1444:	bdc080e7          	jalr	-1060(ra) # 101c <_ZL27input_escape_sequence_clearv>
#         continue;
    1448:	1540006f          	j	159c <_ZL5inputR14command_buffer+0x33c>
#     if (ch == CHAR_BACKSPACE) {
    144c:	fef44703          	lbu	a4,-17(s0)
    1450:	07f00793          	li	a5,127
    1454:	06f71e63          	bne	a4,a5,14d0 <_ZL5inputR14command_buffer+0x270>
#       if (buf.backspace()) {
    1458:	fdc42503          	lw	a0,-36(s0)
    145c:	00000097          	auipc	ra,0x0
    1460:	770080e7          	jalr	1904(ra) # 1bcc <_ZN14command_buffer9backspaceEv>
    1464:	00050793          	mv	a5,a0
    1468:	10078663          	beqz	a5,1574 <_ZL5inputR14command_buffer+0x314>
#         uart_send_char(ch);
    146c:	fef44783          	lbu	a5,-17(s0)
    1470:	00078513          	mv	a0,a5
    1474:	00000097          	auipc	ra,0x0
    1478:	3d8080e7          	jalr	984(ra) # 184c <_ZL14uart_send_charc>
#         buf.apply_on_chars_from_cursor_to_end(
    147c:	fe840793          	add	a5,s0,-24
    1480:	00078513          	mv	a0,a5
    1484:	00000097          	auipc	ra,0x0
    1488:	d10080e7          	jalr	-752(ra) # 1194 <_ZZL5inputR14command_bufferENKUlcE0_cvPFvcEEv>
    148c:	00050793          	mv	a5,a0
    1490:	00078593          	mv	a1,a5
    1494:	fdc42503          	lw	a0,-36(s0)
    1498:	00001097          	auipc	ra,0x1
    149c:	a34080e7          	jalr	-1484(ra) # 1ecc <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE>
#         uart_send_char(' ');
    14a0:	02000513          	li	a0,32
    14a4:	00000097          	auipc	ra,0x0
    14a8:	3a8080e7          	jalr	936(ra) # 184c <_ZL14uart_send_charc>
#         uart_send_move_back(buf.characters_after_cursor() + 1);
    14ac:	fdc42503          	lw	a0,-36(s0)
    14b0:	00001097          	auipc	ra,0x1
    14b4:	a98080e7          	jalr	-1384(ra) # 1f48 <_ZN14command_buffer23characters_after_cursorEv>
    14b8:	00050793          	mv	a5,a0
    14bc:	00178793          	add	a5,a5,1
    14c0:	00078513          	mv	a0,a5
    14c4:	00000097          	auipc	ra,0x0
    14c8:	298080e7          	jalr	664(ra) # 175c <_ZL19uart_send_move_backj>
    14cc:	0a80006f          	j	1574 <_ZL5inputR14command_buffer+0x314>
#     } else if (ch == CHAR_CARRIAGE_RETURN || buf.is_full()) {
    14d0:	fef44703          	lbu	a4,-17(s0)
    14d4:	00d00793          	li	a5,13
    14d8:	00f70c63          	beq	a4,a5,14f0 <_ZL5inputR14command_buffer+0x290>
    14dc:	fdc42503          	lw	a0,-36(s0)
    14e0:	00001097          	auipc	ra,0x1
    14e4:	910080e7          	jalr	-1776(ra) # 1df0 <_ZN14command_buffer7is_fullEv>
    14e8:	00050793          	mv	a5,a0
    14ec:	00078663          	beqz	a5,14f8 <_ZL5inputR14command_buffer+0x298>
    14f0:	00100793          	li	a5,1
    14f4:	0080006f          	j	14fc <_ZL5inputR14command_buffer+0x29c>
    14f8:	00000793          	li	a5,0
    14fc:	00078a63          	beqz	a5,1510 <_ZL5inputR14command_buffer+0x2b0>
#       buf.set_eos();
    1500:	fdc42503          	lw	a0,-36(s0)
    1504:	00001097          	auipc	ra,0x1
    1508:	8b4080e7          	jalr	-1868(ra) # 1db8 <_ZN14command_buffer7set_eosEv>
#       return;
    150c:	0940006f          	j	15a0 <_ZL5inputR14command_buffer+0x340>
#       uart_send_char(ch);
    1510:	fef44783          	lbu	a5,-17(s0)
    1514:	00078513          	mv	a0,a5
    1518:	00000097          	auipc	ra,0x0
    151c:	334080e7          	jalr	820(ra) # 184c <_ZL14uart_send_charc>
#       buf.insert(ch);
    1520:	fef44783          	lbu	a5,-17(s0)
    1524:	00078593          	mv	a1,a5
    1528:	fdc42503          	lw	a0,-36(s0)
    152c:	00000097          	auipc	ra,0x0
    1530:	554080e7          	jalr	1364(ra) # 1a80 <_ZN14command_buffer6insertEc>
#       buf.apply_on_chars_from_cursor_to_end(
    1534:	fec40793          	add	a5,s0,-20
    1538:	00078513          	mv	a0,a5
    153c:	00000097          	auipc	ra,0x0
    1540:	cfc080e7          	jalr	-772(ra) # 1238 <_ZZL5inputR14command_bufferENKUlcE1_cvPFvcEEv>
    1544:	00050793          	mv	a5,a0
    1548:	00078593          	mv	a1,a5
    154c:	fdc42503          	lw	a0,-36(s0)
    1550:	00001097          	auipc	ra,0x1
    1554:	97c080e7          	jalr	-1668(ra) # 1ecc <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE>
#       uart_send_move_back(buf.characters_after_cursor());
    1558:	fdc42503          	lw	a0,-36(s0)
    155c:	00001097          	auipc	ra,0x1
    1560:	9ec080e7          	jalr	-1556(ra) # 1f48 <_ZN14command_buffer23characters_after_cursorEv>
    1564:	00050793          	mv	a5,a0
    1568:	00078513          	mv	a0,a5
    156c:	00000097          	auipc	ra,0x0
    1570:	1f0080e7          	jalr	496(ra) # 175c <_ZL19uart_send_move_backj>
#     }
#     led_set(~uint8_t(buf.input_length()));
    1574:	fdc42503          	lw	a0,-36(s0)
    1578:	00001097          	auipc	ra,0x1
    157c:	a2c080e7          	jalr	-1492(ra) # 1fa4 <_ZN14command_buffer12input_lengthEv>
    1580:	00050793          	mv	a5,a0
    1584:	0ff7f793          	zext.b	a5,a5
    1588:	fff7c793          	not	a5,a5
    158c:	0ff7f793          	zext.b	a5,a5
    1590:	00078513          	mv	a0,a5
    1594:	00000097          	auipc	ra,0x0
    1598:	220080e7          	jalr	544(ra) # 17b4 <_ZL7led_seth>
#   }
    159c:	ce5ff06f          	j	1280 <_ZL5inputR14command_buffer+0x20>
# }
    15a0:	02c12083          	lw	ra,44(sp)
    15a4:	02812403          	lw	s0,40(sp)
    15a8:	03010113          	add	sp,sp,48
    15ac:	00008067          	ret

000015b0 <_ZL13strings_equalPKcS0_>:
# 
# static auto strings_equal(char const *s1, char const *s2) -> bool {
    15b0:	fe010113          	add	sp,sp,-32
    15b4:	00812e23          	sw	s0,28(sp)
    15b8:	02010413          	add	s0,sp,32
    15bc:	fea42623          	sw	a0,-20(s0)
    15c0:	feb42423          	sw	a1,-24(s0)
#   while (true) {
#     if (*s1 - *s2)
    15c4:	fec42783          	lw	a5,-20(s0)
    15c8:	0007c703          	lbu	a4,0(a5)
    15cc:	fe842783          	lw	a5,-24(s0)
    15d0:	0007c783          	lbu	a5,0(a5)
    15d4:	00f70663          	beq	a4,a5,15e0 <_ZL13strings_equalPKcS0_+0x30>
#       return false;
    15d8:	00000793          	li	a5,0
    15dc:	0400006f          	j	161c <_ZL13strings_equalPKcS0_+0x6c>
#     if (!*s1 && !*s2)
    15e0:	fec42783          	lw	a5,-20(s0)
    15e4:	0007c783          	lbu	a5,0(a5)
    15e8:	00079c63          	bnez	a5,1600 <_ZL13strings_equalPKcS0_+0x50>
    15ec:	fe842783          	lw	a5,-24(s0)
    15f0:	0007c783          	lbu	a5,0(a5)
    15f4:	00079663          	bnez	a5,1600 <_ZL13strings_equalPKcS0_+0x50>
#       return true;
    15f8:	00100793          	li	a5,1
    15fc:	0200006f          	j	161c <_ZL13strings_equalPKcS0_+0x6c>
#     s1++;
    1600:	fec42783          	lw	a5,-20(s0)
    1604:	00178793          	add	a5,a5,1
    1608:	fef42623          	sw	a5,-20(s0)
#     s2++;
    160c:	fe842783          	lw	a5,-24(s0)
    1610:	00178793          	add	a5,a5,1
    1614:	fef42423          	sw	a5,-24(s0)
#     if (*s1 - *s2)
    1618:	fadff06f          	j	15c4 <_ZL13strings_equalPKcS0_+0x14>
#   }
# }
    161c:	00078513          	mv	a0,a5
    1620:	01c12403          	lw	s0,28(sp)
    1624:	02010113          	add	sp,sp,32
    1628:	00008067          	ret

0000162c <_ZL11string_copyPKcjPc>:
# 
# static auto string_copy(char const *src, size_t src_len, char *dst) -> void {
    162c:	fe010113          	add	sp,sp,-32
    1630:	00812e23          	sw	s0,28(sp)
    1634:	02010413          	add	s0,sp,32
    1638:	fea42623          	sw	a0,-20(s0)
    163c:	feb42423          	sw	a1,-24(s0)
    1640:	fec42223          	sw	a2,-28(s0)
#   while (src_len--) {
    1644:	0240006f          	j	1668 <_ZL11string_copyPKcjPc+0x3c>
#     *dst++ = *src++;
    1648:	fec42783          	lw	a5,-20(s0)
    164c:	00178713          	add	a4,a5,1
    1650:	fee42623          	sw	a4,-20(s0)
    1654:	0007c703          	lbu	a4,0(a5)
    1658:	fe442783          	lw	a5,-28(s0)
    165c:	00178693          	add	a3,a5,1
    1660:	fed42223          	sw	a3,-28(s0)
    1664:	00e78023          	sb	a4,0(a5)
#   while (src_len--) {
    1668:	fe842783          	lw	a5,-24(s0)
    166c:	fff78713          	add	a4,a5,-1
    1670:	fee42423          	sw	a4,-24(s0)
    1674:	00f037b3          	snez	a5,a5
    1678:	0ff7f793          	zext.b	a5,a5
    167c:	fc0796e3          	bnez	a5,1648 <_ZL11string_copyPKcjPc+0x1c>
#   }
# }
    1680:	00000013          	nop
    1684:	00000013          	nop
    1688:	01c12403          	lw	s0,28(sp)
    168c:	02010113          	add	sp,sp,32
    1690:	00008067          	ret

00001694 <_ZL18uart_send_hex_bytec>:
# 
# static auto uart_send_hex_byte(char const ch) -> void {
    1694:	fe010113          	add	sp,sp,-32
    1698:	00112e23          	sw	ra,28(sp)
    169c:	00812c23          	sw	s0,24(sp)
    16a0:	02010413          	add	s0,sp,32
    16a4:	00050793          	mv	a5,a0
    16a8:	fef407a3          	sb	a5,-17(s0)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
    16ac:	fef44783          	lbu	a5,-17(s0)
    16b0:	0047d793          	srl	a5,a5,0x4
    16b4:	0ff7f793          	zext.b	a5,a5
    16b8:	00078513          	mv	a0,a5
    16bc:	00000097          	auipc	ra,0x0
    16c0:	034080e7          	jalr	52(ra) # 16f0 <_ZL20uart_send_hex_nibblec>
#   uart_send_hex_nibble(ch & 0x0f);
    16c4:	fef44783          	lbu	a5,-17(s0)
    16c8:	00f7f793          	and	a5,a5,15
    16cc:	0ff7f793          	zext.b	a5,a5
    16d0:	00078513          	mv	a0,a5
    16d4:	00000097          	auipc	ra,0x0
    16d8:	01c080e7          	jalr	28(ra) # 16f0 <_ZL20uart_send_hex_nibblec>
# }
    16dc:	00000013          	nop
    16e0:	01c12083          	lw	ra,28(sp)
    16e4:	01812403          	lw	s0,24(sp)
    16e8:	02010113          	add	sp,sp,32
    16ec:	00008067          	ret

000016f0 <_ZL20uart_send_hex_nibblec>:
# 
# static auto uart_send_hex_nibble(char const nibble) -> void {
    16f0:	fe010113          	add	sp,sp,-32
    16f4:	00112e23          	sw	ra,28(sp)
    16f8:	00812c23          	sw	s0,24(sp)
    16fc:	02010413          	add	s0,sp,32
    1700:	00050793          	mv	a5,a0
    1704:	fef407a3          	sb	a5,-17(s0)
#   if (nibble < 10) {
    1708:	fef44703          	lbu	a4,-17(s0)
    170c:	00900793          	li	a5,9
    1710:	02e7e063          	bltu	a5,a4,1730 <_ZL20uart_send_hex_nibblec+0x40>
#     uart_send_char('0' + nibble);
    1714:	fef44783          	lbu	a5,-17(s0)
    1718:	03078793          	add	a5,a5,48
    171c:	0ff7f793          	zext.b	a5,a5
    1720:	00078513          	mv	a0,a5
    1724:	00000097          	auipc	ra,0x0
    1728:	128080e7          	jalr	296(ra) # 184c <_ZL14uart_send_charc>
#   } else {
#     uart_send_char('A' + (nibble - 10));
#   }
# }
    172c:	01c0006f          	j	1748 <_ZL20uart_send_hex_nibblec+0x58>
#     uart_send_char('A' + (nibble - 10));
    1730:	fef44783          	lbu	a5,-17(s0)
    1734:	03778793          	add	a5,a5,55
    1738:	0ff7f793          	zext.b	a5,a5
    173c:	00078513          	mv	a0,a5
    1740:	00000097          	auipc	ra,0x0
    1744:	10c080e7          	jalr	268(ra) # 184c <_ZL14uart_send_charc>
# }
    1748:	00000013          	nop
    174c:	01c12083          	lw	ra,28(sp)
    1750:	01812403          	lw	s0,24(sp)
    1754:	02010113          	add	sp,sp,32
    1758:	00008067          	ret

0000175c <_ZL19uart_send_move_backj>:
# 
# static auto uart_send_move_back(size_t const n) -> void {
    175c:	fd010113          	add	sp,sp,-48
    1760:	02112623          	sw	ra,44(sp)
    1764:	02812423          	sw	s0,40(sp)
    1768:	03010413          	add	s0,sp,48
    176c:	fca42e23          	sw	a0,-36(s0)
#   for (size_t i = 0; i < n; ++i) {
    1770:	fe042623          	sw	zero,-20(s0)
    1774:	01c0006f          	j	1790 <_ZL19uart_send_move_backj+0x34>
#     uart_send_char('\b');
    1778:	00800513          	li	a0,8
    177c:	00000097          	auipc	ra,0x0
    1780:	0d0080e7          	jalr	208(ra) # 184c <_ZL14uart_send_charc>
#   for (size_t i = 0; i < n; ++i) {
    1784:	fec42783          	lw	a5,-20(s0)
    1788:	00178793          	add	a5,a5,1
    178c:	fef42623          	sw	a5,-20(s0)
    1790:	fec42703          	lw	a4,-20(s0)
    1794:	fdc42783          	lw	a5,-36(s0)
    1798:	fef760e3          	bltu	a4,a5,1778 <_ZL19uart_send_move_backj+0x1c>
#   }
# }
    179c:	00000013          	nop
    17a0:	00000013          	nop
    17a4:	02c12083          	lw	ra,44(sp)
    17a8:	02812403          	lw	s0,40(sp)
    17ac:	03010113          	add	sp,sp,48
    17b0:	00008067          	ret

000017b4 <_ZL7led_seth>:
# #include "os_common.hpp"
# // the platform independent source
# 
# // FPGA I/O
# 
# static auto led_set(uint8_t bits) -> void { *LED = bits; }
    17b4:	fe010113          	add	sp,sp,-32
    17b8:	00812e23          	sw	s0,28(sp)
    17bc:	02010413          	add	s0,sp,32
    17c0:	00050793          	mv	a5,a0
    17c4:	fef407a3          	sb	a5,-17(s0)
    17c8:	fff00793          	li	a5,-1
    17cc:	fef44703          	lbu	a4,-17(s0)
    17d0:	00e78023          	sb	a4,0(a5)
    17d4:	00000013          	nop
    17d8:	01c12403          	lw	s0,28(sp)
    17dc:	02010113          	add	sp,sp,32
    17e0:	00008067          	ret

000017e4 <_ZL13uart_send_strPKc>:
# 
# static auto uart_send_str(char const *str) -> void {
    17e4:	fe010113          	add	sp,sp,-32
    17e8:	00812e23          	sw	s0,28(sp)
    17ec:	02010413          	add	s0,sp,32
    17f0:	fea42623          	sw	a0,-20(s0)
#   while (*str) {
    17f4:	0380006f          	j	182c <_ZL13uart_send_strPKc+0x48>
#     while (*UART_OUT)
    17f8:	00000013          	nop
    17fc:	ffe00793          	li	a5,-2
    1800:	0007c783          	lbu	a5,0(a5)
    1804:	0ff7f793          	zext.b	a5,a5
    1808:	00f037b3          	snez	a5,a5
    180c:	0ff7f793          	zext.b	a5,a5
    1810:	fe0796e3          	bnez	a5,17fc <_ZL13uart_send_strPKc+0x18>
#       ;
#     *UART_OUT = *str++;
    1814:	fec42783          	lw	a5,-20(s0)
    1818:	00178713          	add	a4,a5,1
    181c:	fee42623          	sw	a4,-20(s0)
    1820:	ffe00713          	li	a4,-2
    1824:	0007c783          	lbu	a5,0(a5)
    1828:	00f70023          	sb	a5,0(a4)
#   while (*str) {
    182c:	fec42783          	lw	a5,-20(s0)
    1830:	0007c783          	lbu	a5,0(a5)
    1834:	fc0792e3          	bnez	a5,17f8 <_ZL13uart_send_strPKc+0x14>
#   }
# }
    1838:	00000013          	nop
    183c:	00000013          	nop
    1840:	01c12403          	lw	s0,28(sp)
    1844:	02010113          	add	sp,sp,32
    1848:	00008067          	ret

0000184c <_ZL14uart_send_charc>:
# 
# static auto uart_send_char(char const ch) -> void {
    184c:	fe010113          	add	sp,sp,-32
    1850:	00812e23          	sw	s0,28(sp)
    1854:	02010413          	add	s0,sp,32
    1858:	00050793          	mv	a5,a0
    185c:	fef407a3          	sb	a5,-17(s0)
#   while (*UART_OUT)
    1860:	00000013          	nop
    1864:	ffe00793          	li	a5,-2
    1868:	0007c783          	lbu	a5,0(a5)
    186c:	0ff7f793          	zext.b	a5,a5
    1870:	00f037b3          	snez	a5,a5
    1874:	0ff7f793          	zext.b	a5,a5
    1878:	fe0796e3          	bnez	a5,1864 <_ZL14uart_send_charc+0x18>
#     ;
#   *UART_OUT = ch;
    187c:	ffe00793          	li	a5,-2
    1880:	fef44703          	lbu	a4,-17(s0)
    1884:	00e78023          	sb	a4,0(a5)
# }
    1888:	00000013          	nop
    188c:	01c12403          	lw	s0,28(sp)
    1890:	02010113          	add	sp,sp,32
    1894:	00008067          	ret

00001898 <_ZL14uart_read_charv>:
# 
# static auto uart_read_char() -> char {
    1898:	fe010113          	add	sp,sp,-32
    189c:	00812e23          	sw	s0,28(sp)
    18a0:	02010413          	add	s0,sp,32
#   char ch;
#   while ((ch = *UART_IN) == 0)
    18a4:	00000013          	nop
    18a8:	ffd00793          	li	a5,-3
    18ac:	0007c783          	lbu	a5,0(a5)
    18b0:	fef407a3          	sb	a5,-17(s0)
    18b4:	fef44783          	lbu	a5,-17(s0)
    18b8:	0017b793          	seqz	a5,a5
    18bc:	0ff7f793          	zext.b	a5,a5
    18c0:	fe0794e3          	bnez	a5,18a8 <_ZL14uart_read_charv+0x10>
#     ;
#   return ch;
    18c4:	fef44783          	lbu	a5,-17(s0)
# }
    18c8:	00078513          	mv	a0,a5
    18cc:	01c12403          	lw	s0,28(sp)
    18d0:	02010113          	add	sp,sp,32
    18d4:	00008067          	ret

000018d8 <_ZL15action_mem_testv>:
# 
# // simple test of FPGA memory
# static auto action_mem_test() -> void {
    18d8:	fe010113          	add	sp,sp,-32
    18dc:	00112e23          	sw	ra,28(sp)
    18e0:	00812c23          	sw	s0,24(sp)
    18e4:	02010413          	add	s0,sp,32
#   uart_send_str("testing memory (write)\r\n");
    18e8:	000037b7          	lui	a5,0x3
    18ec:	a5078513          	add	a0,a5,-1456 # 2a50 <_ZN4listIhLi8EE6removeEh+0x6e8>
    18f0:	00000097          	auipc	ra,0x0
    18f4:	ef4080e7          	jalr	-268(ra) # 17e4 <_ZL13uart_send_strPKc>
#   char *ptr = reinterpret_cast<char *>(0x10000);
    18f8:	000107b7          	lui	a5,0x10
    18fc:	fef42623          	sw	a5,-20(s0)
#   char const *end = reinterpret_cast<char *>(MEMORY_TOP - 1024);
    1900:	002007b7          	lui	a5,0x200
    1904:	c0078793          	add	a5,a5,-1024 # 1ffc00 <__bss_end+0x1fc4ec>
    1908:	fef42223          	sw	a5,-28(s0)
#   // -1024 to avoid the stack
#   // ?? don't forget about this when the application grows
#   char ch = 0;
    190c:	fe0405a3          	sb	zero,-21(s0)
#   while (ptr < end) {
    1910:	0200006f          	j	1930 <_ZL15action_mem_testv+0x58>
#     *ptr++ = ch++;
    1914:	feb44703          	lbu	a4,-21(s0)
    1918:	00170793          	add	a5,a4,1
    191c:	fef405a3          	sb	a5,-21(s0)
    1920:	fec42783          	lw	a5,-20(s0)
    1924:	00178693          	add	a3,a5,1
    1928:	fed42623          	sw	a3,-20(s0)
    192c:	00e78023          	sb	a4,0(a5)
#   while (ptr < end) {
    1930:	fec42703          	lw	a4,-20(s0)
    1934:	fe442783          	lw	a5,-28(s0)
    1938:	fcf76ee3          	bltu	a4,a5,1914 <_ZL15action_mem_testv+0x3c>
#   }
#   uart_send_str("testing memory (read)\r\n");
    193c:	000037b7          	lui	a5,0x3
    1940:	a6c78513          	add	a0,a5,-1428 # 2a6c <_ZN4listIhLi8EE6removeEh+0x704>
    1944:	00000097          	auipc	ra,0x0
    1948:	ea0080e7          	jalr	-352(ra) # 17e4 <_ZL13uart_send_strPKc>
#   ptr = reinterpret_cast<char *>(0x10000);
    194c:	000107b7          	lui	a5,0x10
    1950:	fef42623          	sw	a5,-20(s0)
#   ch = 0;
    1954:	fe0405a3          	sb	zero,-21(s0)
#   while (ptr < end) {
    1958:	0440006f          	j	199c <_ZL15action_mem_testv+0xc4>
#     if (*ptr++ != ch++) {
    195c:	fec42783          	lw	a5,-20(s0)
    1960:	00178713          	add	a4,a5,1 # 10001 <__bss_end+0xc8ed>
    1964:	fee42623          	sw	a4,-20(s0)
    1968:	0007c703          	lbu	a4,0(a5)
    196c:	feb44783          	lbu	a5,-21(s0)
    1970:	00178693          	add	a3,a5,1
    1974:	fed405a3          	sb	a3,-21(s0)
    1978:	40f707b3          	sub	a5,a4,a5
    197c:	00f037b3          	snez	a5,a5
    1980:	0ff7f793          	zext.b	a5,a5
    1984:	00078c63          	beqz	a5,199c <_ZL15action_mem_testv+0xc4>
#       uart_send_str("!!! test memory failed\r\n");
    1988:	000037b7          	lui	a5,0x3
    198c:	a8478513          	add	a0,a5,-1404 # 2a84 <_ZN4listIhLi8EE6removeEh+0x71c>
    1990:	00000097          	auipc	ra,0x0
    1994:	e54080e7          	jalr	-428(ra) # 17e4 <_ZL13uart_send_strPKc>
#       return;
    1998:	0200006f          	j	19b8 <_ZL15action_mem_testv+0xe0>
#   while (ptr < end) {
    199c:	fec42703          	lw	a4,-20(s0)
    19a0:	fe442783          	lw	a5,-28(s0)
    19a4:	faf76ce3          	bltu	a4,a5,195c <_ZL15action_mem_testv+0x84>
#     }
#   }
#   uart_send_str("testing memory succeeded\r\n");
    19a8:	000037b7          	lui	a5,0x3
    19ac:	aa078513          	add	a0,a5,-1376 # 2aa0 <_ZN4listIhLi8EE6removeEh+0x738>
    19b0:	00000097          	auipc	ra,0x0
    19b4:	e34080e7          	jalr	-460(ra) # 17e4 <_ZL13uart_send_strPKc>
# }
    19b8:	01c12083          	lw	ra,28(sp)
    19bc:	01812403          	lw	s0,24(sp)
    19c0:	02010113          	add	sp,sp,32
    19c4:	00008067          	ret

000019c8 <memset>:
# 
# // built-in function called by compiler
# extern "C" auto memset(void *str, int ch, int n) -> void * {
    19c8:	fd010113          	add	sp,sp,-48
    19cc:	02812623          	sw	s0,44(sp)
    19d0:	03010413          	add	s0,sp,48
    19d4:	fca42e23          	sw	a0,-36(s0)
    19d8:	fcb42c23          	sw	a1,-40(s0)
    19dc:	fcc42a23          	sw	a2,-44(s0)
#   char *ptr = reinterpret_cast<char *>(str);
    19e0:	fdc42783          	lw	a5,-36(s0)
    19e4:	fef42623          	sw	a5,-20(s0)
#   while (n--) {
    19e8:	01c0006f          	j	1a04 <memset+0x3c>
#     *ptr++ = char(ch);
    19ec:	fd842783          	lw	a5,-40(s0)
    19f0:	0ff7f713          	zext.b	a4,a5
    19f4:	fec42783          	lw	a5,-20(s0)
    19f8:	00178693          	add	a3,a5,1
    19fc:	fed42623          	sw	a3,-20(s0)
    1a00:	00e78023          	sb	a4,0(a5)
#   while (n--) {
    1a04:	fd442783          	lw	a5,-44(s0)
    1a08:	fff78713          	add	a4,a5,-1
    1a0c:	fce42a23          	sw	a4,-44(s0)
    1a10:	00f037b3          	snez	a5,a5
    1a14:	0ff7f793          	zext.b	a5,a5
    1a18:	fc079ae3          	bnez	a5,19ec <memset+0x24>
#   }
#   return str;
    1a1c:	fdc42783          	lw	a5,-36(s0)
# }
    1a20:	00078513          	mv	a0,a5
    1a24:	02c12403          	lw	s0,44(sp)
    1a28:	03010113          	add	sp,sp,48
    1a2c:	00008067          	ret

00001a30 <_ZL16startup_init_bssv>:
# // symbols to mark start and end of bss section
# extern char __bss_start;
# extern char __bss_end;
# 
# // zero bss section
# static auto startup_init_bss() -> void {
    1a30:	ff010113          	add	sp,sp,-16
    1a34:	00112623          	sw	ra,12(sp)
    1a38:	00812423          	sw	s0,8(sp)
    1a3c:	01010413          	add	s0,sp,16
#   memset(&__bss_start, 0, &__bss_end - &__bss_start);
    1a40:	000037b7          	lui	a5,0x3
    1a44:	71478713          	add	a4,a5,1812 # 3714 <__bss_end>
    1a48:	000037b7          	lui	a5,0x3
    1a4c:	70c78793          	add	a5,a5,1804 # 370c <_ZL21input_escape_sequence>
    1a50:	40f707b3          	sub	a5,a4,a5
    1a54:	00078613          	mv	a2,a5
    1a58:	00000593          	li	a1,0
    1a5c:	000037b7          	lui	a5,0x3
    1a60:	70c78513          	add	a0,a5,1804 # 370c <_ZL21input_escape_sequence>
    1a64:	00000097          	auipc	ra,0x0
    1a68:	f64080e7          	jalr	-156(ra) # 19c8 <memset>
# }
    1a6c:	00000013          	nop
    1a70:	00c12083          	lw	ra,12(sp)
    1a74:	00812403          	lw	s0,8(sp)
    1a78:	01010113          	add	sp,sp,16
    1a7c:	00008067          	ret

00001a80 <_ZN14command_buffer6insertEc>:
#   auto insert(char const ch) -> bool {
    1a80:	fd010113          	add	sp,sp,-48
    1a84:	02812623          	sw	s0,44(sp)
    1a88:	03010413          	add	s0,sp,48
    1a8c:	fca42e23          	sw	a0,-36(s0)
    1a90:	00058793          	mv	a5,a1
    1a94:	fcf40da3          	sb	a5,-37(s0)
#     if (end_ == sizeof(line_) - 1) {
    1a98:	fdc42783          	lw	a5,-36(s0)
    1a9c:	0517c703          	lbu	a4,81(a5)
    1aa0:	04f00793          	li	a5,79
    1aa4:	00f71663          	bne	a4,a5,1ab0 <_ZN14command_buffer6insertEc+0x30>
#       return false;
    1aa8:	00000793          	li	a5,0
    1aac:	1100006f          	j	1bbc <_ZN14command_buffer6insertEc+0x13c>
#     if (cursor_ == end_) {
    1ab0:	fdc42783          	lw	a5,-36(s0)
    1ab4:	0507c703          	lbu	a4,80(a5)
    1ab8:	fdc42783          	lw	a5,-36(s0)
    1abc:	0517c783          	lbu	a5,81(a5)
    1ac0:	04f71c63          	bne	a4,a5,1b18 <_ZN14command_buffer6insertEc+0x98>
#       line_[cursor_] = ch;
    1ac4:	fdc42783          	lw	a5,-36(s0)
    1ac8:	0507c783          	lbu	a5,80(a5)
    1acc:	00078713          	mv	a4,a5
    1ad0:	fdc42783          	lw	a5,-36(s0)
    1ad4:	00e787b3          	add	a5,a5,a4
    1ad8:	fdb44703          	lbu	a4,-37(s0)
    1adc:	00e78023          	sb	a4,0(a5)
#       ++cursor_;
    1ae0:	fdc42783          	lw	a5,-36(s0)
    1ae4:	0507c783          	lbu	a5,80(a5)
    1ae8:	00178793          	add	a5,a5,1
    1aec:	0ff7f713          	zext.b	a4,a5
    1af0:	fdc42783          	lw	a5,-36(s0)
    1af4:	04e78823          	sb	a4,80(a5)
#       ++end_;
    1af8:	fdc42783          	lw	a5,-36(s0)
    1afc:	0517c783          	lbu	a5,81(a5)
    1b00:	00178793          	add	a5,a5,1
    1b04:	0ff7f713          	zext.b	a4,a5
    1b08:	fdc42783          	lw	a5,-36(s0)
    1b0c:	04e788a3          	sb	a4,81(a5)
#       return true;
    1b10:	00100793          	li	a5,1
    1b14:	0a80006f          	j	1bbc <_ZN14command_buffer6insertEc+0x13c>
#     ++end_;
    1b18:	fdc42783          	lw	a5,-36(s0)
    1b1c:	0517c783          	lbu	a5,81(a5)
    1b20:	00178793          	add	a5,a5,1
    1b24:	0ff7f713          	zext.b	a4,a5
    1b28:	fdc42783          	lw	a5,-36(s0)
    1b2c:	04e788a3          	sb	a4,81(a5)
#     for (size_t i = end_; i > cursor_; --i) {
    1b30:	fdc42783          	lw	a5,-36(s0)
    1b34:	0517c783          	lbu	a5,81(a5)
    1b38:	fef42623          	sw	a5,-20(s0)
    1b3c:	0340006f          	j	1b70 <_ZN14command_buffer6insertEc+0xf0>
#       line_[i] = line_[i - 1];
    1b40:	fec42783          	lw	a5,-20(s0)
    1b44:	fff78793          	add	a5,a5,-1
    1b48:	fdc42703          	lw	a4,-36(s0)
    1b4c:	00f707b3          	add	a5,a4,a5
    1b50:	0007c703          	lbu	a4,0(a5)
    1b54:	fdc42683          	lw	a3,-36(s0)
    1b58:	fec42783          	lw	a5,-20(s0)
    1b5c:	00f687b3          	add	a5,a3,a5
    1b60:	00e78023          	sb	a4,0(a5)
#     for (size_t i = end_; i > cursor_; --i) {
    1b64:	fec42783          	lw	a5,-20(s0)
    1b68:	fff78793          	add	a5,a5,-1
    1b6c:	fef42623          	sw	a5,-20(s0)
    1b70:	fdc42783          	lw	a5,-36(s0)
    1b74:	0507c783          	lbu	a5,80(a5)
    1b78:	00078713          	mv	a4,a5
    1b7c:	fec42783          	lw	a5,-20(s0)
    1b80:	fcf760e3          	bltu	a4,a5,1b40 <_ZN14command_buffer6insertEc+0xc0>
#     line_[cursor_] = ch;
    1b84:	fdc42783          	lw	a5,-36(s0)
    1b88:	0507c783          	lbu	a5,80(a5)
    1b8c:	00078713          	mv	a4,a5
    1b90:	fdc42783          	lw	a5,-36(s0)
    1b94:	00e787b3          	add	a5,a5,a4
    1b98:	fdb44703          	lbu	a4,-37(s0)
    1b9c:	00e78023          	sb	a4,0(a5)
#     ++cursor_;
    1ba0:	fdc42783          	lw	a5,-36(s0)
    1ba4:	0507c783          	lbu	a5,80(a5)
    1ba8:	00178793          	add	a5,a5,1
    1bac:	0ff7f713          	zext.b	a4,a5
    1bb0:	fdc42783          	lw	a5,-36(s0)
    1bb4:	04e78823          	sb	a4,80(a5)
#     return true;
    1bb8:	00100793          	li	a5,1
#   }
    1bbc:	00078513          	mv	a0,a5
    1bc0:	02c12403          	lw	s0,44(sp)
    1bc4:	03010113          	add	sp,sp,48
    1bc8:	00008067          	ret

00001bcc <_ZN14command_buffer9backspaceEv>:
#   auto backspace() -> bool {
    1bcc:	fd010113          	add	sp,sp,-48
    1bd0:	02812623          	sw	s0,44(sp)
    1bd4:	03010413          	add	s0,sp,48
    1bd8:	fca42e23          	sw	a0,-36(s0)
#     if (cursor_ == 0) {
    1bdc:	fdc42783          	lw	a5,-36(s0)
    1be0:	0507c783          	lbu	a5,80(a5)
    1be4:	00079663          	bnez	a5,1bf0 <_ZN14command_buffer9backspaceEv+0x24>
#       return false;
    1be8:	00000793          	li	a5,0
    1bec:	0dc0006f          	j	1cc8 <_ZN14command_buffer9backspaceEv+0xfc>
#     if (cursor_ == end_) {
    1bf0:	fdc42783          	lw	a5,-36(s0)
    1bf4:	0507c703          	lbu	a4,80(a5)
    1bf8:	fdc42783          	lw	a5,-36(s0)
    1bfc:	0517c783          	lbu	a5,81(a5)
    1c00:	02f71e63          	bne	a4,a5,1c3c <_ZN14command_buffer9backspaceEv+0x70>
#       --end_;
    1c04:	fdc42783          	lw	a5,-36(s0)
    1c08:	0517c783          	lbu	a5,81(a5)
    1c0c:	fff78793          	add	a5,a5,-1
    1c10:	0ff7f713          	zext.b	a4,a5
    1c14:	fdc42783          	lw	a5,-36(s0)
    1c18:	04e788a3          	sb	a4,81(a5)
#       --cursor_;
    1c1c:	fdc42783          	lw	a5,-36(s0)
    1c20:	0507c783          	lbu	a5,80(a5)
    1c24:	fff78793          	add	a5,a5,-1
    1c28:	0ff7f713          	zext.b	a4,a5
    1c2c:	fdc42783          	lw	a5,-36(s0)
    1c30:	04e78823          	sb	a4,80(a5)
#       return true;
    1c34:	00100793          	li	a5,1
    1c38:	0900006f          	j	1cc8 <_ZN14command_buffer9backspaceEv+0xfc>
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
    1c3c:	fdc42783          	lw	a5,-36(s0)
    1c40:	0507c783          	lbu	a5,80(a5)
    1c44:	fff78793          	add	a5,a5,-1
    1c48:	fef42623          	sw	a5,-20(s0)
    1c4c:	0340006f          	j	1c80 <_ZN14command_buffer9backspaceEv+0xb4>
#       line_[i] = line_[i + 1];
    1c50:	fec42783          	lw	a5,-20(s0)
    1c54:	00178793          	add	a5,a5,1
    1c58:	fdc42703          	lw	a4,-36(s0)
    1c5c:	00f707b3          	add	a5,a4,a5
    1c60:	0007c703          	lbu	a4,0(a5)
    1c64:	fdc42683          	lw	a3,-36(s0)
    1c68:	fec42783          	lw	a5,-20(s0)
    1c6c:	00f687b3          	add	a5,a3,a5
    1c70:	00e78023          	sb	a4,0(a5)
#     for (size_t i = cursor_ - 1; i < end_; ++i) {
    1c74:	fec42783          	lw	a5,-20(s0)
    1c78:	00178793          	add	a5,a5,1
    1c7c:	fef42623          	sw	a5,-20(s0)
    1c80:	fdc42783          	lw	a5,-36(s0)
    1c84:	0517c783          	lbu	a5,81(a5)
    1c88:	00078713          	mv	a4,a5
    1c8c:	fec42783          	lw	a5,-20(s0)
    1c90:	fce7e0e3          	bltu	a5,a4,1c50 <_ZN14command_buffer9backspaceEv+0x84>
#     --cursor_;
    1c94:	fdc42783          	lw	a5,-36(s0)
    1c98:	0507c783          	lbu	a5,80(a5)
    1c9c:	fff78793          	add	a5,a5,-1
    1ca0:	0ff7f713          	zext.b	a4,a5
    1ca4:	fdc42783          	lw	a5,-36(s0)
    1ca8:	04e78823          	sb	a4,80(a5)
#     --end_;
    1cac:	fdc42783          	lw	a5,-36(s0)
    1cb0:	0517c783          	lbu	a5,81(a5)
    1cb4:	fff78793          	add	a5,a5,-1
    1cb8:	0ff7f713          	zext.b	a4,a5
    1cbc:	fdc42783          	lw	a5,-36(s0)
    1cc0:	04e788a3          	sb	a4,81(a5)
#     return true;
    1cc4:	00100793          	li	a5,1
#   }
    1cc8:	00078513          	mv	a0,a5
    1ccc:	02c12403          	lw	s0,44(sp)
    1cd0:	03010113          	add	sp,sp,48
    1cd4:	00008067          	ret

00001cd8 <_ZN14command_buffer3delEv>:
#   auto del() -> void {
    1cd8:	fd010113          	add	sp,sp,-48
    1cdc:	02812623          	sw	s0,44(sp)
    1ce0:	03010413          	add	s0,sp,48
    1ce4:	fca42e23          	sw	a0,-36(s0)
#     if (cursor_ == end_) {
    1ce8:	fdc42783          	lw	a5,-36(s0)
    1cec:	0507c703          	lbu	a4,80(a5)
    1cf0:	fdc42783          	lw	a5,-36(s0)
    1cf4:	0517c783          	lbu	a5,81(a5)
    1cf8:	06f70c63          	beq	a4,a5,1d70 <_ZN14command_buffer3delEv+0x98>
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1cfc:	fdc42783          	lw	a5,-36(s0)
    1d00:	0507c783          	lbu	a5,80(a5)
    1d04:	00178793          	add	a5,a5,1
    1d08:	fef42623          	sw	a5,-20(s0)
    1d0c:	0340006f          	j	1d40 <_ZN14command_buffer3delEv+0x68>
#       line_[i - 1] = line_[i];
    1d10:	fec42783          	lw	a5,-20(s0)
    1d14:	fff78793          	add	a5,a5,-1
    1d18:	fdc42683          	lw	a3,-36(s0)
    1d1c:	fec42703          	lw	a4,-20(s0)
    1d20:	00e68733          	add	a4,a3,a4
    1d24:	00074703          	lbu	a4,0(a4)
    1d28:	fdc42683          	lw	a3,-36(s0)
    1d2c:	00f687b3          	add	a5,a3,a5
    1d30:	00e78023          	sb	a4,0(a5)
#     for (size_t i = cursor_ + 1; i < end_; ++i) {
    1d34:	fec42783          	lw	a5,-20(s0)
    1d38:	00178793          	add	a5,a5,1
    1d3c:	fef42623          	sw	a5,-20(s0)
    1d40:	fdc42783          	lw	a5,-36(s0)
    1d44:	0517c783          	lbu	a5,81(a5)
    1d48:	00078713          	mv	a4,a5
    1d4c:	fec42783          	lw	a5,-20(s0)
    1d50:	fce7e0e3          	bltu	a5,a4,1d10 <_ZN14command_buffer3delEv+0x38>
#     --end_;
    1d54:	fdc42783          	lw	a5,-36(s0)
    1d58:	0517c783          	lbu	a5,81(a5)
    1d5c:	fff78793          	add	a5,a5,-1
    1d60:	0ff7f713          	zext.b	a4,a5
    1d64:	fdc42783          	lw	a5,-36(s0)
    1d68:	04e788a3          	sb	a4,81(a5)
    1d6c:	0080006f          	j	1d74 <_ZN14command_buffer3delEv+0x9c>
#       return;
    1d70:	00000013          	nop
#   }
    1d74:	02c12403          	lw	s0,44(sp)
    1d78:	03010113          	add	sp,sp,48
    1d7c:	00008067          	ret

00001d80 <_ZN14command_buffer5resetEv>:
#   auto reset() -> void { cursor_ = end_ = 0; }
    1d80:	fe010113          	add	sp,sp,-32
    1d84:	00812e23          	sw	s0,28(sp)
    1d88:	02010413          	add	s0,sp,32
    1d8c:	fea42623          	sw	a0,-20(s0)
    1d90:	fec42783          	lw	a5,-20(s0)
    1d94:	040788a3          	sb	zero,81(a5)
    1d98:	fec42783          	lw	a5,-20(s0)
    1d9c:	0517c703          	lbu	a4,81(a5)
    1da0:	fec42783          	lw	a5,-20(s0)
    1da4:	04e78823          	sb	a4,80(a5)
    1da8:	00000013          	nop
    1dac:	01c12403          	lw	s0,28(sp)
    1db0:	02010113          	add	sp,sp,32
    1db4:	00008067          	ret

00001db8 <_ZN14command_buffer7set_eosEv>:
#   auto set_eos() -> void { line_[end_] = '\0'; }
    1db8:	fe010113          	add	sp,sp,-32
    1dbc:	00812e23          	sw	s0,28(sp)
    1dc0:	02010413          	add	s0,sp,32
    1dc4:	fea42623          	sw	a0,-20(s0)
    1dc8:	fec42783          	lw	a5,-20(s0)
    1dcc:	0517c783          	lbu	a5,81(a5)
    1dd0:	00078713          	mv	a4,a5
    1dd4:	fec42783          	lw	a5,-20(s0)
    1dd8:	00e787b3          	add	a5,a5,a4
    1ddc:	00078023          	sb	zero,0(a5)
    1de0:	00000013          	nop
    1de4:	01c12403          	lw	s0,28(sp)
    1de8:	02010113          	add	sp,sp,32
    1dec:	00008067          	ret

00001df0 <_ZN14command_buffer7is_fullEv>:
#   auto is_full() -> bool { return end_ == sizeof(line_) - 1; }
    1df0:	fe010113          	add	sp,sp,-32
    1df4:	00812e23          	sw	s0,28(sp)
    1df8:	02010413          	add	s0,sp,32
    1dfc:	fea42623          	sw	a0,-20(s0)
    1e00:	fec42783          	lw	a5,-20(s0)
    1e04:	0517c783          	lbu	a5,81(a5)
    1e08:	fb178793          	add	a5,a5,-79
    1e0c:	0017b793          	seqz	a5,a5
    1e10:	0ff7f793          	zext.b	a5,a5
    1e14:	00078513          	mv	a0,a5
    1e18:	01c12403          	lw	s0,28(sp)
    1e1c:	02010113          	add	sp,sp,32
    1e20:	00008067          	ret

00001e24 <_ZN14command_buffer16move_cursor_leftEv>:
#   auto move_cursor_left() -> bool {
    1e24:	fe010113          	add	sp,sp,-32
    1e28:	00812e23          	sw	s0,28(sp)
    1e2c:	02010413          	add	s0,sp,32
    1e30:	fea42623          	sw	a0,-20(s0)
#     if (cursor_ == 0) {
    1e34:	fec42783          	lw	a5,-20(s0)
    1e38:	0507c783          	lbu	a5,80(a5)
    1e3c:	00079663          	bnez	a5,1e48 <_ZN14command_buffer16move_cursor_leftEv+0x24>
#       return false;
    1e40:	00000793          	li	a5,0
    1e44:	0200006f          	j	1e64 <_ZN14command_buffer16move_cursor_leftEv+0x40>
#     --cursor_;
    1e48:	fec42783          	lw	a5,-20(s0)
    1e4c:	0507c783          	lbu	a5,80(a5)
    1e50:	fff78793          	add	a5,a5,-1
    1e54:	0ff7f713          	zext.b	a4,a5
    1e58:	fec42783          	lw	a5,-20(s0)
    1e5c:	04e78823          	sb	a4,80(a5)
#     return true;
    1e60:	00100793          	li	a5,1
#   }
    1e64:	00078513          	mv	a0,a5
    1e68:	01c12403          	lw	s0,28(sp)
    1e6c:	02010113          	add	sp,sp,32
    1e70:	00008067          	ret

00001e74 <_ZN14command_buffer17move_cursor_rightEv>:
#   auto move_cursor_right() -> bool {
    1e74:	fe010113          	add	sp,sp,-32
    1e78:	00812e23          	sw	s0,28(sp)
    1e7c:	02010413          	add	s0,sp,32
    1e80:	fea42623          	sw	a0,-20(s0)
#     if (cursor_ == end_) {
    1e84:	fec42783          	lw	a5,-20(s0)
    1e88:	0507c703          	lbu	a4,80(a5)
    1e8c:	fec42783          	lw	a5,-20(s0)
    1e90:	0517c783          	lbu	a5,81(a5)
    1e94:	00f71663          	bne	a4,a5,1ea0 <_ZN14command_buffer17move_cursor_rightEv+0x2c>
#       return false;
    1e98:	00000793          	li	a5,0
    1e9c:	0200006f          	j	1ebc <_ZN14command_buffer17move_cursor_rightEv+0x48>
#     ++cursor_;
    1ea0:	fec42783          	lw	a5,-20(s0)
    1ea4:	0507c783          	lbu	a5,80(a5)
    1ea8:	00178793          	add	a5,a5,1
    1eac:	0ff7f713          	zext.b	a4,a5
    1eb0:	fec42783          	lw	a5,-20(s0)
    1eb4:	04e78823          	sb	a4,80(a5)
#     return true;
    1eb8:	00100793          	li	a5,1
#   }
    1ebc:	00078513          	mv	a0,a5
    1ec0:	01c12403          	lw	s0,28(sp)
    1ec4:	02010113          	add	sp,sp,32
    1ec8:	00008067          	ret

00001ecc <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE>:
#   auto apply_on_chars_from_cursor_to_end(void (*f)(char)) -> void {
    1ecc:	fd010113          	add	sp,sp,-48
    1ed0:	02112623          	sw	ra,44(sp)
    1ed4:	02812423          	sw	s0,40(sp)
    1ed8:	03010413          	add	s0,sp,48
    1edc:	fca42e23          	sw	a0,-36(s0)
    1ee0:	fcb42c23          	sw	a1,-40(s0)
#     for (size_t i = cursor_; i < end_; ++i) {
    1ee4:	fdc42783          	lw	a5,-36(s0)
    1ee8:	0507c783          	lbu	a5,80(a5)
    1eec:	fef42623          	sw	a5,-20(s0)
    1ef0:	02c0006f          	j	1f1c <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE+0x50>
#       f(line_[i]);
    1ef4:	fd842783          	lw	a5,-40(s0)
    1ef8:	fdc42683          	lw	a3,-36(s0)
    1efc:	fec42703          	lw	a4,-20(s0)
    1f00:	00e68733          	add	a4,a3,a4
    1f04:	00074703          	lbu	a4,0(a4)
    1f08:	00070513          	mv	a0,a4
    1f0c:	000780e7          	jalr	a5
#     for (size_t i = cursor_; i < end_; ++i) {
    1f10:	fec42783          	lw	a5,-20(s0)
    1f14:	00178793          	add	a5,a5,1
    1f18:	fef42623          	sw	a5,-20(s0)
    1f1c:	fdc42783          	lw	a5,-36(s0)
    1f20:	0517c783          	lbu	a5,81(a5)
    1f24:	00078713          	mv	a4,a5
    1f28:	fec42783          	lw	a5,-20(s0)
    1f2c:	fce7e4e3          	bltu	a5,a4,1ef4 <_ZN14command_buffer33apply_on_chars_from_cursor_to_endEPFvcE+0x28>
#   }
    1f30:	00000013          	nop
    1f34:	00000013          	nop
    1f38:	02c12083          	lw	ra,44(sp)
    1f3c:	02812403          	lw	s0,40(sp)
    1f40:	03010113          	add	sp,sp,48
    1f44:	00008067          	ret

00001f48 <_ZN14command_buffer23characters_after_cursorEv>:
#   auto characters_after_cursor() -> size_t { return end_ - cursor_; }
    1f48:	fe010113          	add	sp,sp,-32
    1f4c:	00812e23          	sw	s0,28(sp)
    1f50:	02010413          	add	s0,sp,32
    1f54:	fea42623          	sw	a0,-20(s0)
    1f58:	fec42783          	lw	a5,-20(s0)
    1f5c:	0517c783          	lbu	a5,81(a5)
    1f60:	00078713          	mv	a4,a5
    1f64:	fec42783          	lw	a5,-20(s0)
    1f68:	0507c783          	lbu	a5,80(a5)
    1f6c:	40f707b3          	sub	a5,a4,a5
    1f70:	00078513          	mv	a0,a5
    1f74:	01c12403          	lw	s0,28(sp)
    1f78:	02010113          	add	sp,sp,32
    1f7c:	00008067          	ret

00001f80 <_ZN14command_buffer12command_lineEv>:
#   auto command_line() -> char * { return line_; }
    1f80:	fe010113          	add	sp,sp,-32
    1f84:	00812e23          	sw	s0,28(sp)
    1f88:	02010413          	add	s0,sp,32
    1f8c:	fea42623          	sw	a0,-20(s0)
    1f90:	fec42783          	lw	a5,-20(s0)
    1f94:	00078513          	mv	a0,a5
    1f98:	01c12403          	lw	s0,28(sp)
    1f9c:	02010113          	add	sp,sp,32
    1fa0:	00008067          	ret

00001fa4 <_ZN14command_buffer12input_lengthEv>:
#   auto input_length() -> size_t { return end_; }
    1fa4:	fe010113          	add	sp,sp,-32
    1fa8:	00812e23          	sw	s0,28(sp)
    1fac:	02010413          	add	s0,sp,32
    1fb0:	fea42623          	sw	a0,-20(s0)
    1fb4:	fec42783          	lw	a5,-20(s0)
    1fb8:	0517c783          	lbu	a5,81(a5)
    1fbc:	00078513          	mv	a0,a5
    1fc0:	01c12403          	lw	s0,28(sp)
    1fc4:	02010113          	add	sp,sp,32
    1fc8:	00008067          	ret

00001fcc <_ZN4listIhLi128EE2atEj>:
#   auto at(size_t const i) -> Type {
    1fcc:	fe010113          	add	sp,sp,-32
    1fd0:	00812e23          	sw	s0,28(sp)
    1fd4:	02010413          	add	s0,sp,32
    1fd8:	fea42623          	sw	a0,-20(s0)
    1fdc:	feb42423          	sw	a1,-24(s0)
#     if (i > Size - 1) {
    1fe0:	fe842703          	lw	a4,-24(s0)
    1fe4:	07f00793          	li	a5,127
    1fe8:	00e7f663          	bgeu	a5,a4,1ff4 <_ZN4listIhLi128EE2atEj+0x28>
#       return {};
    1fec:	00000793          	li	a5,0
    1ff0:	0140006f          	j	2004 <_ZN4listIhLi128EE2atEj+0x38>
#     return data[i];
    1ff4:	fec42703          	lw	a4,-20(s0)
    1ff8:	fe842783          	lw	a5,-24(s0)
    1ffc:	00f707b3          	add	a5,a4,a5
    2000:	0007c783          	lbu	a5,0(a5)
#   }
    2004:	00078513          	mv	a0,a5
    2008:	01c12403          	lw	s0,28(sp)
    200c:	02010113          	add	sp,sp,32
    2010:	00008067          	ret

00002014 <_ZN4listIhLi8EE2atEj>:
#   auto at(size_t const i) -> Type {
    2014:	fe010113          	add	sp,sp,-32
    2018:	00812e23          	sw	s0,28(sp)
    201c:	02010413          	add	s0,sp,32
    2020:	fea42623          	sw	a0,-20(s0)
    2024:	feb42423          	sw	a1,-24(s0)
#     if (i > Size - 1) {
    2028:	fe842703          	lw	a4,-24(s0)
    202c:	00700793          	li	a5,7
    2030:	00e7f663          	bgeu	a5,a4,203c <_ZN4listIhLi8EE2atEj+0x28>
#       return {};
    2034:	00000793          	li	a5,0
    2038:	0140006f          	j	204c <_ZN4listIhLi8EE2atEj+0x38>
#     return data[i];
    203c:	fec42703          	lw	a4,-20(s0)
    2040:	fe842783          	lw	a5,-24(s0)
    2044:	00f707b3          	add	a5,a4,a5
    2048:	0007c783          	lbu	a5,0(a5)
#   }
    204c:	00078513          	mv	a0,a5
    2050:	01c12403          	lw	s0,28(sp)
    2054:	02010113          	add	sp,sp,32
    2058:	00008067          	ret

0000205c <_ZN4listIhLi6EE2atEj>:
#   auto at(size_t const i) -> Type {
    205c:	fe010113          	add	sp,sp,-32
    2060:	00812e23          	sw	s0,28(sp)
    2064:	02010413          	add	s0,sp,32
    2068:	fea42623          	sw	a0,-20(s0)
    206c:	feb42423          	sw	a1,-24(s0)
#     if (i > Size - 1) {
    2070:	fe842703          	lw	a4,-24(s0)
    2074:	00500793          	li	a5,5
    2078:	00e7f663          	bgeu	a5,a4,2084 <_ZN4listIhLi6EE2atEj+0x28>
#       return {};
    207c:	00000793          	li	a5,0
    2080:	0140006f          	j	2094 <_ZN4listIhLi6EE2atEj+0x38>
#     return data[i];
    2084:	fec42703          	lw	a4,-20(s0)
    2088:	fe842783          	lw	a5,-24(s0)
    208c:	00f707b3          	add	a5,a4,a5
    2090:	0007c783          	lbu	a5,0(a5)
#   }
    2094:	00078513          	mv	a0,a5
    2098:	01c12403          	lw	s0,28(sp)
    209c:	02010113          	add	sp,sp,32
    20a0:	00008067          	ret

000020a4 <_ZN4listIhLi32EE2atEj>:
#   auto at(size_t const i) -> Type {
    20a4:	fe010113          	add	sp,sp,-32
    20a8:	00812e23          	sw	s0,28(sp)
    20ac:	02010413          	add	s0,sp,32
    20b0:	fea42623          	sw	a0,-20(s0)
    20b4:	feb42423          	sw	a1,-24(s0)
#     if (i > Size - 1) {
    20b8:	fe842703          	lw	a4,-24(s0)
    20bc:	01f00793          	li	a5,31
    20c0:	00e7f663          	bgeu	a5,a4,20cc <_ZN4listIhLi32EE2atEj+0x28>
#       return {};
    20c4:	00000793          	li	a5,0
    20c8:	0140006f          	j	20dc <_ZN4listIhLi32EE2atEj+0x38>
#     return data[i];
    20cc:	fec42703          	lw	a4,-20(s0)
    20d0:	fe842783          	lw	a5,-24(s0)
    20d4:	00f707b3          	add	a5,a4,a5
    20d8:	0007c783          	lbu	a5,0(a5)
#   }
    20dc:	00078513          	mv	a0,a5
    20e0:	01c12403          	lw	s0,28(sp)
    20e4:	02010113          	add	sp,sp,32
    20e8:	00008067          	ret

000020ec <_ZN4listIhLi32EE3addEh>:
#   auto add(Type elem) -> bool {
    20ec:	fe010113          	add	sp,sp,-32
    20f0:	00812e23          	sw	s0,28(sp)
    20f4:	02010413          	add	s0,sp,32
    20f8:	fea42623          	sw	a0,-20(s0)
    20fc:	00058793          	mv	a5,a1
    2100:	fef405a3          	sb	a5,-21(s0)
#     if (len == Size - 1) {
    2104:	fec42783          	lw	a5,-20(s0)
    2108:	0207a703          	lw	a4,32(a5)
    210c:	01f00793          	li	a5,31
    2110:	00f71663          	bne	a4,a5,211c <_ZN4listIhLi32EE3addEh+0x30>
#       return false;
    2114:	00000793          	li	a5,0
    2118:	0480006f          	j	2160 <_ZN4listIhLi32EE3addEh+0x74>
#     data[len] = elem;
    211c:	fec42783          	lw	a5,-20(s0)
    2120:	0207a783          	lw	a5,32(a5)
    2124:	fec42703          	lw	a4,-20(s0)
    2128:	00f707b3          	add	a5,a4,a5
    212c:	feb44703          	lbu	a4,-21(s0)
    2130:	00e78023          	sb	a4,0(a5)
#     ++len;
    2134:	fec42783          	lw	a5,-20(s0)
    2138:	0207a783          	lw	a5,32(a5)
    213c:	00178713          	add	a4,a5,1
    2140:	fec42783          	lw	a5,-20(s0)
    2144:	02e7a023          	sw	a4,32(a5)
#     data[len] = {};
    2148:	fec42783          	lw	a5,-20(s0)
    214c:	0207a783          	lw	a5,32(a5)
    2150:	fec42703          	lw	a4,-20(s0)
    2154:	00f707b3          	add	a5,a4,a5
    2158:	00078023          	sb	zero,0(a5)
#     return true;
    215c:	00100793          	li	a5,1
#   }
    2160:	00078513          	mv	a0,a5
    2164:	01c12403          	lw	s0,28(sp)
    2168:	02010113          	add	sp,sp,32
    216c:	00008067          	ret

00002170 <_ZN4listIhLi128EE15remove_by_indexEj>:
#   auto remove_by_index(size_t i) -> void {
    2170:	fe010113          	add	sp,sp,-32
    2174:	00812e23          	sw	s0,28(sp)
    2178:	02010413          	add	s0,sp,32
    217c:	fea42623          	sw	a0,-20(s0)
    2180:	feb42423          	sw	a1,-24(s0)
#       data[i] = data[i + 1];
    2184:	fe842783          	lw	a5,-24(s0)
    2188:	00178793          	add	a5,a5,1
    218c:	fec42703          	lw	a4,-20(s0)
    2190:	00f707b3          	add	a5,a4,a5
    2194:	0007c703          	lbu	a4,0(a5)
    2198:	fec42683          	lw	a3,-20(s0)
    219c:	fe842783          	lw	a5,-24(s0)
    21a0:	00f687b3          	add	a5,a3,a5
    21a4:	00e78023          	sb	a4,0(a5)
#       if (data[i] == Type{}) {
    21a8:	fec42703          	lw	a4,-20(s0)
    21ac:	fe842783          	lw	a5,-24(s0)
    21b0:	00f707b3          	add	a5,a4,a5
    21b4:	0007c783          	lbu	a5,0(a5)
    21b8:	00079a63          	bnez	a5,21cc <_ZN4listIhLi128EE15remove_by_indexEj+0x5c>
#         len = i;
    21bc:	fec42783          	lw	a5,-20(s0)
    21c0:	fe842703          	lw	a4,-24(s0)
    21c4:	08e7a023          	sw	a4,128(a5)
#         return;
    21c8:	0140006f          	j	21dc <_ZN4listIhLi128EE15remove_by_indexEj+0x6c>
#       ++i;
    21cc:	fe842783          	lw	a5,-24(s0)
    21d0:	00178793          	add	a5,a5,1
    21d4:	fef42423          	sw	a5,-24(s0)
#       data[i] = data[i + 1];
    21d8:	fadff06f          	j	2184 <_ZN4listIhLi128EE15remove_by_indexEj+0x14>
#   }
    21dc:	01c12403          	lw	s0,28(sp)
    21e0:	02010113          	add	sp,sp,32
    21e4:	00008067          	ret

000021e8 <_ZN4listIhLi128EE3addEh>:
#   auto add(Type elem) -> bool {
    21e8:	fe010113          	add	sp,sp,-32
    21ec:	00812e23          	sw	s0,28(sp)
    21f0:	02010413          	add	s0,sp,32
    21f4:	fea42623          	sw	a0,-20(s0)
    21f8:	00058793          	mv	a5,a1
    21fc:	fef405a3          	sb	a5,-21(s0)
#     if (len == Size - 1) {
    2200:	fec42783          	lw	a5,-20(s0)
    2204:	0807a703          	lw	a4,128(a5)
    2208:	07f00793          	li	a5,127
    220c:	00f71663          	bne	a4,a5,2218 <_ZN4listIhLi128EE3addEh+0x30>
#       return false;
    2210:	00000793          	li	a5,0
    2214:	0480006f          	j	225c <_ZN4listIhLi128EE3addEh+0x74>
#     data[len] = elem;
    2218:	fec42783          	lw	a5,-20(s0)
    221c:	0807a783          	lw	a5,128(a5)
    2220:	fec42703          	lw	a4,-20(s0)
    2224:	00f707b3          	add	a5,a4,a5
    2228:	feb44703          	lbu	a4,-21(s0)
    222c:	00e78023          	sb	a4,0(a5)
#     ++len;
    2230:	fec42783          	lw	a5,-20(s0)
    2234:	0807a783          	lw	a5,128(a5)
    2238:	00178713          	add	a4,a5,1
    223c:	fec42783          	lw	a5,-20(s0)
    2240:	08e7a023          	sw	a4,128(a5)
#     data[len] = {};
    2244:	fec42783          	lw	a5,-20(s0)
    2248:	0807a783          	lw	a5,128(a5)
    224c:	fec42703          	lw	a4,-20(s0)
    2250:	00f707b3          	add	a5,a4,a5
    2254:	00078023          	sb	zero,0(a5)
#     return true;
    2258:	00100793          	li	a5,1
#   }
    225c:	00078513          	mv	a0,a5
    2260:	01c12403          	lw	s0,28(sp)
    2264:	02010113          	add	sp,sp,32
    2268:	00008067          	ret

0000226c <_ZN4listIhLi32EE15remove_by_indexEj>:
#   auto remove_by_index(size_t i) -> void {
    226c:	fe010113          	add	sp,sp,-32
    2270:	00812e23          	sw	s0,28(sp)
    2274:	02010413          	add	s0,sp,32
    2278:	fea42623          	sw	a0,-20(s0)
    227c:	feb42423          	sw	a1,-24(s0)
#       data[i] = data[i + 1];
    2280:	fe842783          	lw	a5,-24(s0)
    2284:	00178793          	add	a5,a5,1
    2288:	fec42703          	lw	a4,-20(s0)
    228c:	00f707b3          	add	a5,a4,a5
    2290:	0007c703          	lbu	a4,0(a5)
    2294:	fec42683          	lw	a3,-20(s0)
    2298:	fe842783          	lw	a5,-24(s0)
    229c:	00f687b3          	add	a5,a3,a5
    22a0:	00e78023          	sb	a4,0(a5)
#       if (data[i] == Type{}) {
    22a4:	fec42703          	lw	a4,-20(s0)
    22a8:	fe842783          	lw	a5,-24(s0)
    22ac:	00f707b3          	add	a5,a4,a5
    22b0:	0007c783          	lbu	a5,0(a5)
    22b4:	00079a63          	bnez	a5,22c8 <_ZN4listIhLi32EE15remove_by_indexEj+0x5c>
#         len = i;
    22b8:	fec42783          	lw	a5,-20(s0)
    22bc:	fe842703          	lw	a4,-24(s0)
    22c0:	02e7a023          	sw	a4,32(a5)
#         return;
    22c4:	0140006f          	j	22d8 <_ZN4listIhLi32EE15remove_by_indexEj+0x6c>
#       ++i;
    22c8:	fe842783          	lw	a5,-24(s0)
    22cc:	00178793          	add	a5,a5,1
    22d0:	fef42423          	sw	a5,-24(s0)
#       data[i] = data[i + 1];
    22d4:	fadff06f          	j	2280 <_ZN4listIhLi32EE15remove_by_indexEj+0x14>
#   }
    22d8:	01c12403          	lw	s0,28(sp)
    22dc:	02010113          	add	sp,sp,32
    22e0:	00008067          	ret

000022e4 <_ZN4listIhLi8EE3addEh>:
#   auto add(Type elem) -> bool {
    22e4:	fe010113          	add	sp,sp,-32
    22e8:	00812e23          	sw	s0,28(sp)
    22ec:	02010413          	add	s0,sp,32
    22f0:	fea42623          	sw	a0,-20(s0)
    22f4:	00058793          	mv	a5,a1
    22f8:	fef405a3          	sb	a5,-21(s0)
#     if (len == Size - 1) {
    22fc:	fec42783          	lw	a5,-20(s0)
    2300:	0087a703          	lw	a4,8(a5)
    2304:	00700793          	li	a5,7
    2308:	00f71663          	bne	a4,a5,2314 <_ZN4listIhLi8EE3addEh+0x30>
#       return false;
    230c:	00000793          	li	a5,0
    2310:	0480006f          	j	2358 <_ZN4listIhLi8EE3addEh+0x74>
#     data[len] = elem;
    2314:	fec42783          	lw	a5,-20(s0)
    2318:	0087a783          	lw	a5,8(a5)
    231c:	fec42703          	lw	a4,-20(s0)
    2320:	00f707b3          	add	a5,a4,a5
    2324:	feb44703          	lbu	a4,-21(s0)
    2328:	00e78023          	sb	a4,0(a5)
#     ++len;
    232c:	fec42783          	lw	a5,-20(s0)
    2330:	0087a783          	lw	a5,8(a5)
    2334:	00178713          	add	a4,a5,1
    2338:	fec42783          	lw	a5,-20(s0)
    233c:	00e7a423          	sw	a4,8(a5)
#     data[len] = {};
    2340:	fec42783          	lw	a5,-20(s0)
    2344:	0087a783          	lw	a5,8(a5)
    2348:	fec42703          	lw	a4,-20(s0)
    234c:	00f707b3          	add	a5,a4,a5
    2350:	00078023          	sb	zero,0(a5)
#     return true;
    2354:	00100793          	li	a5,1
#   }
    2358:	00078513          	mv	a0,a5
    235c:	01c12403          	lw	s0,28(sp)
    2360:	02010113          	add	sp,sp,32
    2364:	00008067          	ret

00002368 <_ZN4listIhLi8EE6removeEh>:
#   auto remove(Type elem) -> bool {
    2368:	fd010113          	add	sp,sp,-48
    236c:	02812623          	sw	s0,44(sp)
    2370:	03010413          	add	s0,sp,48
    2374:	fca42e23          	sw	a0,-36(s0)
    2378:	00058793          	mv	a5,a1
    237c:	fcf40da3          	sb	a5,-37(s0)
#     for (size_t i = 0; i < Size - 1; ++i) {
    2380:	fe042623          	sw	zero,-20(s0)
    2384:	0a00006f          	j	2424 <_ZN4listIhLi8EE6removeEh+0xbc>
#       if (data[i] != elem) {
    2388:	fdc42703          	lw	a4,-36(s0)
    238c:	fec42783          	lw	a5,-20(s0)
    2390:	00f707b3          	add	a5,a4,a5
    2394:	0007c783          	lbu	a5,0(a5)
    2398:	fdb44703          	lbu	a4,-37(s0)
    239c:	06f71c63          	bne	a4,a5,2414 <_ZN4listIhLi8EE6removeEh+0xac>
#       for (size_t j = i; j < Size - 1; ++j) {
    23a0:	fec42783          	lw	a5,-20(s0)
    23a4:	fef42423          	sw	a5,-24(s0)
    23a8:	05c0006f          	j	2404 <_ZN4listIhLi8EE6removeEh+0x9c>
#         data[j] = data[j + 1];
    23ac:	fe842783          	lw	a5,-24(s0)
    23b0:	00178793          	add	a5,a5,1
    23b4:	fdc42703          	lw	a4,-36(s0)
    23b8:	00f707b3          	add	a5,a4,a5
    23bc:	0007c703          	lbu	a4,0(a5)
    23c0:	fdc42683          	lw	a3,-36(s0)
    23c4:	fe842783          	lw	a5,-24(s0)
    23c8:	00f687b3          	add	a5,a3,a5
    23cc:	00e78023          	sb	a4,0(a5)
#         if (data[j] == Type{}) {
    23d0:	fdc42703          	lw	a4,-36(s0)
    23d4:	fe842783          	lw	a5,-24(s0)
    23d8:	00f707b3          	add	a5,a4,a5
    23dc:	0007c783          	lbu	a5,0(a5)
    23e0:	00079c63          	bnez	a5,23f8 <_ZN4listIhLi8EE6removeEh+0x90>
#           len = j;
    23e4:	fdc42783          	lw	a5,-36(s0)
    23e8:	fe842703          	lw	a4,-24(s0)
    23ec:	00e7a423          	sw	a4,8(a5)
#           return true;
    23f0:	00100793          	li	a5,1
    23f4:	0400006f          	j	2434 <_ZN4listIhLi8EE6removeEh+0xcc>
#       for (size_t j = i; j < Size - 1; ++j) {
    23f8:	fe842783          	lw	a5,-24(s0)
    23fc:	00178793          	add	a5,a5,1
    2400:	fef42423          	sw	a5,-24(s0)
    2404:	fe842703          	lw	a4,-24(s0)
    2408:	00600793          	li	a5,6
    240c:	fae7f0e3          	bgeu	a5,a4,23ac <_ZN4listIhLi8EE6removeEh+0x44>
    2410:	0080006f          	j	2418 <_ZN4listIhLi8EE6removeEh+0xb0>
#         continue;
    2414:	00000013          	nop
#     for (size_t i = 0; i < Size - 1; ++i) {
    2418:	fec42783          	lw	a5,-20(s0)
    241c:	00178793          	add	a5,a5,1
    2420:	fef42623          	sw	a5,-20(s0)
    2424:	fec42703          	lw	a4,-20(s0)
    2428:	00600793          	li	a5,6
    242c:	f4e7fee3          	bgeu	a5,a4,2388 <_ZN4listIhLi8EE6removeEh+0x20>
#     return false;
    2430:	00000793          	li	a5,0
#   }
    2434:	00078513          	mv	a0,a5
    2438:	02c12403          	lw	s0,44(sp)
    243c:	03010113          	add	sp,sp,48
    2440:	00008067          	ret
