
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# # generated - do not edit
# .global _start
# _start:
#     li sp, 0x10000
       0:	00010137          	lui	x2,0x10
#     jal ra, run
       4:	004000ef          	jal	x1,8 <run>

00000008 <run>:
# void action_mem_test();
# void input(input_buffer *buf);
# void handle_input(entity_id eid, input_buffer *buf);
# bool strings_equal(const char *s1, const char *s2);
# 
# void run() {
       8:	f9010113          	addi	x2,x2,-112 # ff90 <__global_pointer$+0xcdec>
       c:	06112623          	sw	x1,108(x2)
      10:	06812423          	sw	x8,104(x2)
      14:	07010413          	addi	x8,x2,112
#   unsigned char active_entity = 1;
      18:	00100793          	addi	x15,x0,1
      1c:	fef407a3          	sb	x15,-17(x8)
#   input_buffer inbuf;
#   inbuf.ix = 0;
      20:	fe040223          	sb	x0,-28(x8)
# 
#   uart_send_str(hello);
      24:	000037b7          	lui	x15,0x3
      28:	d287a783          	lw	x15,-728(x15) # 2d28 <hello>
      2c:	00078513          	addi	x10,x15,0
      30:	00001097          	auipc	x1,0x1
      34:	454080e7          	jalr	x1,1108(x1) # 1484 <uart_send_str>
# 
#   while (1) {
#     const entity *ent = &entities[active_entity];
      38:	fef44703          	lbu	x14,-17(x8)
      3c:	00070793          	addi	x15,x14,0
      40:	00279793          	slli	x15,x15,0x2
      44:	00e787b3          	add	x15,x15,x14
      48:	00379793          	slli	x15,x15,0x3
      4c:	00003737          	lui	x14,0x3
      50:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
      54:	00e787b3          	add	x15,x15,x14
      58:	fef42423          	sw	x15,-24(x8)
#     print_location(ent->location, active_entity);
      5c:	fe842783          	lw	x15,-24(x8)
      60:	0047c783          	lbu	x15,4(x15)
      64:	fef44703          	lbu	x14,-17(x8)
      68:	00070593          	addi	x11,x14,0
      6c:	00078513          	addi	x10,x15,0
      70:	00000097          	auipc	x1,0x0
      74:	418080e7          	jalr	x1,1048(x1) # 488 <print_location>
#     uart_send_str(ent->name);
      78:	fe842783          	lw	x15,-24(x8)
      7c:	0007a783          	lw	x15,0(x15)
      80:	00078513          	addi	x10,x15,0
      84:	00001097          	auipc	x1,0x1
      88:	400080e7          	jalr	x1,1024(x1) # 1484 <uart_send_str>
#     uart_send_str(" > ");
      8c:	000017b7          	lui	x15,0x1
      90:	6d078513          	addi	x10,x15,1744 # 16d0 <uart_read_char+0xe0>
      94:	00001097          	auipc	x1,0x1
      98:	3f0080e7          	jalr	x1,1008(x1) # 1484 <uart_send_str>
#     input(&inbuf);
      9c:	f9440793          	addi	x15,x8,-108
      a0:	00078513          	addi	x10,x15,0
      a4:	00001097          	auipc	x1,0x1
      a8:	24c080e7          	jalr	x1,588(x1) # 12f0 <input>
#     uart_send_str("\r\n");
      ac:	000017b7          	lui	x15,0x1
      b0:	6d478513          	addi	x10,x15,1748 # 16d4 <uart_read_char+0xe4>
      b4:	00001097          	auipc	x1,0x1
      b8:	3d0080e7          	jalr	x1,976(x1) # 1484 <uart_send_str>
#     handle_input(active_entity, &inbuf);
      bc:	f9440713          	addi	x14,x8,-108
      c0:	fef44783          	lbu	x15,-17(x8)
      c4:	00070593          	addi	x11,x14,0
      c8:	00078513          	addi	x10,x15,0
      cc:	00000097          	auipc	x1,0x0
      d0:	02c080e7          	jalr	x1,44(x1) # f8 <handle_input>
#     if (active_entity == 1)
      d4:	fef44703          	lbu	x14,-17(x8)
      d8:	00100793          	addi	x15,x0,1
      dc:	00f71863          	bne	x14,x15,ec <run+0xe4>
#       active_entity = 2;
      e0:	00200793          	addi	x15,x0,2
      e4:	fef407a3          	sb	x15,-17(x8)
      e8:	f51ff06f          	jal	x0,38 <run+0x30>
#     else
#       active_entity = 1;
      ec:	00100793          	addi	x15,x0,1
      f0:	fef407a3          	sb	x15,-17(x8)
#   while (1) {
      f4:	f45ff06f          	jal	x0,38 <run+0x30>

000000f8 <handle_input>:
#   }
# }
# 
# void handle_input(entity_id eid, input_buffer *buf) {
      f8:	fb010113          	addi	x2,x2,-80
      fc:	04112623          	sw	x1,76(x2)
     100:	04812423          	sw	x8,72(x2)
     104:	05010413          	addi	x8,x2,80
     108:	00050793          	addi	x15,x10,0
     10c:	fab42c23          	sw	x11,-72(x8)
     110:	faf40fa3          	sb	x15,-65(x8)
#   const char *words[8];
#   char *ptr = buf->line;
     114:	fb842783          	lw	x15,-72(x8)
     118:	fef42623          	sw	x15,-20(x8)
#   unsigned nwords = 0;
     11c:	fe042423          	sw	x0,-24(x8)
#   while (1) {
#     words[nwords++] = ptr;
     120:	fe842783          	lw	x15,-24(x8)
     124:	00178713          	addi	x14,x15,1
     128:	fee42423          	sw	x14,-24(x8)
     12c:	00279793          	slli	x15,x15,0x2
     130:	ff078793          	addi	x15,x15,-16
     134:	008787b3          	add	x15,x15,x8
     138:	fec42703          	lw	x14,-20(x8)
     13c:	fce7ac23          	sw	x14,-40(x15)
#     while (*ptr && *ptr != ' ') {
     140:	0100006f          	jal	x0,150 <handle_input+0x58>
#       ptr++;
     144:	fec42783          	lw	x15,-20(x8)
     148:	00178793          	addi	x15,x15,1
     14c:	fef42623          	sw	x15,-20(x8)
#     while (*ptr && *ptr != ' ') {
     150:	fec42783          	lw	x15,-20(x8)
     154:	0007c783          	lbu	x15,0(x15)
     158:	00078a63          	beq	x15,x0,16c <handle_input+0x74>
     15c:	fec42783          	lw	x15,-20(x8)
     160:	0007c703          	lbu	x14,0(x15)
     164:	02000793          	addi	x15,x0,32
     168:	fcf71ee3          	bne	x14,x15,144 <handle_input+0x4c>
#     }
#     if (!*ptr)
     16c:	fec42783          	lw	x15,-20(x8)
     170:	0007c783          	lbu	x15,0(x15)
     174:	02078c63          	beq	x15,x0,1ac <handle_input+0xb4>
#       break;
#     *ptr = 0;
     178:	fec42783          	lw	x15,-20(x8)
     17c:	00078023          	sb	x0,0(x15)
#     ptr++;
     180:	fec42783          	lw	x15,-20(x8)
     184:	00178793          	addi	x15,x15,1
     188:	fef42623          	sw	x15,-20(x8)
#     if (nwords == sizeof(words) / sizeof(const char *)) {
     18c:	fe842703          	lw	x14,-24(x8)
     190:	00800793          	addi	x15,x0,8
     194:	f8f716e3          	bne	x14,x15,120 <handle_input+0x28>
#       uart_send_str("too many words, some ignored\r\n\r\n");
     198:	000017b7          	lui	x15,0x1
     19c:	6d878513          	addi	x10,x15,1752 # 16d8 <uart_read_char+0xe8>
     1a0:	00001097          	auipc	x1,0x1
     1a4:	2e4080e7          	jalr	x1,740(x1) # 1484 <uart_send_str>
#       break;
     1a8:	0080006f          	jal	x0,1b0 <handle_input+0xb8>
#       break;
     1ac:	00000013          	addi	x0,x0,0
#   }
#   //  for (unsigned i = 0; i < nwords; i++) {
#   //    uart_send_str(words[i]);
#   //    uart_send_str("\r\n");
#   //  }
#   if (strings_equal(words[0], "help")) {
     1b0:	fc842703          	lw	x14,-56(x8)
     1b4:	000017b7          	lui	x15,0x1
     1b8:	6fc78593          	addi	x11,x15,1788 # 16fc <uart_read_char+0x10c>
     1bc:	00070513          	addi	x10,x14,0
     1c0:	00001097          	auipc	x1,0x1
     1c4:	248080e7          	jalr	x1,584(x1) # 1408 <strings_equal>
     1c8:	00050793          	addi	x15,x10,0
     1cc:	00078863          	beq	x15,x0,1dc <handle_input+0xe4>
#     print_help();
     1d0:	00001097          	auipc	x1,0x1
     1d4:	0ec080e7          	jalr	x1,236(x1) # 12bc <print_help>
     1d8:	2a00006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "i")) {
     1dc:	fc842703          	lw	x14,-56(x8)
     1e0:	000017b7          	lui	x15,0x1
     1e4:	70478593          	addi	x11,x15,1796 # 1704 <uart_read_char+0x114>
     1e8:	00070513          	addi	x10,x14,0
     1ec:	00001097          	auipc	x1,0x1
     1f0:	21c080e7          	jalr	x1,540(x1) # 1408 <strings_equal>
     1f4:	00050793          	addi	x15,x10,0
     1f8:	02078463          	beq	x15,x0,220 <handle_input+0x128>
#     action_inventory(eid);
     1fc:	fbf44783          	lbu	x15,-65(x8)
     200:	00078513          	addi	x10,x15,0
     204:	00000097          	auipc	x1,0x0
     208:	574080e7          	jalr	x1,1396(x1) # 778 <action_inventory>
#     uart_send_str("\r\n");
     20c:	000017b7          	lui	x15,0x1
     210:	6d478513          	addi	x10,x15,1748 # 16d4 <uart_read_char+0xe4>
     214:	00001097          	auipc	x1,0x1
     218:	270080e7          	jalr	x1,624(x1) # 1484 <uart_send_str>
     21c:	25c0006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "t")) {
     220:	fc842703          	lw	x14,-56(x8)
     224:	000017b7          	lui	x15,0x1
     228:	70878593          	addi	x11,x15,1800 # 1708 <uart_read_char+0x118>
     22c:	00070513          	addi	x10,x14,0
     230:	00001097          	auipc	x1,0x1
     234:	1d8080e7          	jalr	x1,472(x1) # 1408 <strings_equal>
     238:	00050793          	addi	x15,x10,0
     23c:	04078063          	beq	x15,x0,27c <handle_input+0x184>
#     if (nwords < 2) {
     240:	fe842703          	lw	x14,-24(x8)
     244:	00100793          	addi	x15,x0,1
     248:	00e7ec63          	bltu	x15,x14,260 <handle_input+0x168>
#       uart_send_str("take what\r\n\r\n");
     24c:	000017b7          	lui	x15,0x1
     250:	70c78513          	addi	x10,x15,1804 # 170c <uart_read_char+0x11c>
     254:	00001097          	auipc	x1,0x1
     258:	230080e7          	jalr	x1,560(x1) # 1484 <uart_send_str>
#       return;
     25c:	21c0006f          	jal	x0,478 <handle_input+0x380>
#     }
#     action_take(eid, words[1]);
     260:	fcc42703          	lw	x14,-52(x8)
     264:	fbf44783          	lbu	x15,-65(x8)
     268:	00070593          	addi	x11,x14,0
     26c:	00078513          	addi	x10,x15,0
     270:	00001097          	auipc	x1,0x1
     274:	938080e7          	jalr	x1,-1736(x1) # ba8 <action_take>
     278:	2000006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "d")) {
     27c:	fc842703          	lw	x14,-56(x8)
     280:	000017b7          	lui	x15,0x1
     284:	71c78593          	addi	x11,x15,1820 # 171c <uart_read_char+0x12c>
     288:	00070513          	addi	x10,x14,0
     28c:	00001097          	auipc	x1,0x1
     290:	17c080e7          	jalr	x1,380(x1) # 1408 <strings_equal>
     294:	00050793          	addi	x15,x10,0
     298:	04078063          	beq	x15,x0,2d8 <handle_input+0x1e0>
#     if (nwords < 2) {
     29c:	fe842703          	lw	x14,-24(x8)
     2a0:	00100793          	addi	x15,x0,1
     2a4:	00e7ec63          	bltu	x15,x14,2bc <handle_input+0x1c4>
#       uart_send_str("drop what\r\n\r\n");
     2a8:	000017b7          	lui	x15,0x1
     2ac:	72078513          	addi	x10,x15,1824 # 1720 <uart_read_char+0x130>
     2b0:	00001097          	auipc	x1,0x1
     2b4:	1d4080e7          	jalr	x1,468(x1) # 1484 <uart_send_str>
#       return;
     2b8:	1c00006f          	jal	x0,478 <handle_input+0x380>
#     }
#     action_drop(eid, words[1]);
     2bc:	fcc42703          	lw	x14,-52(x8)
     2c0:	fbf44783          	lbu	x15,-65(x8)
     2c4:	00070593          	addi	x11,x14,0
     2c8:	00078513          	addi	x10,x15,0
     2cc:	00001097          	auipc	x1,0x1
     2d0:	a3c080e7          	jalr	x1,-1476(x1) # d08 <action_drop>
     2d4:	1a40006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "n")) {
     2d8:	fc842703          	lw	x14,-56(x8)
     2dc:	000017b7          	lui	x15,0x1
     2e0:	73078593          	addi	x11,x15,1840 # 1730 <uart_read_char+0x140>
     2e4:	00070513          	addi	x10,x14,0
     2e8:	00001097          	auipc	x1,0x1
     2ec:	120080e7          	jalr	x1,288(x1) # 1408 <strings_equal>
     2f0:	00050793          	addi	x15,x10,0
     2f4:	00078e63          	beq	x15,x0,310 <handle_input+0x218>
#     action_go(eid, 0);
     2f8:	fbf44783          	lbu	x15,-65(x8)
     2fc:	00000593          	addi	x11,x0,0
     300:	00078513          	addi	x10,x15,0
     304:	00001097          	auipc	x1,0x1
     308:	b74080e7          	jalr	x1,-1164(x1) # e78 <action_go>
     30c:	16c0006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "e")) {
     310:	fc842703          	lw	x14,-56(x8)
     314:	000017b7          	lui	x15,0x1
     318:	73478593          	addi	x11,x15,1844 # 1734 <uart_read_char+0x144>
     31c:	00070513          	addi	x10,x14,0
     320:	00001097          	auipc	x1,0x1
     324:	0e8080e7          	jalr	x1,232(x1) # 1408 <strings_equal>
     328:	00050793          	addi	x15,x10,0
     32c:	00078e63          	beq	x15,x0,348 <handle_input+0x250>
#     action_go(eid, 1);
     330:	fbf44783          	lbu	x15,-65(x8)
     334:	00100593          	addi	x11,x0,1
     338:	00078513          	addi	x10,x15,0
     33c:	00001097          	auipc	x1,0x1
     340:	b3c080e7          	jalr	x1,-1220(x1) # e78 <action_go>
     344:	1340006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "s")) {
     348:	fc842703          	lw	x14,-56(x8)
     34c:	000017b7          	lui	x15,0x1
     350:	73878593          	addi	x11,x15,1848 # 1738 <uart_read_char+0x148>
     354:	00070513          	addi	x10,x14,0
     358:	00001097          	auipc	x1,0x1
     35c:	0b0080e7          	jalr	x1,176(x1) # 1408 <strings_equal>
     360:	00050793          	addi	x15,x10,0
     364:	00078e63          	beq	x15,x0,380 <handle_input+0x288>
#     action_go(eid, 2);
     368:	fbf44783          	lbu	x15,-65(x8)
     36c:	00200593          	addi	x11,x0,2
     370:	00078513          	addi	x10,x15,0
     374:	00001097          	auipc	x1,0x1
     378:	b04080e7          	jalr	x1,-1276(x1) # e78 <action_go>
     37c:	0fc0006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "w")) {
     380:	fc842703          	lw	x14,-56(x8)
     384:	000017b7          	lui	x15,0x1
     388:	73c78593          	addi	x11,x15,1852 # 173c <uart_read_char+0x14c>
     38c:	00070513          	addi	x10,x14,0
     390:	00001097          	auipc	x1,0x1
     394:	078080e7          	jalr	x1,120(x1) # 1408 <strings_equal>
     398:	00050793          	addi	x15,x10,0
     39c:	00078e63          	beq	x15,x0,3b8 <handle_input+0x2c0>
#     action_go(eid, 3);
     3a0:	fbf44783          	lbu	x15,-65(x8)
     3a4:	00300593          	addi	x11,x0,3
     3a8:	00078513          	addi	x10,x15,0
     3ac:	00001097          	auipc	x1,0x1
     3b0:	acc080e7          	jalr	x1,-1332(x1) # e78 <action_go>
     3b4:	0c40006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "g")) {
     3b8:	fc842703          	lw	x14,-56(x8)
     3bc:	000017b7          	lui	x15,0x1
     3c0:	74078593          	addi	x11,x15,1856 # 1740 <uart_read_char+0x150>
     3c4:	00070513          	addi	x10,x14,0
     3c8:	00001097          	auipc	x1,0x1
     3cc:	040080e7          	jalr	x1,64(x1) # 1408 <strings_equal>
     3d0:	00050793          	addi	x15,x10,0
     3d4:	06078463          	beq	x15,x0,43c <handle_input+0x344>
#     if (nwords < 2) {
     3d8:	fe842703          	lw	x14,-24(x8)
     3dc:	00100793          	addi	x15,x0,1
     3e0:	00e7ec63          	bltu	x15,x14,3f8 <handle_input+0x300>
#       uart_send_str("give what\r\n\r\n");
     3e4:	000017b7          	lui	x15,0x1
     3e8:	74478513          	addi	x10,x15,1860 # 1744 <uart_read_char+0x154>
     3ec:	00001097          	auipc	x1,0x1
     3f0:	098080e7          	jalr	x1,152(x1) # 1484 <uart_send_str>
#       return;
     3f4:	0840006f          	jal	x0,478 <handle_input+0x380>
#     }
#     if (nwords < 3) {
     3f8:	fe842703          	lw	x14,-24(x8)
     3fc:	00200793          	addi	x15,x0,2
     400:	00e7ec63          	bltu	x15,x14,418 <handle_input+0x320>
#       uart_send_str("give to whom\r\n\r\n");
     404:	000017b7          	lui	x15,0x1
     408:	75478513          	addi	x10,x15,1876 # 1754 <uart_read_char+0x164>
     40c:	00001097          	auipc	x1,0x1
     410:	078080e7          	jalr	x1,120(x1) # 1484 <uart_send_str>
#       return;
     414:	0640006f          	jal	x0,478 <handle_input+0x380>
#     }
#     action_give(eid, words[1], words[2]);
     418:	fcc42703          	lw	x14,-52(x8)
     41c:	fd042683          	lw	x13,-48(x8)
     420:	fbf44783          	lbu	x15,-65(x8)
     424:	00068613          	addi	x12,x13,0
     428:	00070593          	addi	x11,x14,0
     42c:	00078513          	addi	x10,x15,0
     430:	00001097          	auipc	x1,0x1
     434:	b80080e7          	jalr	x1,-1152(x1) # fb0 <action_give>
     438:	0400006f          	jal	x0,478 <handle_input+0x380>
#   } else if (strings_equal(words[0], "m")) {
     43c:	fc842703          	lw	x14,-56(x8)
     440:	000017b7          	lui	x15,0x1
     444:	76878593          	addi	x11,x15,1896 # 1768 <uart_read_char+0x178>
     448:	00070513          	addi	x10,x14,0
     44c:	00001097          	auipc	x1,0x1
     450:	fbc080e7          	jalr	x1,-68(x1) # 1408 <strings_equal>
     454:	00050793          	addi	x15,x10,0
     458:	00078863          	beq	x15,x0,468 <handle_input+0x370>
#     action_mem_test();
     45c:	00001097          	auipc	x1,0x1
     460:	d80080e7          	jalr	x1,-640(x1) # 11dc <action_mem_test>
     464:	0140006f          	jal	x0,478 <handle_input+0x380>
#   } else {
#     uart_send_str("not understood\r\n\r\n");
     468:	000017b7          	lui	x15,0x1
     46c:	76c78513          	addi	x10,x15,1900 # 176c <uart_read_char+0x17c>
     470:	00001097          	auipc	x1,0x1
     474:	014080e7          	jalr	x1,20(x1) # 1484 <uart_send_str>
#   }
# }
     478:	04c12083          	lw	x1,76(x2)
     47c:	04812403          	lw	x8,72(x2)
     480:	05010113          	addi	x2,x2,80
     484:	00008067          	jalr	x0,0(x1)

00000488 <print_location>:
# 
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
     488:	fb010113          	addi	x2,x2,-80
     48c:	04112623          	sw	x1,76(x2)
     490:	04812423          	sw	x8,72(x2)
     494:	05010413          	addi	x8,x2,80
     498:	00050793          	addi	x15,x10,0
     49c:	00058713          	addi	x14,x11,0
     4a0:	faf40fa3          	sb	x15,-65(x8)
     4a4:	00070793          	addi	x15,x14,0
     4a8:	faf40f23          	sb	x15,-66(x8)
#   const location *loc = &locations[lid];
     4ac:	fbf44703          	lbu	x14,-65(x8)
     4b0:	00070793          	addi	x15,x14,0
     4b4:	00379793          	slli	x15,x15,0x3
     4b8:	00e787b3          	add	x15,x15,x14
     4bc:	00279793          	slli	x15,x15,0x2
     4c0:	00e787b3          	add	x15,x15,x14
     4c4:	00279793          	slli	x15,x15,0x2
     4c8:	00003737          	lui	x14,0x3
     4cc:	a2c70713          	addi	x14,x14,-1492 # 2a2c <locations>
     4d0:	00e787b3          	add	x15,x15,x14
     4d4:	fcf42e23          	sw	x15,-36(x8)
#   uart_send_str("u r in ");
     4d8:	000017b7          	lui	x15,0x1
     4dc:	78078513          	addi	x10,x15,1920 # 1780 <uart_read_char+0x190>
     4e0:	00001097          	auipc	x1,0x1
     4e4:	fa4080e7          	jalr	x1,-92(x1) # 1484 <uart_send_str>
#   uart_send_str(loc->name);
     4e8:	fdc42783          	lw	x15,-36(x8)
     4ec:	0007a783          	lw	x15,0(x15)
     4f0:	00078513          	addi	x10,x15,0
     4f4:	00001097          	auipc	x1,0x1
     4f8:	f90080e7          	jalr	x1,-112(x1) # 1484 <uart_send_str>
#   uart_send_str("\r\nu c: ");
     4fc:	000017b7          	lui	x15,0x1
     500:	78878513          	addi	x10,x15,1928 # 1788 <uart_read_char+0x198>
     504:	00001097          	auipc	x1,0x1
     508:	f80080e7          	jalr	x1,-128(x1) # 1484 <uart_send_str>
# 
#   // print objects in location
#   bool add_list_sep = FALSE;
     50c:	fe0407a3          	sb	x0,-17(x8)
#   const object_id *lso = loc->objects;
     510:	fdc42783          	lw	x15,-36(x8)
     514:	00478793          	addi	x15,x15,4
     518:	fcf42c23          	sw	x15,-40(x8)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     51c:	fe042423          	sw	x0,-24(x8)
     520:	0740006f          	jal	x0,594 <print_location+0x10c>
#     const object_id oid = lso[i];
     524:	fd842703          	lw	x14,-40(x8)
     528:	fe842783          	lw	x15,-24(x8)
     52c:	00f707b3          	add	x15,x14,x15
     530:	0007c783          	lbu	x15,0(x15)
     534:	fcf40ba3          	sb	x15,-41(x8)
#     if (!oid)
     538:	fd744783          	lbu	x15,-41(x8)
     53c:	06078463          	beq	x15,x0,5a4 <print_location+0x11c>
#       break;
#     if (add_list_sep) {
     540:	fef44783          	lbu	x15,-17(x8)
     544:	00078c63          	beq	x15,x0,55c <print_location+0xd4>
#       uart_send_str(", ");
     548:	000017b7          	lui	x15,0x1
     54c:	79078513          	addi	x10,x15,1936 # 1790 <uart_read_char+0x1a0>
     550:	00001097          	auipc	x1,0x1
     554:	f34080e7          	jalr	x1,-204(x1) # 1484 <uart_send_str>
     558:	00c0006f          	jal	x0,564 <print_location+0xdc>
#     } else {
#       add_list_sep = TRUE;
     55c:	00100793          	addi	x15,x0,1
     560:	fef407a3          	sb	x15,-17(x8)
#     }
#     uart_send_str(objects[oid].name);
     564:	fd744783          	lbu	x15,-41(x8)
     568:	00003737          	lui	x14,0x3
     56c:	9a470713          	addi	x14,x14,-1628 # 29a4 <objects>
     570:	00279793          	slli	x15,x15,0x2
     574:	00f707b3          	add	x15,x14,x15
     578:	0007a783          	lw	x15,0(x15)
     57c:	00078513          	addi	x10,x15,0
     580:	00001097          	auipc	x1,0x1
     584:	f04080e7          	jalr	x1,-252(x1) # 1484 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     588:	fe842783          	lw	x15,-24(x8)
     58c:	00178793          	addi	x15,x15,1
     590:	fef42423          	sw	x15,-24(x8)
     594:	fe842703          	lw	x14,-24(x8)
     598:	07f00793          	addi	x15,x0,127
     59c:	f8e7f4e3          	bgeu	x15,x14,524 <print_location+0x9c>
     5a0:	0080006f          	jal	x0,5a8 <print_location+0x120>
#       break;
     5a4:	00000013          	addi	x0,x0,0
#   }
#   if (!add_list_sep) {
     5a8:	fef44783          	lbu	x15,-17(x8)
     5ac:	00079a63          	bne	x15,x0,5c0 <print_location+0x138>
#     uart_send_str("nothing");
     5b0:	000017b7          	lui	x15,0x1
     5b4:	79478513          	addi	x10,x15,1940 # 1794 <uart_read_char+0x1a4>
     5b8:	00001097          	auipc	x1,0x1
     5bc:	ecc080e7          	jalr	x1,-308(x1) # 1484 <uart_send_str>
#   }
#   uart_send_str("\r\n");
     5c0:	000017b7          	lui	x15,0x1
     5c4:	6d478513          	addi	x10,x15,1748 # 16d4 <uart_read_char+0xe4>
     5c8:	00001097          	auipc	x1,0x1
     5cc:	ebc080e7          	jalr	x1,-324(x1) # 1484 <uart_send_str>
# 
#   // print entities in location
#   add_list_sep = FALSE;
     5d0:	fe0407a3          	sb	x0,-17(x8)
#   const entity_id *lse = loc->entities;
     5d4:	fdc42783          	lw	x15,-36(x8)
     5d8:	08478793          	addi	x15,x15,132
     5dc:	fcf42823          	sw	x15,-48(x8)
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     5e0:	fe042223          	sw	x0,-28(x8)
     5e4:	0940006f          	jal	x0,678 <print_location+0x1f0>
#     const entity_id eid = lse[i];
     5e8:	fd042703          	lw	x14,-48(x8)
     5ec:	fe442783          	lw	x15,-28(x8)
     5f0:	00f707b3          	add	x15,x14,x15
     5f4:	0007c783          	lbu	x15,0(x15)
     5f8:	fcf407a3          	sb	x15,-49(x8)
#     if (!eid)
     5fc:	fcf44783          	lbu	x15,-49(x8)
     600:	08078463          	beq	x15,x0,688 <print_location+0x200>
#       break;
#     if (eid == eid_exclude_from_output)
     604:	fcf44703          	lbu	x14,-49(x8)
     608:	fbe44783          	lbu	x15,-66(x8)
     60c:	04f70e63          	beq	x14,x15,668 <print_location+0x1e0>
#       continue;
#     if (add_list_sep) {
     610:	fef44783          	lbu	x15,-17(x8)
     614:	00078c63          	beq	x15,x0,62c <print_location+0x1a4>
#       uart_send_str(", ");
     618:	000017b7          	lui	x15,0x1
     61c:	79078513          	addi	x10,x15,1936 # 1790 <uart_read_char+0x1a0>
     620:	00001097          	auipc	x1,0x1
     624:	e64080e7          	jalr	x1,-412(x1) # 1484 <uart_send_str>
     628:	00c0006f          	jal	x0,634 <print_location+0x1ac>
#     } else {
#       add_list_sep = TRUE;
     62c:	00100793          	addi	x15,x0,1
     630:	fef407a3          	sb	x15,-17(x8)
#     }
#     uart_send_str(entities[eid].name);
     634:	fcf44703          	lbu	x14,-49(x8)
     638:	000037b7          	lui	x15,0x3
     63c:	9b478693          	addi	x13,x15,-1612 # 29b4 <entities>
     640:	00070793          	addi	x15,x14,0
     644:	00279793          	slli	x15,x15,0x2
     648:	00e787b3          	add	x15,x15,x14
     64c:	00379793          	slli	x15,x15,0x3
     650:	00f687b3          	add	x15,x13,x15
     654:	0007a783          	lw	x15,0(x15)
     658:	00078513          	addi	x10,x15,0
     65c:	00001097          	auipc	x1,0x1
     660:	e28080e7          	jalr	x1,-472(x1) # 1484 <uart_send_str>
     664:	0080006f          	jal	x0,66c <print_location+0x1e4>
#       continue;
     668:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
     66c:	fe442783          	lw	x15,-28(x8)
     670:	00178793          	addi	x15,x15,1
     674:	fef42223          	sw	x15,-28(x8)
     678:	fe442703          	lw	x14,-28(x8)
     67c:	00700793          	addi	x15,x0,7
     680:	f6e7f4e3          	bgeu	x15,x14,5e8 <print_location+0x160>
     684:	0080006f          	jal	x0,68c <print_location+0x204>
#       break;
     688:	00000013          	addi	x0,x0,0
#   }
#   if (add_list_sep) {
     68c:	fef44783          	lbu	x15,-17(x8)
     690:	00078a63          	beq	x15,x0,6a4 <print_location+0x21c>
#     uart_send_str(" is here\r\n");
     694:	000017b7          	lui	x15,0x1
     698:	79c78513          	addi	x10,x15,1948 # 179c <uart_read_char+0x1ac>
     69c:	00001097          	auipc	x1,0x1
     6a0:	de8080e7          	jalr	x1,-536(x1) # 1484 <uart_send_str>
#   }
# 
#   // print exits from location
#   add_list_sep = FALSE;
     6a4:	fe0407a3          	sb	x0,-17(x8)
#   uart_send_str("exits: ");
     6a8:	000017b7          	lui	x15,0x1
     6ac:	7a878513          	addi	x10,x15,1960 # 17a8 <uart_read_char+0x1b8>
     6b0:	00001097          	auipc	x1,0x1
     6b4:	dd4080e7          	jalr	x1,-556(x1) # 1484 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
     6b8:	fe042023          	sw	x0,-32(x8)
     6bc:	0740006f          	jal	x0,730 <print_location+0x2a8>
#     if (!loc->exits[i])
     6c0:	fdc42703          	lw	x14,-36(x8)
     6c4:	fe042783          	lw	x15,-32(x8)
     6c8:	00f707b3          	add	x15,x14,x15
     6cc:	08c7c783          	lbu	x15,140(x15)
     6d0:	04078863          	beq	x15,x0,720 <print_location+0x298>
#       continue;
#     if (add_list_sep) {
     6d4:	fef44783          	lbu	x15,-17(x8)
     6d8:	00078c63          	beq	x15,x0,6f0 <print_location+0x268>
#       uart_send_str(", ");
     6dc:	000017b7          	lui	x15,0x1
     6e0:	79078513          	addi	x10,x15,1936 # 1790 <uart_read_char+0x1a0>
     6e4:	00001097          	auipc	x1,0x1
     6e8:	da0080e7          	jalr	x1,-608(x1) # 1484 <uart_send_str>
     6ec:	00c0006f          	jal	x0,6f8 <print_location+0x270>
#     } else {
#       add_list_sep = TRUE;
     6f0:	00100793          	addi	x15,x0,1
     6f4:	fef407a3          	sb	x15,-17(x8)
#     }
#     uart_send_str(exit_names[i]);
     6f8:	000037b7          	lui	x15,0x3
     6fc:	d1078713          	addi	x14,x15,-752 # 2d10 <exit_names>
     700:	fe042783          	lw	x15,-32(x8)
     704:	00279793          	slli	x15,x15,0x2
     708:	00f707b3          	add	x15,x14,x15
     70c:	0007a783          	lw	x15,0(x15)
     710:	00078513          	addi	x10,x15,0
     714:	00001097          	auipc	x1,0x1
     718:	d70080e7          	jalr	x1,-656(x1) # 1484 <uart_send_str>
     71c:	0080006f          	jal	x0,724 <print_location+0x29c>
#       continue;
     720:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
     724:	fe042783          	lw	x15,-32(x8)
     728:	00178793          	addi	x15,x15,1
     72c:	fef42023          	sw	x15,-32(x8)
     730:	fe042703          	lw	x14,-32(x8)
     734:	00500793          	addi	x15,x0,5
     738:	f8e7f4e3          	bgeu	x15,x14,6c0 <print_location+0x238>
#   }
#   if (!add_list_sep) {
     73c:	fef44783          	lbu	x15,-17(x8)
     740:	00079a63          	bne	x15,x0,754 <print_location+0x2cc>
#     uart_send_str("none");
     744:	000017b7          	lui	x15,0x1
     748:	7b078513          	addi	x10,x15,1968 # 17b0 <uart_read_char+0x1c0>
     74c:	00001097          	auipc	x1,0x1
     750:	d38080e7          	jalr	x1,-712(x1) # 1484 <uart_send_str>
#   }
#   uart_send_str("\r\n");
     754:	000017b7          	lui	x15,0x1
     758:	6d478513          	addi	x10,x15,1748 # 16d4 <uart_read_char+0xe4>
     75c:	00001097          	auipc	x1,0x1
     760:	d28080e7          	jalr	x1,-728(x1) # 1484 <uart_send_str>
# }
     764:	00000013          	addi	x0,x0,0
     768:	04c12083          	lw	x1,76(x2)
     76c:	04812403          	lw	x8,72(x2)
     770:	05010113          	addi	x2,x2,80
     774:	00008067          	jalr	x0,0(x1)

00000778 <action_inventory>:
# 
# void action_inventory(entity_id eid) {
     778:	fd010113          	addi	x2,x2,-48
     77c:	02112623          	sw	x1,44(x2)
     780:	02812423          	sw	x8,40(x2)
     784:	03010413          	addi	x8,x2,48
     788:	00050793          	addi	x15,x10,0
     78c:	fcf40fa3          	sb	x15,-33(x8)
#   uart_send_str("u have: ");
     790:	000017b7          	lui	x15,0x1
     794:	7b878513          	addi	x10,x15,1976 # 17b8 <uart_read_char+0x1c8>
     798:	00001097          	auipc	x1,0x1
     79c:	cec080e7          	jalr	x1,-788(x1) # 1484 <uart_send_str>
#   bool add_list_sep = FALSE;
     7a0:	fe0407a3          	sb	x0,-17(x8)
#   const object_id *lso = entities[eid].objects;
     7a4:	fdf44703          	lbu	x14,-33(x8)
     7a8:	00070793          	addi	x15,x14,0
     7ac:	00279793          	slli	x15,x15,0x2
     7b0:	00e787b3          	add	x15,x15,x14
     7b4:	00379793          	slli	x15,x15,0x3
     7b8:	00003737          	lui	x14,0x3
     7bc:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
     7c0:	00e787b3          	add	x15,x15,x14
     7c4:	00578793          	addi	x15,x15,5
     7c8:	fef42223          	sw	x15,-28(x8)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     7cc:	fe042423          	sw	x0,-24(x8)
     7d0:	0740006f          	jal	x0,844 <action_inventory+0xcc>
#     const object_id oid = lso[i];
     7d4:	fe442703          	lw	x14,-28(x8)
     7d8:	fe842783          	lw	x15,-24(x8)
     7dc:	00f707b3          	add	x15,x14,x15
     7e0:	0007c783          	lbu	x15,0(x15)
     7e4:	fef401a3          	sb	x15,-29(x8)
#     if (!oid)
     7e8:	fe344783          	lbu	x15,-29(x8)
     7ec:	06078463          	beq	x15,x0,854 <action_inventory+0xdc>
#       break;
#     if (add_list_sep) {
     7f0:	fef44783          	lbu	x15,-17(x8)
     7f4:	00078c63          	beq	x15,x0,80c <action_inventory+0x94>
#       uart_send_str(", ");
     7f8:	000017b7          	lui	x15,0x1
     7fc:	79078513          	addi	x10,x15,1936 # 1790 <uart_read_char+0x1a0>
     800:	00001097          	auipc	x1,0x1
     804:	c84080e7          	jalr	x1,-892(x1) # 1484 <uart_send_str>
     808:	00c0006f          	jal	x0,814 <action_inventory+0x9c>
#     } else {
#       add_list_sep = TRUE;
     80c:	00100793          	addi	x15,x0,1
     810:	fef407a3          	sb	x15,-17(x8)
#     }
#     uart_send_str(objects[oid].name);
     814:	fe344783          	lbu	x15,-29(x8)
     818:	00003737          	lui	x14,0x3
     81c:	9a470713          	addi	x14,x14,-1628 # 29a4 <objects>
     820:	00279793          	slli	x15,x15,0x2
     824:	00f707b3          	add	x15,x14,x15
     828:	0007a783          	lw	x15,0(x15)
     82c:	00078513          	addi	x10,x15,0
     830:	00001097          	auipc	x1,0x1
     834:	c54080e7          	jalr	x1,-940(x1) # 1484 <uart_send_str>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     838:	fe842783          	lw	x15,-24(x8)
     83c:	00178793          	addi	x15,x15,1
     840:	fef42423          	sw	x15,-24(x8)
     844:	fe842703          	lw	x14,-24(x8)
     848:	01f00793          	addi	x15,x0,31
     84c:	f8e7f4e3          	bgeu	x15,x14,7d4 <action_inventory+0x5c>
     850:	0080006f          	jal	x0,858 <action_inventory+0xe0>
#       break;
     854:	00000013          	addi	x0,x0,0
#   }
#   if (!add_list_sep) {
     858:	fef44783          	lbu	x15,-17(x8)
     85c:	00079a63          	bne	x15,x0,870 <action_inventory+0xf8>
#     uart_send_str("nothing");
     860:	000017b7          	lui	x15,0x1
     864:	79478513          	addi	x10,x15,1940 # 1794 <uart_read_char+0x1a4>
     868:	00001097          	auipc	x1,0x1
     86c:	c1c080e7          	jalr	x1,-996(x1) # 1484 <uart_send_str>
#   }
#   uart_send_str("\r\n");
     870:	000017b7          	lui	x15,0x1
     874:	6d478513          	addi	x10,x15,1748 # 16d4 <uart_read_char+0xe4>
     878:	00001097          	auipc	x1,0x1
     87c:	c0c080e7          	jalr	x1,-1012(x1) # 1484 <uart_send_str>
# }
     880:	00000013          	addi	x0,x0,0
     884:	02c12083          	lw	x1,44(x2)
     888:	02812403          	lw	x8,40(x2)
     88c:	03010113          	addi	x2,x2,48
     890:	00008067          	jalr	x0,0(x1)

00000894 <remove_object_from_list_by_index>:
# 
# void remove_object_from_list_by_index(object_id list[], unsigned ix) {
     894:	fd010113          	addi	x2,x2,-48
     898:	02812623          	sw	x8,44(x2)
     89c:	03010413          	addi	x8,x2,48
     8a0:	fca42e23          	sw	x10,-36(x8)
     8a4:	fcb42c23          	sw	x11,-40(x8)
#   object_id *ptr = &list[ix];
     8a8:	fdc42703          	lw	x14,-36(x8)
     8ac:	fd842783          	lw	x15,-40(x8)
     8b0:	00f707b3          	add	x15,x14,x15
     8b4:	fef42623          	sw	x15,-20(x8)
#   while (1) {
#     *ptr = *(ptr + 1);
     8b8:	fec42783          	lw	x15,-20(x8)
     8bc:	0017c703          	lbu	x14,1(x15)
     8c0:	fec42783          	lw	x15,-20(x8)
     8c4:	00e78023          	sb	x14,0(x15)
#     if (!*ptr)
     8c8:	fec42783          	lw	x15,-20(x8)
     8cc:	0007c783          	lbu	x15,0(x15)
     8d0:	00078a63          	beq	x15,x0,8e4 <remove_object_from_list_by_index+0x50>
#       return;
#     ptr++;
     8d4:	fec42783          	lw	x15,-20(x8)
     8d8:	00178793          	addi	x15,x15,1
     8dc:	fef42623          	sw	x15,-20(x8)
#     *ptr = *(ptr + 1);
     8e0:	fd9ff06f          	jal	x0,8b8 <remove_object_from_list_by_index+0x24>
#       return;
     8e4:	00000013          	addi	x0,x0,0
#   }
# }
     8e8:	02c12403          	lw	x8,44(x2)
     8ec:	03010113          	addi	x2,x2,48
     8f0:	00008067          	jalr	x0,0(x1)

000008f4 <add_object_to_list>:
# 
# bool add_object_to_list(object_id list[], unsigned list_len, object_id oid) {
     8f4:	fd010113          	addi	x2,x2,-48
     8f8:	02112623          	sw	x1,44(x2)
     8fc:	02812423          	sw	x8,40(x2)
     900:	03010413          	addi	x8,x2,48
     904:	fca42e23          	sw	x10,-36(x8)
     908:	fcb42c23          	sw	x11,-40(x8)
     90c:	00060793          	addi	x15,x12,0
     910:	fcf40ba3          	sb	x15,-41(x8)
#   // list_len - 1 since last element has to be 0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     914:	fe042623          	sw	x0,-20(x8)
     918:	0580006f          	jal	x0,970 <add_object_to_list+0x7c>
#     if (list[i])
     91c:	fdc42703          	lw	x14,-36(x8)
     920:	fec42783          	lw	x15,-20(x8)
     924:	00f707b3          	add	x15,x14,x15
     928:	0007c783          	lbu	x15,0(x15)
     92c:	02079a63          	bne	x15,x0,960 <add_object_to_list+0x6c>
#       continue;
#     list[i] = oid;
     930:	fdc42703          	lw	x14,-36(x8)
     934:	fec42783          	lw	x15,-20(x8)
     938:	00f707b3          	add	x15,x14,x15
     93c:	fd744703          	lbu	x14,-41(x8)
     940:	00e78023          	sb	x14,0(x15)
#     list[i + 1] = 0;
     944:	fec42783          	lw	x15,-20(x8)
     948:	00178793          	addi	x15,x15,1
     94c:	fdc42703          	lw	x14,-36(x8)
     950:	00f707b3          	add	x15,x14,x15
     954:	00078023          	sb	x0,0(x15)
#     return TRUE;
     958:	00100793          	addi	x15,x0,1
     95c:	0380006f          	jal	x0,994 <add_object_to_list+0xa0>
#       continue;
     960:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     964:	fec42783          	lw	x15,-20(x8)
     968:	00178793          	addi	x15,x15,1
     96c:	fef42623          	sw	x15,-20(x8)
     970:	fd842783          	lw	x15,-40(x8)
     974:	fff78793          	addi	x15,x15,-1
     978:	fec42703          	lw	x14,-20(x8)
     97c:	faf760e3          	bltu	x14,x15,91c <add_object_to_list+0x28>
#   }
#   uart_send_str("space full\r\n");
     980:	000017b7          	lui	x15,0x1
     984:	7c478513          	addi	x10,x15,1988 # 17c4 <uart_read_char+0x1d4>
     988:	00001097          	auipc	x1,0x1
     98c:	afc080e7          	jalr	x1,-1284(x1) # 1484 <uart_send_str>
#   return FALSE;
     990:	00000793          	addi	x15,x0,0
# }
     994:	00078513          	addi	x10,x15,0
     998:	02c12083          	lw	x1,44(x2)
     99c:	02812403          	lw	x8,40(x2)
     9a0:	03010113          	addi	x2,x2,48
     9a4:	00008067          	jalr	x0,0(x1)

000009a8 <add_entity_to_list>:
# 
# bool add_entity_to_list(entity_id list[], unsigned list_len, entity_id eid) {
     9a8:	fd010113          	addi	x2,x2,-48
     9ac:	02112623          	sw	x1,44(x2)
     9b0:	02812423          	sw	x8,40(x2)
     9b4:	03010413          	addi	x8,x2,48
     9b8:	fca42e23          	sw	x10,-36(x8)
     9bc:	fcb42c23          	sw	x11,-40(x8)
     9c0:	00060793          	addi	x15,x12,0
     9c4:	fcf40ba3          	sb	x15,-41(x8)
#   // list_len - 1 since last element has to be 0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     9c8:	fe042623          	sw	x0,-20(x8)
     9cc:	0580006f          	jal	x0,a24 <add_entity_to_list+0x7c>
#     if (list[i])
     9d0:	fdc42703          	lw	x14,-36(x8)
     9d4:	fec42783          	lw	x15,-20(x8)
     9d8:	00f707b3          	add	x15,x14,x15
     9dc:	0007c783          	lbu	x15,0(x15)
     9e0:	02079a63          	bne	x15,x0,a14 <add_entity_to_list+0x6c>
#       continue;
#     list[i] = eid;
     9e4:	fdc42703          	lw	x14,-36(x8)
     9e8:	fec42783          	lw	x15,-20(x8)
     9ec:	00f707b3          	add	x15,x14,x15
     9f0:	fd744703          	lbu	x14,-41(x8)
     9f4:	00e78023          	sb	x14,0(x15)
#     list[i + 1] = 0;
     9f8:	fec42783          	lw	x15,-20(x8)
     9fc:	00178793          	addi	x15,x15,1
     a00:	fdc42703          	lw	x14,-36(x8)
     a04:	00f707b3          	add	x15,x14,x15
     a08:	00078023          	sb	x0,0(x15)
#     return TRUE;
     a0c:	00100793          	addi	x15,x0,1
     a10:	0380006f          	jal	x0,a48 <add_entity_to_list+0xa0>
#       continue;
     a14:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     a18:	fec42783          	lw	x15,-20(x8)
     a1c:	00178793          	addi	x15,x15,1
     a20:	fef42623          	sw	x15,-20(x8)
     a24:	fd842783          	lw	x15,-40(x8)
     a28:	fff78793          	addi	x15,x15,-1
     a2c:	fec42703          	lw	x14,-20(x8)
     a30:	faf760e3          	bltu	x14,x15,9d0 <add_entity_to_list+0x28>
#   }
#   uart_send_str("location full\r\n");
     a34:	000017b7          	lui	x15,0x1
     a38:	7d478513          	addi	x10,x15,2004 # 17d4 <uart_read_char+0x1e4>
     a3c:	00001097          	auipc	x1,0x1
     a40:	a48080e7          	jalr	x1,-1464(x1) # 1484 <uart_send_str>
#   return FALSE;
     a44:	00000793          	addi	x15,x0,0
# }
     a48:	00078513          	addi	x10,x15,0
     a4c:	02c12083          	lw	x1,44(x2)
     a50:	02812403          	lw	x8,40(x2)
     a54:	03010113          	addi	x2,x2,48
     a58:	00008067          	jalr	x0,0(x1)

00000a5c <remove_entity_from_list>:
# 
# void remove_entity_from_list(entity_id list[], unsigned list_len,
#                              entity_id eid) {
     a5c:	fd010113          	addi	x2,x2,-48
     a60:	02112623          	sw	x1,44(x2)
     a64:	02812423          	sw	x8,40(x2)
     a68:	03010413          	addi	x8,x2,48
     a6c:	fca42e23          	sw	x10,-36(x8)
     a70:	fcb42c23          	sw	x11,-40(x8)
     a74:	00060793          	addi	x15,x12,0
     a78:	fcf40ba3          	sb	x15,-41(x8)
#   // list_len - 1 since last element has to be 0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     a7c:	fe042623          	sw	x0,-20(x8)
     a80:	0900006f          	jal	x0,b10 <remove_entity_from_list+0xb4>
#     if (list[i] != eid)
     a84:	fdc42703          	lw	x14,-36(x8)
     a88:	fec42783          	lw	x15,-20(x8)
     a8c:	00f707b3          	add	x15,x14,x15
     a90:	0007c783          	lbu	x15,0(x15)
     a94:	fd744703          	lbu	x14,-41(x8)
     a98:	06f71463          	bne	x14,x15,b00 <remove_entity_from_list+0xa4>
#       continue;
#     // list_len - 1 since last element has to be 0
#     for (unsigned j = i; j < list_len - 1; j++) {
     a9c:	fec42783          	lw	x15,-20(x8)
     aa0:	fef42423          	sw	x15,-24(x8)
     aa4:	0480006f          	jal	x0,aec <remove_entity_from_list+0x90>
#       list[j] = list[j + 1];
     aa8:	fe842783          	lw	x15,-24(x8)
     aac:	00178793          	addi	x15,x15,1
     ab0:	fdc42703          	lw	x14,-36(x8)
     ab4:	00f70733          	add	x14,x14,x15
     ab8:	fdc42683          	lw	x13,-36(x8)
     abc:	fe842783          	lw	x15,-24(x8)
     ac0:	00f687b3          	add	x15,x13,x15
     ac4:	00074703          	lbu	x14,0(x14)
     ac8:	00e78023          	sb	x14,0(x15)
#       if (!list[j])
     acc:	fdc42703          	lw	x14,-36(x8)
     ad0:	fe842783          	lw	x15,-24(x8)
     ad4:	00f707b3          	add	x15,x14,x15
     ad8:	0007c783          	lbu	x15,0(x15)
     adc:	04078c63          	beq	x15,x0,b34 <remove_entity_from_list+0xd8>
#     for (unsigned j = i; j < list_len - 1; j++) {
     ae0:	fe842783          	lw	x15,-24(x8)
     ae4:	00178793          	addi	x15,x15,1
     ae8:	fef42423          	sw	x15,-24(x8)
     aec:	fd842783          	lw	x15,-40(x8)
     af0:	fff78793          	addi	x15,x15,-1
     af4:	fe842703          	lw	x14,-24(x8)
     af8:	faf768e3          	bltu	x14,x15,aa8 <remove_entity_from_list+0x4c>
     afc:	0080006f          	jal	x0,b04 <remove_entity_from_list+0xa8>
#       continue;
     b00:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < list_len - 1; i++) {
     b04:	fec42783          	lw	x15,-20(x8)
     b08:	00178793          	addi	x15,x15,1
     b0c:	fef42623          	sw	x15,-20(x8)
     b10:	fd842783          	lw	x15,-40(x8)
     b14:	fff78793          	addi	x15,x15,-1
     b18:	fec42703          	lw	x14,-20(x8)
     b1c:	f6f764e3          	bltu	x14,x15,a84 <remove_entity_from_list+0x28>
#         return;
#     }
#   }
#   uart_send_str("entity not here\r\n");
     b20:	000017b7          	lui	x15,0x1
     b24:	7e478513          	addi	x10,x15,2020 # 17e4 <uart_read_char+0x1f4>
     b28:	00001097          	auipc	x1,0x1
     b2c:	95c080e7          	jalr	x1,-1700(x1) # 1484 <uart_send_str>
     b30:	0080006f          	jal	x0,b38 <remove_entity_from_list+0xdc>
#         return;
     b34:	00000013          	addi	x0,x0,0
# }
     b38:	02c12083          	lw	x1,44(x2)
     b3c:	02812403          	lw	x8,40(x2)
     b40:	03010113          	addi	x2,x2,48
     b44:	00008067          	jalr	x0,0(x1)

00000b48 <remove_entity_from_list_by_index>:
# 
# void remove_entity_from_list_by_index(entity_id list[], unsigned ix) {
     b48:	fd010113          	addi	x2,x2,-48
     b4c:	02812623          	sw	x8,44(x2)
     b50:	03010413          	addi	x8,x2,48
     b54:	fca42e23          	sw	x10,-36(x8)
     b58:	fcb42c23          	sw	x11,-40(x8)
#   entity_id *ptr = &list[ix];
     b5c:	fdc42703          	lw	x14,-36(x8)
     b60:	fd842783          	lw	x15,-40(x8)
     b64:	00f707b3          	add	x15,x14,x15
     b68:	fef42623          	sw	x15,-20(x8)
#   while (1) {
#     *ptr = *(ptr + 1);
     b6c:	fec42783          	lw	x15,-20(x8)
     b70:	0017c703          	lbu	x14,1(x15)
     b74:	fec42783          	lw	x15,-20(x8)
     b78:	00e78023          	sb	x14,0(x15)
#     if (!*ptr)
     b7c:	fec42783          	lw	x15,-20(x8)
     b80:	0007c783          	lbu	x15,0(x15)
     b84:	00078a63          	beq	x15,x0,b98 <remove_entity_from_list_by_index+0x50>
#       return;
#     ptr++;
     b88:	fec42783          	lw	x15,-20(x8)
     b8c:	00178793          	addi	x15,x15,1
     b90:	fef42623          	sw	x15,-20(x8)
#     *ptr = *(ptr + 1);
     b94:	fd9ff06f          	jal	x0,b6c <remove_entity_from_list_by_index+0x24>
#       return;
     b98:	00000013          	addi	x0,x0,0
#   }
# }
     b9c:	02c12403          	lw	x8,44(x2)
     ba0:	03010113          	addi	x2,x2,48
     ba4:	00008067          	jalr	x0,0(x1)

00000ba8 <action_take>:
# 
# void action_take(entity_id eid, name obj) {
     ba8:	fd010113          	addi	x2,x2,-48
     bac:	02112623          	sw	x1,44(x2)
     bb0:	02812423          	sw	x8,40(x2)
     bb4:	03010413          	addi	x8,x2,48
     bb8:	00050793          	addi	x15,x10,0
     bbc:	fcb42c23          	sw	x11,-40(x8)
     bc0:	fcf40fa3          	sb	x15,-33(x8)
#   entity *ent = &entities[eid];
     bc4:	fdf44703          	lbu	x14,-33(x8)
     bc8:	00070793          	addi	x15,x14,0
     bcc:	00279793          	slli	x15,x15,0x2
     bd0:	00e787b3          	add	x15,x15,x14
     bd4:	00379793          	slli	x15,x15,0x3
     bd8:	00003737          	lui	x14,0x3
     bdc:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
     be0:	00e787b3          	add	x15,x15,x14
     be4:	fef42423          	sw	x15,-24(x8)
#   object_id *lso = locations[ent->location].objects;
     be8:	fe842783          	lw	x15,-24(x8)
     bec:	0047c783          	lbu	x15,4(x15)
     bf0:	00078713          	addi	x14,x15,0
     bf4:	00070793          	addi	x15,x14,0
     bf8:	00379793          	slli	x15,x15,0x3
     bfc:	00e787b3          	add	x15,x15,x14
     c00:	00279793          	slli	x15,x15,0x2
     c04:	00e787b3          	add	x15,x15,x14
     c08:	00279793          	slli	x15,x15,0x2
     c0c:	00003737          	lui	x14,0x3
     c10:	a2c70713          	addi	x14,x14,-1492 # 2a2c <locations>
     c14:	00e787b3          	add	x15,x15,x14
     c18:	00478793          	addi	x15,x15,4
     c1c:	fef42223          	sw	x15,-28(x8)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     c20:	fe042623          	sw	x0,-20(x8)
     c24:	09c0006f          	jal	x0,cc0 <action_take+0x118>
#     const object_id oid = lso[i];
     c28:	fe442703          	lw	x14,-28(x8)
     c2c:	fec42783          	lw	x15,-20(x8)
     c30:	00f707b3          	add	x15,x14,x15
     c34:	0007c783          	lbu	x15,0(x15)
     c38:	fef401a3          	sb	x15,-29(x8)
#     if (!oid)
     c3c:	fe344783          	lbu	x15,-29(x8)
     c40:	08078863          	beq	x15,x0,cd0 <action_take+0x128>
#       break;
#     if (!strings_equal(objects[oid].name, obj))
     c44:	fe344783          	lbu	x15,-29(x8)
     c48:	00003737          	lui	x14,0x3
     c4c:	9a470713          	addi	x14,x14,-1628 # 29a4 <objects>
     c50:	00279793          	slli	x15,x15,0x2
     c54:	00f707b3          	add	x15,x14,x15
     c58:	0007a783          	lw	x15,0(x15)
     c5c:	fd842583          	lw	x11,-40(x8)
     c60:	00078513          	addi	x10,x15,0
     c64:	00000097          	auipc	x1,0x0
     c68:	7a4080e7          	jalr	x1,1956(x1) # 1408 <strings_equal>
     c6c:	00050793          	addi	x15,x10,0
     c70:	04078063          	beq	x15,x0,cb0 <action_take+0x108>
#       continue;
#     if (add_object_to_list(ent->objects, ENTITY_MAX_OBJECTS, oid)) {
     c74:	fe842783          	lw	x15,-24(x8)
     c78:	00578793          	addi	x15,x15,5
     c7c:	fe344703          	lbu	x14,-29(x8)
     c80:	00070613          	addi	x12,x14,0
     c84:	02000593          	addi	x11,x0,32
     c88:	00078513          	addi	x10,x15,0
     c8c:	00000097          	auipc	x1,0x0
     c90:	c68080e7          	jalr	x1,-920(x1) # 8f4 <add_object_to_list>
     c94:	00050793          	addi	x15,x10,0
     c98:	04078e63          	beq	x15,x0,cf4 <action_take+0x14c>
#       remove_object_from_list_by_index(lso, i);
     c9c:	fec42583          	lw	x11,-20(x8)
     ca0:	fe442503          	lw	x10,-28(x8)
     ca4:	00000097          	auipc	x1,0x0
     ca8:	bf0080e7          	jalr	x1,-1040(x1) # 894 <remove_object_from_list_by_index>
#     }
#     return;
     cac:	0480006f          	jal	x0,cf4 <action_take+0x14c>
#       continue;
     cb0:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
     cb4:	fec42783          	lw	x15,-20(x8)
     cb8:	00178793          	addi	x15,x15,1
     cbc:	fef42623          	sw	x15,-20(x8)
     cc0:	fec42703          	lw	x14,-20(x8)
     cc4:	07f00793          	addi	x15,x0,127
     cc8:	f6e7f0e3          	bgeu	x15,x14,c28 <action_take+0x80>
     ccc:	0080006f          	jal	x0,cd4 <action_take+0x12c>
#       break;
     cd0:	00000013          	addi	x0,x0,0
#   }
#   uart_send_str(obj);
     cd4:	fd842503          	lw	x10,-40(x8)
     cd8:	00000097          	auipc	x1,0x0
     cdc:	7ac080e7          	jalr	x1,1964(x1) # 1484 <uart_send_str>
#   uart_send_str(" not here\r\n\r\n");
     ce0:	000017b7          	lui	x15,0x1
     ce4:	7f878513          	addi	x10,x15,2040 # 17f8 <uart_read_char+0x208>
     ce8:	00000097          	auipc	x1,0x0
     cec:	79c080e7          	jalr	x1,1948(x1) # 1484 <uart_send_str>
     cf0:	0080006f          	jal	x0,cf8 <action_take+0x150>
#     return;
     cf4:	00000013          	addi	x0,x0,0
# }
     cf8:	02c12083          	lw	x1,44(x2)
     cfc:	02812403          	lw	x8,40(x2)
     d00:	03010113          	addi	x2,x2,48
     d04:	00008067          	jalr	x0,0(x1)

00000d08 <action_drop>:
# 
# void action_drop(entity_id eid, name obj) {
     d08:	fd010113          	addi	x2,x2,-48
     d0c:	02112623          	sw	x1,44(x2)
     d10:	02812423          	sw	x8,40(x2)
     d14:	03010413          	addi	x8,x2,48
     d18:	00050793          	addi	x15,x10,0
     d1c:	fcb42c23          	sw	x11,-40(x8)
     d20:	fcf40fa3          	sb	x15,-33(x8)
#   entity *ent = &entities[eid];
     d24:	fdf44703          	lbu	x14,-33(x8)
     d28:	00070793          	addi	x15,x14,0
     d2c:	00279793          	slli	x15,x15,0x2
     d30:	00e787b3          	add	x15,x15,x14
     d34:	00379793          	slli	x15,x15,0x3
     d38:	00003737          	lui	x14,0x3
     d3c:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
     d40:	00e787b3          	add	x15,x15,x14
     d44:	fef42423          	sw	x15,-24(x8)
#   object_id *lso = ent->objects;
     d48:	fe842783          	lw	x15,-24(x8)
     d4c:	00578793          	addi	x15,x15,5
     d50:	fef42223          	sw	x15,-28(x8)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     d54:	fe042623          	sw	x0,-20(x8)
     d58:	0c80006f          	jal	x0,e20 <action_drop+0x118>
#     const object_id oid = lso[i];
     d5c:	fe442703          	lw	x14,-28(x8)
     d60:	fec42783          	lw	x15,-20(x8)
     d64:	00f707b3          	add	x15,x14,x15
     d68:	0007c783          	lbu	x15,0(x15)
     d6c:	fef401a3          	sb	x15,-29(x8)
#     if (!oid)
     d70:	fe344783          	lbu	x15,-29(x8)
     d74:	0a078e63          	beq	x15,x0,e30 <action_drop+0x128>
#       break;
#     if (!strings_equal(objects[oid].name, obj))
     d78:	fe344783          	lbu	x15,-29(x8)
     d7c:	00003737          	lui	x14,0x3
     d80:	9a470713          	addi	x14,x14,-1628 # 29a4 <objects>
     d84:	00279793          	slli	x15,x15,0x2
     d88:	00f707b3          	add	x15,x14,x15
     d8c:	0007a783          	lw	x15,0(x15)
     d90:	fd842583          	lw	x11,-40(x8)
     d94:	00078513          	addi	x10,x15,0
     d98:	00000097          	auipc	x1,0x0
     d9c:	670080e7          	jalr	x1,1648(x1) # 1408 <strings_equal>
     da0:	00050793          	addi	x15,x10,0
     da4:	06078663          	beq	x15,x0,e10 <action_drop+0x108>
#       continue;
#     if (add_object_to_list(locations[ent->location].objects,
     da8:	fe842783          	lw	x15,-24(x8)
     dac:	0047c783          	lbu	x15,4(x15)
     db0:	00078713          	addi	x14,x15,0
     db4:	00070793          	addi	x15,x14,0
     db8:	00379793          	slli	x15,x15,0x3
     dbc:	00e787b3          	add	x15,x15,x14
     dc0:	00279793          	slli	x15,x15,0x2
     dc4:	00e787b3          	add	x15,x15,x14
     dc8:	00279793          	slli	x15,x15,0x2
     dcc:	00003737          	lui	x14,0x3
     dd0:	a2c70713          	addi	x14,x14,-1492 # 2a2c <locations>
     dd4:	00e787b3          	add	x15,x15,x14
     dd8:	00478793          	addi	x15,x15,4
     ddc:	fe344703          	lbu	x14,-29(x8)
     de0:	00070613          	addi	x12,x14,0
     de4:	08000593          	addi	x11,x0,128
     de8:	00078513          	addi	x10,x15,0
     dec:	00000097          	auipc	x1,0x0
     df0:	b08080e7          	jalr	x1,-1272(x1) # 8f4 <add_object_to_list>
     df4:	00050793          	addi	x15,x10,0
     df8:	06078663          	beq	x15,x0,e64 <action_drop+0x15c>
#                            LOCATION_MAX_OBJECTS, oid)) {
#       remove_object_from_list_by_index(lso, i);
     dfc:	fec42583          	lw	x11,-20(x8)
     e00:	fe442503          	lw	x10,-28(x8)
     e04:	00000097          	auipc	x1,0x0
     e08:	a90080e7          	jalr	x1,-1392(x1) # 894 <remove_object_from_list_by_index>
#     }
#     return;
     e0c:	0580006f          	jal	x0,e64 <action_drop+0x15c>
#       continue;
     e10:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
     e14:	fec42783          	lw	x15,-20(x8)
     e18:	00178793          	addi	x15,x15,1
     e1c:	fef42623          	sw	x15,-20(x8)
     e20:	fec42703          	lw	x14,-20(x8)
     e24:	01f00793          	addi	x15,x0,31
     e28:	f2e7fae3          	bgeu	x15,x14,d5c <action_drop+0x54>
     e2c:	0080006f          	jal	x0,e34 <action_drop+0x12c>
#       break;
     e30:	00000013          	addi	x0,x0,0
#   }
#   uart_send_str("u don't have ");
     e34:	000027b7          	lui	x15,0x2
     e38:	80878513          	addi	x10,x15,-2040 # 1808 <uart_read_char+0x218>
     e3c:	00000097          	auipc	x1,0x0
     e40:	648080e7          	jalr	x1,1608(x1) # 1484 <uart_send_str>
#   uart_send_str(obj);
     e44:	fd842503          	lw	x10,-40(x8)
     e48:	00000097          	auipc	x1,0x0
     e4c:	63c080e7          	jalr	x1,1596(x1) # 1484 <uart_send_str>
#   uart_send_str("\r\n\r\n");
     e50:	000027b7          	lui	x15,0x2
     e54:	81878513          	addi	x10,x15,-2024 # 1818 <uart_read_char+0x228>
     e58:	00000097          	auipc	x1,0x0
     e5c:	62c080e7          	jalr	x1,1580(x1) # 1484 <uart_send_str>
     e60:	0080006f          	jal	x0,e68 <action_drop+0x160>
#     return;
     e64:	00000013          	addi	x0,x0,0
# }
     e68:	02c12083          	lw	x1,44(x2)
     e6c:	02812403          	lw	x8,40(x2)
     e70:	03010113          	addi	x2,x2,48
     e74:	00008067          	jalr	x0,0(x1)

00000e78 <action_go>:
# 
# void action_go(entity_id eid, direction dir) {
     e78:	fd010113          	addi	x2,x2,-48
     e7c:	02112623          	sw	x1,44(x2)
     e80:	02812423          	sw	x8,40(x2)
     e84:	03010413          	addi	x8,x2,48
     e88:	00050793          	addi	x15,x10,0
     e8c:	00058713          	addi	x14,x11,0
     e90:	fcf40fa3          	sb	x15,-33(x8)
     e94:	00070793          	addi	x15,x14,0
     e98:	fcf40f23          	sb	x15,-34(x8)
#   entity *ent = &entities[eid];
     e9c:	fdf44703          	lbu	x14,-33(x8)
     ea0:	00070793          	addi	x15,x14,0
     ea4:	00279793          	slli	x15,x15,0x2
     ea8:	00e787b3          	add	x15,x15,x14
     eac:	00379793          	slli	x15,x15,0x3
     eb0:	00003737          	lui	x14,0x3
     eb4:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
     eb8:	00e787b3          	add	x15,x15,x14
     ebc:	fef42623          	sw	x15,-20(x8)
#   location *loc = &locations[ent->location];
     ec0:	fec42783          	lw	x15,-20(x8)
     ec4:	0047c783          	lbu	x15,4(x15)
     ec8:	00078713          	addi	x14,x15,0
     ecc:	00070793          	addi	x15,x14,0
     ed0:	00379793          	slli	x15,x15,0x3
     ed4:	00e787b3          	add	x15,x15,x14
     ed8:	00279793          	slli	x15,x15,0x2
     edc:	00e787b3          	add	x15,x15,x14
     ee0:	00279793          	slli	x15,x15,0x2
     ee4:	00003737          	lui	x14,0x3
     ee8:	a2c70713          	addi	x14,x14,-1492 # 2a2c <locations>
     eec:	00e787b3          	add	x15,x15,x14
     ef0:	fef42423          	sw	x15,-24(x8)
#   const location_id to = loc->exits[dir];
     ef4:	fde44783          	lbu	x15,-34(x8)
     ef8:	fe842703          	lw	x14,-24(x8)
     efc:	00f707b3          	add	x15,x14,x15
     f00:	08c7c783          	lbu	x15,140(x15)
     f04:	fef403a3          	sb	x15,-25(x8)
#   if (!to) {
     f08:	fe744783          	lbu	x15,-25(x8)
     f0c:	00079c63          	bne	x15,x0,f24 <action_go+0xac>
#     uart_send_str("cannot go there\r\n\r\n");
     f10:	000027b7          	lui	x15,0x2
     f14:	82078513          	addi	x10,x15,-2016 # 1820 <uart_read_char+0x230>
     f18:	00000097          	auipc	x1,0x0
     f1c:	56c080e7          	jalr	x1,1388(x1) # 1484 <uart_send_str>
#     return;
     f20:	0800006f          	jal	x0,fa0 <action_go+0x128>
#   }
#   if (add_entity_to_list(locations[to].entities, LOCATION_MAX_ENTITIES, eid)) {
     f24:	fe744703          	lbu	x14,-25(x8)
     f28:	00070793          	addi	x15,x14,0
     f2c:	00379793          	slli	x15,x15,0x3
     f30:	00e787b3          	add	x15,x15,x14
     f34:	00279793          	slli	x15,x15,0x2
     f38:	00e787b3          	add	x15,x15,x14
     f3c:	00279793          	slli	x15,x15,0x2
     f40:	08078713          	addi	x14,x15,128
     f44:	000037b7          	lui	x15,0x3
     f48:	a2c78793          	addi	x15,x15,-1492 # 2a2c <locations>
     f4c:	00f707b3          	add	x15,x14,x15
     f50:	00478793          	addi	x15,x15,4
     f54:	fdf44703          	lbu	x14,-33(x8)
     f58:	00070613          	addi	x12,x14,0
     f5c:	00800593          	addi	x11,x0,8
     f60:	00078513          	addi	x10,x15,0
     f64:	00000097          	auipc	x1,0x0
     f68:	a44080e7          	jalr	x1,-1468(x1) # 9a8 <add_entity_to_list>
     f6c:	00050793          	addi	x15,x10,0
     f70:	02078863          	beq	x15,x0,fa0 <action_go+0x128>
#     remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES, eid);
     f74:	fe842783          	lw	x15,-24(x8)
     f78:	08478793          	addi	x15,x15,132
     f7c:	fdf44703          	lbu	x14,-33(x8)
     f80:	00070613          	addi	x12,x14,0
     f84:	00800593          	addi	x11,x0,8
     f88:	00078513          	addi	x10,x15,0
     f8c:	00000097          	auipc	x1,0x0
     f90:	ad0080e7          	jalr	x1,-1328(x1) # a5c <remove_entity_from_list>
#     ent->location = to;
     f94:	fec42783          	lw	x15,-20(x8)
     f98:	fe744703          	lbu	x14,-25(x8)
     f9c:	00e78223          	sb	x14,4(x15)
#   }
# }
     fa0:	02c12083          	lw	x1,44(x2)
     fa4:	02812403          	lw	x8,40(x2)
     fa8:	03010113          	addi	x2,x2,48
     fac:	00008067          	jalr	x0,0(x1)

00000fb0 <action_give>:
# 
# void action_give(entity_id eid, name obj, name to_ent) {
     fb0:	fc010113          	addi	x2,x2,-64
     fb4:	02112e23          	sw	x1,60(x2)
     fb8:	02812c23          	sw	x8,56(x2)
     fbc:	04010413          	addi	x8,x2,64
     fc0:	00050793          	addi	x15,x10,0
     fc4:	fcb42423          	sw	x11,-56(x8)
     fc8:	fcc42223          	sw	x12,-60(x8)
     fcc:	fcf407a3          	sb	x15,-49(x8)
#   entity *ent = &entities[eid];
     fd0:	fcf44703          	lbu	x14,-49(x8)
     fd4:	00070793          	addi	x15,x14,0
     fd8:	00279793          	slli	x15,x15,0x2
     fdc:	00e787b3          	add	x15,x15,x14
     fe0:	00379793          	slli	x15,x15,0x3
     fe4:	00003737          	lui	x14,0x3
     fe8:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
     fec:	00e787b3          	add	x15,x15,x14
     ff0:	fef42223          	sw	x15,-28(x8)
#   const location *loc = &locations[ent->location];
     ff4:	fe442783          	lw	x15,-28(x8)
     ff8:	0047c783          	lbu	x15,4(x15)
     ffc:	00078713          	addi	x14,x15,0
    1000:	00070793          	addi	x15,x14,0
    1004:	00379793          	slli	x15,x15,0x3
    1008:	00e787b3          	add	x15,x15,x14
    100c:	00279793          	slli	x15,x15,0x2
    1010:	00e787b3          	add	x15,x15,x14
    1014:	00279793          	slli	x15,x15,0x2
    1018:	00003737          	lui	x14,0x3
    101c:	a2c70713          	addi	x14,x14,-1492 # 2a2c <locations>
    1020:	00e787b3          	add	x15,x15,x14
    1024:	fef42023          	sw	x15,-32(x8)
#   const entity_id *lse = loc->entities;
    1028:	fe042783          	lw	x15,-32(x8)
    102c:	08478793          	addi	x15,x15,132
    1030:	fcf42e23          	sw	x15,-36(x8)
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
    1034:	fe042623          	sw	x0,-20(x8)
    1038:	15c0006f          	jal	x0,1194 <action_give+0x1e4>
#     if (!lse[i])
    103c:	fdc42703          	lw	x14,-36(x8)
    1040:	fec42783          	lw	x15,-20(x8)
    1044:	00f707b3          	add	x15,x14,x15
    1048:	0007c783          	lbu	x15,0(x15)
    104c:	14078c63          	beq	x15,x0,11a4 <action_give+0x1f4>
#       break;
#     entity *to = &entities[lse[i]];
    1050:	fdc42703          	lw	x14,-36(x8)
    1054:	fec42783          	lw	x15,-20(x8)
    1058:	00f707b3          	add	x15,x14,x15
    105c:	0007c783          	lbu	x15,0(x15)
    1060:	00078713          	addi	x14,x15,0
    1064:	00070793          	addi	x15,x14,0
    1068:	00279793          	slli	x15,x15,0x2
    106c:	00e787b3          	add	x15,x15,x14
    1070:	00379793          	slli	x15,x15,0x3
    1074:	00003737          	lui	x14,0x3
    1078:	9b470713          	addi	x14,x14,-1612 # 29b4 <entities>
    107c:	00e787b3          	add	x15,x15,x14
    1080:	fcf42c23          	sw	x15,-40(x8)
#     if (!strings_equal(to->name, to_ent))
    1084:	fd842783          	lw	x15,-40(x8)
    1088:	0007a783          	lw	x15,0(x15)
    108c:	fc442583          	lw	x11,-60(x8)
    1090:	00078513          	addi	x10,x15,0
    1094:	00000097          	auipc	x1,0x0
    1098:	374080e7          	jalr	x1,884(x1) # 1408 <strings_equal>
    109c:	00050793          	addi	x15,x10,0
    10a0:	0e078263          	beq	x15,x0,1184 <action_give+0x1d4>
#       continue;
#     object_id *lso = ent->objects;
    10a4:	fe442783          	lw	x15,-28(x8)
    10a8:	00578793          	addi	x15,x15,5
    10ac:	fcf42a23          	sw	x15,-44(x8)
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
    10b0:	fe042423          	sw	x0,-24(x8)
    10b4:	09c0006f          	jal	x0,1150 <action_give+0x1a0>
#       const object_id oid = lso[j];
    10b8:	fd442703          	lw	x14,-44(x8)
    10bc:	fe842783          	lw	x15,-24(x8)
    10c0:	00f707b3          	add	x15,x14,x15
    10c4:	0007c783          	lbu	x15,0(x15)
    10c8:	fcf409a3          	sb	x15,-45(x8)
#       if (!oid)
    10cc:	fd344783          	lbu	x15,-45(x8)
    10d0:	08078863          	beq	x15,x0,1160 <action_give+0x1b0>
#         break;
#       if (!strings_equal(objects[oid].name, obj))
    10d4:	fd344783          	lbu	x15,-45(x8)
    10d8:	00003737          	lui	x14,0x3
    10dc:	9a470713          	addi	x14,x14,-1628 # 29a4 <objects>
    10e0:	00279793          	slli	x15,x15,0x2
    10e4:	00f707b3          	add	x15,x14,x15
    10e8:	0007a783          	lw	x15,0(x15)
    10ec:	fc842583          	lw	x11,-56(x8)
    10f0:	00078513          	addi	x10,x15,0
    10f4:	00000097          	auipc	x1,0x0
    10f8:	314080e7          	jalr	x1,788(x1) # 1408 <strings_equal>
    10fc:	00050793          	addi	x15,x10,0
    1100:	04078063          	beq	x15,x0,1140 <action_give+0x190>
#         continue;
#       if (add_object_to_list(to->objects, ENTITY_MAX_OBJECTS, oid)) {
    1104:	fd842783          	lw	x15,-40(x8)
    1108:	00578793          	addi	x15,x15,5
    110c:	fd344703          	lbu	x14,-45(x8)
    1110:	00070613          	addi	x12,x14,0
    1114:	02000593          	addi	x11,x0,32
    1118:	00078513          	addi	x10,x15,0
    111c:	fffff097          	auipc	x1,0xfffff
    1120:	7d8080e7          	jalr	x1,2008(x1) # 8f4 <add_object_to_list>
    1124:	00050793          	addi	x15,x10,0
    1128:	0a078063          	beq	x15,x0,11c8 <action_give+0x218>
#         remove_object_from_list_by_index(lso, j);
    112c:	fe842583          	lw	x11,-24(x8)
    1130:	fd442503          	lw	x10,-44(x8)
    1134:	fffff097          	auipc	x1,0xfffff
    1138:	760080e7          	jalr	x1,1888(x1) # 894 <remove_object_from_list_by_index>
#       }
#       return;
    113c:	08c0006f          	jal	x0,11c8 <action_give+0x218>
#         continue;
    1140:	00000013          	addi	x0,x0,0
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
    1144:	fe842783          	lw	x15,-24(x8)
    1148:	00178793          	addi	x15,x15,1
    114c:	fef42423          	sw	x15,-24(x8)
    1150:	fe842703          	lw	x14,-24(x8)
    1154:	01f00793          	addi	x15,x0,31
    1158:	f6e7f0e3          	bgeu	x15,x14,10b8 <action_give+0x108>
    115c:	0080006f          	jal	x0,1164 <action_give+0x1b4>
#         break;
    1160:	00000013          	addi	x0,x0,0
#     }
#     uart_send_str(obj);
    1164:	fc842503          	lw	x10,-56(x8)
    1168:	00000097          	auipc	x1,0x0
    116c:	31c080e7          	jalr	x1,796(x1) # 1484 <uart_send_str>
#     uart_send_str(" not in inventory\r\n\r\n");
    1170:	000027b7          	lui	x15,0x2
    1174:	83478513          	addi	x10,x15,-1996 # 1834 <uart_read_char+0x244>
    1178:	00000097          	auipc	x1,0x0
    117c:	30c080e7          	jalr	x1,780(x1) # 1484 <uart_send_str>
#     return;
    1180:	04c0006f          	jal	x0,11cc <action_give+0x21c>
#       continue;
    1184:	00000013          	addi	x0,x0,0
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
    1188:	fec42783          	lw	x15,-20(x8)
    118c:	00178793          	addi	x15,x15,1
    1190:	fef42623          	sw	x15,-20(x8)
    1194:	fec42703          	lw	x14,-20(x8)
    1198:	00700793          	addi	x15,x0,7
    119c:	eae7f0e3          	bgeu	x15,x14,103c <action_give+0x8c>
    11a0:	0080006f          	jal	x0,11a8 <action_give+0x1f8>
#       break;
    11a4:	00000013          	addi	x0,x0,0
#   }
#   uart_send_str(to_ent);
    11a8:	fc442503          	lw	x10,-60(x8)
    11ac:	00000097          	auipc	x1,0x0
    11b0:	2d8080e7          	jalr	x1,728(x1) # 1484 <uart_send_str>
#   uart_send_str(" is not here\r\n\r\n");
    11b4:	000027b7          	lui	x15,0x2
    11b8:	84c78513          	addi	x10,x15,-1972 # 184c <uart_read_char+0x25c>
    11bc:	00000097          	auipc	x1,0x0
    11c0:	2c8080e7          	jalr	x1,712(x1) # 1484 <uart_send_str>
    11c4:	0080006f          	jal	x0,11cc <action_give+0x21c>
#       return;
    11c8:	00000013          	addi	x0,x0,0
# }
    11cc:	03c12083          	lw	x1,60(x2)
    11d0:	03812403          	lw	x8,56(x2)
    11d4:	04010113          	addi	x2,x2,64
    11d8:	00008067          	jalr	x0,0(x1)

000011dc <action_mem_test>:
# 
# void action_mem_test() {
    11dc:	fe010113          	addi	x2,x2,-32
    11e0:	00112e23          	sw	x1,28(x2)
    11e4:	00812c23          	sw	x8,24(x2)
    11e8:	02010413          	addi	x8,x2,32
#   uart_send_str("testing memory (write)\r\n");
    11ec:	000027b7          	lui	x15,0x2
    11f0:	86078513          	addi	x10,x15,-1952 # 1860 <uart_read_char+0x270>
    11f4:	00000097          	auipc	x1,0x0
    11f8:	290080e7          	jalr	x1,656(x1) # 1484 <uart_send_str>
#   char *ptr = (char *)0x10000;
    11fc:	000107b7          	lui	x15,0x10
    1200:	fef42623          	sw	x15,-20(x8)
#   const char *end = (char *)0x100000;
    1204:	001007b7          	lui	x15,0x100
    1208:	fef42223          	sw	x15,-28(x8)
#   char ch = 0;
    120c:	fe0405a3          	sb	x0,-21(x8)
#   while (ptr < end) {
    1210:	0200006f          	jal	x0,1230 <action_mem_test+0x54>
#     *ptr++ = ch++;
    1214:	feb44703          	lbu	x14,-21(x8)
    1218:	00170793          	addi	x15,x14,1
    121c:	fef405a3          	sb	x15,-21(x8)
    1220:	fec42783          	lw	x15,-20(x8)
    1224:	00178693          	addi	x13,x15,1 # 100001 <__global_pointer$+0xfce5d>
    1228:	fed42623          	sw	x13,-20(x8)
    122c:	00e78023          	sb	x14,0(x15)
#   while (ptr < end) {
    1230:	fec42703          	lw	x14,-20(x8)
    1234:	fe442783          	lw	x15,-28(x8)
    1238:	fcf76ee3          	bltu	x14,x15,1214 <action_mem_test+0x38>
#   }
#   uart_send_str("testing memory (read)\r\n");
    123c:	000027b7          	lui	x15,0x2
    1240:	87c78513          	addi	x10,x15,-1924 # 187c <uart_read_char+0x28c>
    1244:	00000097          	auipc	x1,0x0
    1248:	240080e7          	jalr	x1,576(x1) # 1484 <uart_send_str>
#   ptr = (char *)0x10000;
    124c:	000107b7          	lui	x15,0x10
    1250:	fef42623          	sw	x15,-20(x8)
#   ch = 0;
    1254:	fe0405a3          	sb	x0,-21(x8)
#   while (ptr < end) {
    1258:	0380006f          	jal	x0,1290 <action_mem_test+0xb4>
#     if (*ptr++ != ch++) {
    125c:	fec42783          	lw	x15,-20(x8)
    1260:	00178713          	addi	x14,x15,1 # 10001 <__global_pointer$+0xce5d>
    1264:	fee42623          	sw	x14,-20(x8)
    1268:	0007c703          	lbu	x14,0(x15)
    126c:	feb44783          	lbu	x15,-21(x8)
    1270:	00178693          	addi	x13,x15,1
    1274:	fed405a3          	sb	x13,-21(x8)
    1278:	00f70c63          	beq	x14,x15,1290 <action_mem_test+0xb4>
#       uart_send_str("!!! memory test failed\r\n");
    127c:	000027b7          	lui	x15,0x2
    1280:	89478513          	addi	x10,x15,-1900 # 1894 <uart_read_char+0x2a4>
    1284:	00000097          	auipc	x1,0x0
    1288:	200080e7          	jalr	x1,512(x1) # 1484 <uart_send_str>
#       return;
    128c:	0200006f          	jal	x0,12ac <action_mem_test+0xd0>
#   while (ptr < end) {
    1290:	fec42703          	lw	x14,-20(x8)
    1294:	fe442783          	lw	x15,-28(x8)
    1298:	fcf762e3          	bltu	x14,x15,125c <action_mem_test+0x80>
#     }
#   }
#   uart_send_str("memory test succeeded\r\n");
    129c:	000027b7          	lui	x15,0x2
    12a0:	8b078513          	addi	x10,x15,-1872 # 18b0 <uart_read_char+0x2c0>
    12a4:	00000097          	auipc	x1,0x0
    12a8:	1e0080e7          	jalr	x1,480(x1) # 1484 <uart_send_str>
# }
    12ac:	01c12083          	lw	x1,28(x2)
    12b0:	01812403          	lw	x8,24(x2)
    12b4:	02010113          	addi	x2,x2,32
    12b8:	00008067          	jalr	x0,0(x1)

000012bc <print_help>:
# 
# void print_help() {
    12bc:	ff010113          	addi	x2,x2,-16
    12c0:	00112623          	sw	x1,12(x2)
    12c4:	00812423          	sw	x8,8(x2)
    12c8:	01010413          	addi	x8,x2,16
#   uart_send_str(
    12cc:	000027b7          	lui	x15,0x2
    12d0:	8c878513          	addi	x10,x15,-1848 # 18c8 <uart_read_char+0x2d8>
    12d4:	00000097          	auipc	x1,0x0
    12d8:	1b0080e7          	jalr	x1,432(x1) # 1484 <uart_send_str>
#       "\r\ncommand:\r\n  n: go north\r\n  e: go east\r\n  s: go south\r\n  w: "
#       "go west\r\n  i: "
#       "display inventory\r\n  t <object>: take object\r\n  d <object>: drop "
#       "object\r\n  g <object> <entity>: give object to entity\r\n  help: this "
#       "message\r\n\r\n");
# }
    12dc:	00000013          	addi	x0,x0,0
    12e0:	00c12083          	lw	x1,12(x2)
    12e4:	00812403          	lw	x8,8(x2)
    12e8:	01010113          	addi	x2,x2,16
    12ec:	00008067          	jalr	x0,0(x1)

000012f0 <input>:
# 
# void input(input_buffer *buf) {
    12f0:	fd010113          	addi	x2,x2,-48
    12f4:	02112623          	sw	x1,44(x2)
    12f8:	02812423          	sw	x8,40(x2)
    12fc:	03010413          	addi	x8,x2,48
    1300:	fca42e23          	sw	x10,-36(x8)
#   while (1) {
#     const char ch = uart_read_char();
    1304:	00000097          	auipc	x1,0x0
    1308:	2ec080e7          	jalr	x1,748(x1) # 15f0 <uart_read_char>
    130c:	00050793          	addi	x15,x10,0
    1310:	fef407a3          	sb	x15,-17(x8)
#     if (ch == CHAR_BACKSPACE) {
    1314:	fef44703          	lbu	x14,-17(x8)
    1318:	07f00793          	addi	x15,x0,127
    131c:	02f71e63          	bne	x14,x15,1358 <input+0x68>
#       if (buf->ix > 0) {
    1320:	fdc42783          	lw	x15,-36(x8)
    1324:	0507c783          	lbu	x15,80(x15)
    1328:	0a078a63          	beq	x15,x0,13dc <input+0xec>
#         buf->ix--;
    132c:	fdc42783          	lw	x15,-36(x8)
    1330:	0507c783          	lbu	x15,80(x15)
    1334:	fff78793          	addi	x15,x15,-1
    1338:	0ff7f713          	andi	x14,x15,255
    133c:	fdc42783          	lw	x15,-36(x8)
    1340:	04e78823          	sb	x14,80(x15)
#         uart_send_char(ch);
    1344:	fef44783          	lbu	x15,-17(x8)
    1348:	00078513          	addi	x10,x15,0
    134c:	00000097          	auipc	x1,0x0
    1350:	260080e7          	jalr	x1,608(x1) # 15ac <uart_send_char>
    1354:	0880006f          	jal	x0,13dc <input+0xec>
#       }
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
    1358:	fef44703          	lbu	x14,-17(x8)
    135c:	00d00793          	addi	x15,x0,13
    1360:	00f70a63          	beq	x14,x15,1374 <input+0x84>
#                buf->ix ==
    1364:	fdc42783          	lw	x15,-36(x8)
    1368:	0507c703          	lbu	x14,80(x15)
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
    136c:	04f00793          	addi	x15,x0,79
    1370:	02f71463          	bne	x14,x15,1398 <input+0xa8>
#                    sizeof(buf->line) - 1) { // -1 since last char must be 0
#       buf->line[buf->ix] = 0;
    1374:	fdc42783          	lw	x15,-36(x8)
    1378:	0507c783          	lbu	x15,80(x15)
    137c:	00078713          	addi	x14,x15,0
    1380:	fdc42783          	lw	x15,-36(x8)
    1384:	00e787b3          	add	x15,x15,x14
    1388:	00078023          	sb	x0,0(x15)
#       buf->ix = 0;
    138c:	fdc42783          	lw	x15,-36(x8)
    1390:	04078823          	sb	x0,80(x15)
#       return;
    1394:	0640006f          	jal	x0,13f8 <input+0x108>
#     } else {
#       buf->line[buf->ix] = ch;
    1398:	fdc42783          	lw	x15,-36(x8)
    139c:	0507c783          	lbu	x15,80(x15)
    13a0:	00078713          	addi	x14,x15,0
    13a4:	fdc42783          	lw	x15,-36(x8)
    13a8:	00e787b3          	add	x15,x15,x14
    13ac:	fef44703          	lbu	x14,-17(x8)
    13b0:	00e78023          	sb	x14,0(x15)
#       buf->ix++;
    13b4:	fdc42783          	lw	x15,-36(x8)
    13b8:	0507c783          	lbu	x15,80(x15)
    13bc:	00178793          	addi	x15,x15,1
    13c0:	0ff7f713          	andi	x14,x15,255
    13c4:	fdc42783          	lw	x15,-36(x8)
    13c8:	04e78823          	sb	x14,80(x15)
#       uart_send_char(ch);
    13cc:	fef44783          	lbu	x15,-17(x8)
    13d0:	00078513          	addi	x10,x15,0
    13d4:	00000097          	auipc	x1,0x0
    13d8:	1d8080e7          	jalr	x1,472(x1) # 15ac <uart_send_char>
#     }
#     *leds = ~buf->ix;
    13dc:	fdc42783          	lw	x15,-36(x8)
    13e0:	0507c703          	lbu	x14,80(x15)
    13e4:	fff00793          	addi	x15,x0,-1
    13e8:	fff74713          	xori	x14,x14,-1
    13ec:	0ff77713          	andi	x14,x14,255
    13f0:	00e78023          	sb	x14,0(x15)
#   while (1) {
    13f4:	f11ff06f          	jal	x0,1304 <input+0x14>
#   }
# }
    13f8:	02c12083          	lw	x1,44(x2)
    13fc:	02812403          	lw	x8,40(x2)
    1400:	03010113          	addi	x2,x2,48
    1404:	00008067          	jalr	x0,0(x1)

00001408 <strings_equal>:
# 
# bool strings_equal(const char *s1, const char *s2) {
    1408:	fe010113          	addi	x2,x2,-32
    140c:	00812e23          	sw	x8,28(x2)
    1410:	02010413          	addi	x8,x2,32
    1414:	fea42623          	sw	x10,-20(x8)
    1418:	feb42423          	sw	x11,-24(x8)
#   while (1) {
#     if (*s1 - *s2)
    141c:	fec42783          	lw	x15,-20(x8)
    1420:	0007c703          	lbu	x14,0(x15)
    1424:	fe842783          	lw	x15,-24(x8)
    1428:	0007c783          	lbu	x15,0(x15)
    142c:	00f70663          	beq	x14,x15,1438 <strings_equal+0x30>
#       return FALSE;
    1430:	00000793          	addi	x15,x0,0
    1434:	0400006f          	jal	x0,1474 <strings_equal+0x6c>
#     if (!*s1 && !*s2)
    1438:	fec42783          	lw	x15,-20(x8)
    143c:	0007c783          	lbu	x15,0(x15)
    1440:	00079c63          	bne	x15,x0,1458 <strings_equal+0x50>
    1444:	fe842783          	lw	x15,-24(x8)
    1448:	0007c783          	lbu	x15,0(x15)
    144c:	00079663          	bne	x15,x0,1458 <strings_equal+0x50>
#       return TRUE;
    1450:	00100793          	addi	x15,x0,1
    1454:	0200006f          	jal	x0,1474 <strings_equal+0x6c>
#     s1++;
    1458:	fec42783          	lw	x15,-20(x8)
    145c:	00178793          	addi	x15,x15,1
    1460:	fef42623          	sw	x15,-20(x8)
#     s2++;
    1464:	fe842783          	lw	x15,-24(x8)
    1468:	00178793          	addi	x15,x15,1
    146c:	fef42423          	sw	x15,-24(x8)
#     if (*s1 - *s2)
    1470:	fadff06f          	jal	x0,141c <strings_equal+0x14>
#   }
# }
    1474:	00078513          	addi	x10,x15,0
    1478:	01c12403          	lw	x8,28(x2)
    147c:	02010113          	addi	x2,x2,32
    1480:	00008067          	jalr	x0,0(x1)

00001484 <uart_send_str>:
# 
# void uart_send_str(const char *str) {
    1484:	fe010113          	addi	x2,x2,-32
    1488:	00812e23          	sw	x8,28(x2)
    148c:	02010413          	addi	x8,x2,32
    1490:	fea42623          	sw	x10,-20(x8)
#   while (*str) {
    1494:	0300006f          	jal	x0,14c4 <uart_send_str+0x40>
#     while (*uart_out)
    1498:	00000013          	addi	x0,x0,0
    149c:	ffe00793          	addi	x15,x0,-2
    14a0:	0007c783          	lbu	x15,0(x15)
    14a4:	0ff7f793          	andi	x15,x15,255
    14a8:	fe079ae3          	bne	x15,x0,149c <uart_send_str+0x18>
#       ;
#     *uart_out = *str++;
    14ac:	fec42783          	lw	x15,-20(x8)
    14b0:	00178713          	addi	x14,x15,1
    14b4:	fee42623          	sw	x14,-20(x8)
    14b8:	ffe00713          	addi	x14,x0,-2
    14bc:	0007c783          	lbu	x15,0(x15)
    14c0:	00f70023          	sb	x15,0(x14)
#   while (*str) {
    14c4:	fec42783          	lw	x15,-20(x8)
    14c8:	0007c783          	lbu	x15,0(x15)
    14cc:	fc0796e3          	bne	x15,x0,1498 <uart_send_str+0x14>
#   }
# }
    14d0:	00000013          	addi	x0,x0,0
    14d4:	00000013          	addi	x0,x0,0
    14d8:	01c12403          	lw	x8,28(x2)
    14dc:	02010113          	addi	x2,x2,32
    14e0:	00008067          	jalr	x0,0(x1)

000014e4 <uart_send_hex_byte>:
# 
# void uart_send_hex_byte(const char ch) {
    14e4:	fe010113          	addi	x2,x2,-32
    14e8:	00112e23          	sw	x1,28(x2)
    14ec:	00812c23          	sw	x8,24(x2)
    14f0:	02010413          	addi	x8,x2,32
    14f4:	00050793          	addi	x15,x10,0
    14f8:	fef407a3          	sb	x15,-17(x8)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
    14fc:	fef44783          	lbu	x15,-17(x8)
    1500:	0047d793          	srli	x15,x15,0x4
    1504:	0ff7f793          	andi	x15,x15,255
    1508:	00078513          	addi	x10,x15,0
    150c:	00000097          	auipc	x1,0x0
    1510:	034080e7          	jalr	x1,52(x1) # 1540 <uart_send_hex_nibble>
#   uart_send_hex_nibble(ch & 0x0f);
    1514:	fef44783          	lbu	x15,-17(x8)
    1518:	00f7f793          	andi	x15,x15,15
    151c:	0ff7f793          	andi	x15,x15,255
    1520:	00078513          	addi	x10,x15,0
    1524:	00000097          	auipc	x1,0x0
    1528:	01c080e7          	jalr	x1,28(x1) # 1540 <uart_send_hex_nibble>
# }
    152c:	00000013          	addi	x0,x0,0
    1530:	01c12083          	lw	x1,28(x2)
    1534:	01812403          	lw	x8,24(x2)
    1538:	02010113          	addi	x2,x2,32
    153c:	00008067          	jalr	x0,0(x1)

00001540 <uart_send_hex_nibble>:
# 
# void uart_send_hex_nibble(const char nibble) {
    1540:	fe010113          	addi	x2,x2,-32
    1544:	00112e23          	sw	x1,28(x2)
    1548:	00812c23          	sw	x8,24(x2)
    154c:	02010413          	addi	x8,x2,32
    1550:	00050793          	addi	x15,x10,0
    1554:	fef407a3          	sb	x15,-17(x8)
#   if (nibble < 10) {
    1558:	fef44703          	lbu	x14,-17(x8)
    155c:	00900793          	addi	x15,x0,9
    1560:	02e7e063          	bltu	x15,x14,1580 <uart_send_hex_nibble+0x40>
#     uart_send_char('0' + nibble);
    1564:	fef44783          	lbu	x15,-17(x8)
    1568:	03078793          	addi	x15,x15,48
    156c:	0ff7f793          	andi	x15,x15,255
    1570:	00078513          	addi	x10,x15,0
    1574:	00000097          	auipc	x1,0x0
    1578:	038080e7          	jalr	x1,56(x1) # 15ac <uart_send_char>
#   } else {
#     uart_send_char('A' + (nibble - 10));
#   }
# }
    157c:	01c0006f          	jal	x0,1598 <uart_send_hex_nibble+0x58>
#     uart_send_char('A' + (nibble - 10));
    1580:	fef44783          	lbu	x15,-17(x8)
    1584:	03778793          	addi	x15,x15,55
    1588:	0ff7f793          	andi	x15,x15,255
    158c:	00078513          	addi	x10,x15,0
    1590:	00000097          	auipc	x1,0x0
    1594:	01c080e7          	jalr	x1,28(x1) # 15ac <uart_send_char>
# }
    1598:	00000013          	addi	x0,x0,0
    159c:	01c12083          	lw	x1,28(x2)
    15a0:	01812403          	lw	x8,24(x2)
    15a4:	02010113          	addi	x2,x2,32
    15a8:	00008067          	jalr	x0,0(x1)

000015ac <uart_send_char>:
# 
# void uart_send_char(const char ch) {
    15ac:	fe010113          	addi	x2,x2,-32
    15b0:	00812e23          	sw	x8,28(x2)
    15b4:	02010413          	addi	x8,x2,32
    15b8:	00050793          	addi	x15,x10,0
    15bc:	fef407a3          	sb	x15,-17(x8)
#   while (*uart_out)
    15c0:	00000013          	addi	x0,x0,0
    15c4:	ffe00793          	addi	x15,x0,-2
    15c8:	0007c783          	lbu	x15,0(x15)
    15cc:	0ff7f793          	andi	x15,x15,255
    15d0:	fe079ae3          	bne	x15,x0,15c4 <uart_send_char+0x18>
#     ;
#   *uart_out = ch;
    15d4:	ffe00793          	addi	x15,x0,-2
    15d8:	fef44703          	lbu	x14,-17(x8)
    15dc:	00e78023          	sb	x14,0(x15)
# }
    15e0:	00000013          	addi	x0,x0,0
    15e4:	01c12403          	lw	x8,28(x2)
    15e8:	02010113          	addi	x2,x2,32
    15ec:	00008067          	jalr	x0,0(x1)

000015f0 <uart_read_char>:
# 
# char uart_read_char() {
    15f0:	fe010113          	addi	x2,x2,-32
    15f4:	00812e23          	sw	x8,28(x2)
    15f8:	02010413          	addi	x8,x2,32
#   char ch;
#   while ((ch = *uart_in) == 0)
    15fc:	00000013          	addi	x0,x0,0
    1600:	ffd00793          	addi	x15,x0,-3
    1604:	0007c783          	lbu	x15,0(x15)
    1608:	fef407a3          	sb	x15,-17(x8)
    160c:	fef44783          	lbu	x15,-17(x8)
    1610:	fe0788e3          	beq	x15,x0,1600 <uart_read_char+0x10>
#     ;
#   return ch;
    1614:	fef44783          	lbu	x15,-17(x8)
# }
    1618:	00078513          	addi	x10,x15,0
    161c:	01c12403          	lw	x8,28(x2)
    1620:	02010113          	addi	x2,x2,32
    1624:	00008067          	jalr	x0,0(x1)
